<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FreeThinking&#39;s Blog</title>
  
  
  <link href="http://lishuaiyun.cn/atom.xml" rel="self"/>
  
  <link href="http://lishuaiyun.cn/"/>
  <updated>2023-04-19T14:00:50.814Z</updated>
  <id>http://lishuaiyun.cn/</id>
  
  <author>
    <name>醉心</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>新摄影笔记</title>
    <link href="http://lishuaiyun.cn/2023/04/13/%E6%96%B0%E6%91%84%E5%BD%B1%E7%AC%94%E8%AE%B0/"/>
    <id>http://lishuaiyun.cn/2023/04/13/%E6%96%B0%E6%91%84%E5%BD%B1%E7%AC%94%E8%AE%B0/</id>
    <published>2023-04-13T12:20:21.000Z</published>
    <updated>2023-04-19T14:00:50.814Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-取景"><a href="#1-取景" class="headerlink" title="1 取景"></a>1 取景</h1><h2 id="1-1-焦距"><a href="#1-1-焦距" class="headerlink" title="1.1 焦距"></a>1.1 焦距</h2><h2 id="1-2-透视"><a href="#1-2-透视" class="headerlink" title="1.2 透视"></a>1.2 透视</h2><h1 id="2-曝光"><a href="#2-曝光" class="headerlink" title="2 曝光"></a>2 曝光</h1><h2 id="2-1-白加黑减"><a href="#2-1-白加黑减" class="headerlink" title="2.1 白加黑减"></a>2.1 白加黑减</h2><h2 id="2-2-曝光三要素及互易律"><a href="#2-2-曝光三要素及互易律" class="headerlink" title="2.2 曝光三要素及互易律"></a>2.2 曝光三要素及互易律</h2><h2 id="2-3-曝光模式"><a href="#2-3-曝光模式" class="headerlink" title="2.3 曝光模式"></a>2.3 曝光模式</h2><h2 id="2-4-正确的曝光"><a href="#2-4-正确的曝光" class="headerlink" title="2.4 正确的曝光"></a>2.4 正确的曝光</h2><h2 id="2-5-光线"><a href="#2-5-光线" class="headerlink" title="2.5 光线"></a>2.5 光线</h2><h1 id="3-虚实"><a href="#3-虚实" class="headerlink" title="3 虚实"></a>3 虚实</h1><h2 id="3-1-对焦与景深"><a href="#3-1-对焦与景深" class="headerlink" title="3.1 对焦与景深"></a>3.1 对焦与景深</h2><h2 id="3-2-通过景深实现虚化"><a href="#3-2-通过景深实现虚化" class="headerlink" title="3.2 通过景深实现虚化"></a>3.2 通过景深实现虚化</h2><h2 id="3-3-快门控制虚实"><a href="#3-3-快门控制虚实" class="headerlink" title="3.3 快门控制虚实"></a>3.3 快门控制虚实</h2><h1 id="4-构图"><a href="#4-构图" class="headerlink" title="4 构图"></a>4 构图</h1><h2 id="4-1-构图法"><a href="#4-1-构图法" class="headerlink" title="4.1 构图法"></a>4.1 构图法</h2><h2 id="4-2-摄影构图的一些常识"><a href="#4-2-摄影构图的一些常识" class="headerlink" title="4.2 摄影构图的一些常识"></a>4.2 摄影构图的一些常识</h2>]]></content>
    
    
    <summary type="html">摄影入门书籍，搞懂一些基本概念。</summary>
    
    
    
    <category term="读书分享" scheme="http://lishuaiyun.cn/categories/%E8%AF%BB%E4%B9%A6%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="摄影" scheme="http://lishuaiyun.cn/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>亲密关系</title>
    <link href="http://lishuaiyun.cn/2023/04/13/%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB/"/>
    <id>http://lishuaiyun.cn/2023/04/13/%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB/</id>
    <published>2023-04-13T12:19:03.000Z</published>
    <updated>2023-04-16T05:53:49.437Z</updated>
    
    <content type="html"><![CDATA[<p>最近看了社会心理学书籍《亲密关系》，这本书研究成人之间的友情和爱情，由于内容比较理论化，读起来有些晦涩吃力，所以写一些读书笔记内化总结一下。</p><p>思维导图：<a href="https://www.mubucm.com/doc/43oeJHC0Na6">https://www.mubucm.com/doc/43oeJHC0Na6</a></p><h1 id="1-亲密关系的构成"><a href="#1-亲密关系的构成" class="headerlink" title="1. 亲密关系的构成"></a>1. 亲密关系的构成</h1><p>整本书研究的是亲密关系，第一章主要在进行“亲密关系”概念的相关讨论，起到总-分的作用。包括<strong>亲密关系是什么</strong>、<strong>亲密关系为什么重要</strong>以及<strong>亲密关系的影响因素。</strong></p><h2 id="1-1-亲密关系是什么"><a href="#1-1-亲密关系是什么" class="headerlink" title="1.1 亲密关系是什么"></a>1.1 亲密关系是什么</h2><p>亲密关系是人与人之间存在的一种非常亲密的、信任的、彼此感情牢固的关系。包括友情、爱情、亲情等。</p><p>亲密关系具有<strong>六个方面的特征</strong>：了解、关心、相互依赖性、相互一致性、信任以及承诺。</p><ul><li><strong>了解</strong>：亲密的伴侣彼此间有着广泛而私密的了解。他们熟知彼此的经历、爱好、情感和心愿，而且一般不会把这些信息透露给其他人。</li><li><strong>关心</strong>：亲密的伴侣关心对方，彼此能从对方身上感受到更多的关爱。如果人们认为自己的伴侣了解、理解并欣赏自己，其亲密程度就会增加。</li><li><strong>相互依赖性</strong>：亲密伴侣的相互依赖性是指他们彼此需要的程度和影响对方的程度，这种相互依赖是频繁的（经常影响彼此）、强烈的（彼此都有显著的影响）、多样的（以多种不同的方式影响彼此）和持久的（彼此影响的时间很长）。人际关系变得相互依赖时，一方的行为在影响自己的同时也会影响对方。</li><li><strong>相互一致性</strong>：相互一致性意味着伴侣认同双方在生活上的融合，自称为“我们”，而不是“我”和“他/她”。这种称谓上的变化（从“我”到“我们”）常常标志着人际关系发展到了微妙而又意义重大的阶段，此时新伴侣刚刚认识到彼此间产生了依恋。</li><li><strong>信任</strong>：相信亲密关系不会带来伤害，并期望伴侣能够满足自己的要求。</li><li><strong>承诺</strong>：亲密伴侣通常会承诺他们的亲密关系能够永久地持续，并为此投入大量的时间、人力和物力。</li></ul><h2 id="1-2-亲密关系为什么重要"><a href="#1-2-亲密关系为什么重要" class="headerlink" title="1.2 亲密关系为什么重要"></a>1.2 亲密关系为什么重要</h2><p><strong>建立亲密关系的目的是为了满足归属需要。</strong></p><p>人类是群居动物，根据演化心理学的说法，能够满足归属需要的群居原始人类能生存的概率更大，所以从基因上人类就有建立亲密关系的需要。</p><p><strong>个体需要的亲密关系质量大于数量，只需要几个即可。</strong>归属需要得到满足后，建立人际关系的<strong>内驱力</strong>就会降低。归属需要和伴侣是谁没有太大的关系，只要伴侣能给予持续的关爱和包容，我们的归属需要就能得到满足。所以即使一段亲密关系终结也能找到新的伴侣满足我们的归属需要。</p><p>归属需要的力量在于：亲密关系出现危机我们会魂不守舍；长期处在极度孤单的状态时，会表现出强烈的紧张应激反应；生理益处 身体更加健康；心理健康</p><h2 id="1-3-亲密关系影响因素"><a href="#1-3-亲密关系影响因素" class="headerlink" title="1.3 亲密关系影响因素"></a>1.3 亲密关系影响因素</h2><p>亲密关系的影响因素主要有：<strong>文化影响、个人经历的影响、个体差异的影响</strong>、<strong>人类本性的影响</strong>和人际互动的影响。其中前四种影响比较重要，在后文中也经常出现。</p><h3 id="文化影响"><a href="#文化影响" class="headerlink" title="文化影响"></a><strong>文化影响</strong></h3><p>文化标准影响着人们对人际关系的期望，限定了正常的人际关系模式。 文化标准变化会带动亲密关系变化。如同居文化盛行，结婚年龄越来越大。</p><h3 id="个人经历的影响"><a href="#个人经历的影响" class="headerlink" title="个人经历的影响"></a><strong>个人经历的影响</strong></h3><p>个人经历影响了个体依恋类型的形成。<strong>依恋类型很重要</strong>，这个概念贯穿了全文，在后面每章几乎都会涉及。</p><p><strong>依恋类型：</strong>人们在早期成长过程中形成的、对他人产生情感依赖的稳定模式。</p><p>影响依恋类型形成的因素有两个：忧虑被弃和回避亲密。它们塑造了人们在人际交往中表现出的全部适应性行为。</p><ul><li><strong>忧虑被弃：</strong>对亲密关系抱有担忧情绪。害怕他人认为自己没有价值而远离自己。</li><li><strong>回避亲密</strong>：对他人缺乏信任，个体选择行为上保持独立，情感上刻意远离，通过这样的方式来规避被抛弃感和失落感。</li></ul><p>两个维度划分出4个不同的依恋类型：安全型、痴迷型、疏离型和恐惧型。不同依恋类型的特点如图所示。</p><p><img src="/img/依恋类型.jpg" alt="依恋类型.jpg"></p><h3 id="个体差异的影响"><a href="#个体差异的影响" class="headerlink" title="个体差异的影响"></a>个体差异的影响</h3><p>个体差异主要有<strong>性别差异</strong>、性认同差异、人格差异、自尊差异等。这里重点关注一下性别差异，因为后文多次引用。传统的社会规范下，通常会给不同的性别赋予不同的固有认知：比如男性通常会比女性更能接受短期性关系。这一点不错，但是<strong>两性之间的相似性远大于差异性。</strong>个体差异远大于性别差异，是影响人际交往的更重要的力量。比如不要因为听说“男人比女人在性上更放纵”就只找男性，应该找性放任的个体。</p><h3 id="人类本性的影响"><a href="#人类本性的影响" class="headerlink" title="人类本性的影响"></a>人类本性的影响</h3><p>人类本性的影响强调<strong>演化的作用</strong>。演化塑造着人际关系，潜移默化地使每个人都表现出一定的倾向性。如男性存在父系不确定（不确定孩子是不是自己的），所以男性相比于女性对出轨更加敏感。</p><p>演化心理学在后文中也多次出现。</p><h1 id="2-社会心理学研究方法"><a href="#2-社会心理学研究方法" class="headerlink" title="2. 社会心理学研究方法"></a>2. 社会心理学研究方法</h1><p>研究方法这里内容还挺多，感觉只需要记住两个概念：</p><p><strong>横断设计：</strong>指的是在<strong>某个时间点</strong>上，对多组参与者进行观察和数据采集，以了解不同群体之间的差异和联系。例如通过调查不同年龄段人群的健康状况等。</p><p><strong>纵向设计：</strong>追踪研究方法。强调跨越一段时间对同一个主题的多次观测和数据收集。例如调查相同年龄段人群随着时间其健康状况的变化。</p><h1 id="3-吸引力"><a href="#3-吸引力" class="headerlink" title="3. 吸引力"></a>3. 吸引力</h1><p><strong>吸引力：</strong>吸引力就是魅力，个体的出现对他人的奖赏价值，吸引力越高，他人越想接近我们。</p><p>下面重点介绍影响吸引力的几个因素：临近原则、长相吸引力、相似性、障碍等</p><h2 id="3-1-临近原则"><a href="#3-1-临近原则" class="headerlink" title="3.1 临近原则"></a>3.1 临近原则</h2><p><strong>人们面对面地交往时人际关系奖赏价值更高。多数情况下，友谊和爱情都源自与身边人的交往。</strong></p><p>身边的人通常更具有吸引力，有以下原因：</p><ul><li>容易得到身边人的奖赏：与遥远伙伴交往消耗的金钱和付出的努力成本高而奖赏价值低（异地恋）</li><li>曝光效应：人们对他人或事物的态度随着接触次数的增加而变得更积极的一种现象。</li></ul><p>其中，曝光效应的缺点是过度曝光，熟识能增加吸引力，但过度接触则未必。临近能使我们更喜欢身边的人，然而如果他们令我们厌烦，那么临近只会雪上加霜。</p><h2 id="3-2-长相吸引力"><a href="#3-2-长相吸引力" class="headerlink" title="3.2 长相吸引力"></a>3.2 长相吸引力</h2><p>这点是最通俗易懂的，长的好看优势显而易见。长相吸引力对人们第一印象的形成有着重要的影响。</p><p>长相吸引力有以下特点：</p><ul><li>社会固有偏见：外貌吸引力的刻板印象普遍存在，但具体优势一定程度上取决于文化所强调的价值观。通常情况下，人们会认为长相漂亮的人也会更优秀，给与更多偏爱。</li><li>是否美丽的判断：人们虽然具有不同的审美，但是一致性远大于分歧性。人们通常通过面孔、体型、发型、是否聪明判断一个人是否具有长相吸引力。（不知道智商怎么算进来的…）</li><li>代价与收益：收益是有吸引力的人由于更受欢迎，他们往往不怎么孤独，拥有更好的社交技能，比其他人更快乐些；代价是人们对俊美之人更可能撒谎。为了和美女约会，男人不惜虚报和歪曲自己的兴趣、性格和收入。</li><li>长相匹配：已确定爱情关系的伴侣，他们的长相吸引力往往是类似的，即他们的容貌是相匹配的。除非长相较低的另一方具有显著的其他优势。</li></ul><h2 id="3-3-相似性"><a href="#3-3-相似性" class="headerlink" title="3.3 相似性"></a>3.3 相似性</h2><p>人们更喜欢与自身有同样的背景、兴趣和品位的人。这种相似表现在：</p><ul><li>人口统计学上的相似：年龄、性别、种族、教育程度、宗教信仰和社会地位等。</li><li>态度和价值观</li><li>性格</li></ul><p>相异并不相吸：如果“相异”看起来相互吸引，也许人们是在用一种优势交换伴侣的另一种优势。所以事实上并不相异，因为他们具有类似的适配价值。 比如女性之所以要通过美貌获取期待的资源，是因为她们被剥夺了独立获得政治和经济权力的机会。</p><h2 id="3-4-障碍"><a href="#3-4-障碍" class="headerlink" title="3.4 障碍"></a>3.4 障碍</h2><p>人们具有努力克服障碍以实现期望的基本倾向。父母越是干涉子女的恋爱自由，他们彼此之间就会越加相爱。这种情况下父母最好的行为或许是温和地表达自己的不满，或者干脆听之任之，什么也不做。</p><h2 id="3-5-伴侣接纳自己的可能性"><a href="#3-5-伴侣接纳自己的可能性" class="headerlink" title="3.5 伴侣接纳自己的可能性"></a>3.5 伴侣接纳自己的可能性</h2><p><strong>对未来伴侣的兴趣=伴侣的长相吸引力*伴侣接纳自己的可能性</strong></p><p>也就是说，当你心仪的伴侣对你也很感兴趣的时候，你对她的兴趣一般也会更大。反之，如果她对你完全没有兴趣，则你一般不会表露。伴侣接纳自己的可能性取决于自身的适配价值。</p><h2 id="3-6-总结-理想伴侣的三个特点"><a href="#3-6-总结-理想伴侣的三个特点" class="headerlink" title="3.6 总结 理想伴侣的三个特点"></a>3.6 总结 理想伴侣的三个特点</h2><p>男女都希望伴侣具有以下三个特点：</p><ul><li>热情、忠诚</li><li>吸引力</li><li>社会地位和资源</li></ul><p>但男女之间有具体的差异，一般来说，在伴侣热情、忠诚的基础上，男性更看重女性的长相  &gt;  社会资源。而女性更看重男性的社会资源  &gt;   长相。在演化心理学上的解释是，社会上男性具有更多地资源和社会地位，所以男性更看重长相，而女性需要通过长相换取伴侣具有的社会地位。</p><h1 id="4-社会认知"><a href="#4-社会认知" class="headerlink" title="4. 社会认知"></a>4. 社会认知</h1><p>在亲密关系中，同一个事情可以有很多不同的解释。你的判断可能巩固也可能损害你们之间的关系。这一章重点考察三个问题：人们对伴侣的行为判断怎么影响后来的发展（第一印象、知觉）。如何维护自己在伴侣面前的形象（印象管理策略）。人们对亲密伴侣的影响有多深</p><h2 id="4-1-第一印象"><a href="#4-1-第一印象" class="headerlink" title="4.1 第一印象"></a>4.1 第一印象</h2><p><strong>第一印象很重要。第一次与人短暂的谋面后，对别人所形成的印象深刻而持久，初期的认知在数月之后还影响着人们的判断。</strong>第一印象背后有两个原理：<strong>首因效应</strong>和<strong>验证性偏差</strong>。</p><ul><li><p>首因效应（primacy effect）：又称“第一印象效应”，当我们对某个事物或事情形成印象时，对该事物或事情最先接触到的部分印象更加深刻，从而影响了后续的判断和评价。</p></li><li><p>验证性偏差（confirmation bias）：人们在信息处理中，更倾向于寻找、注意和接受<strong>与自己已有观点和信念相符合的信息，而忽略或否认那些与自己观点相抵触的信息</strong>。这种偏认知的倾向可能会导致人们在决策、判断和推理时犯错误，也容易导致信息的不完整和偏颇。</p></li></ul><h2 id="4-2-知觉"><a href="#4-2-知觉" class="headerlink" title="4.2 知觉"></a>4.2 知觉</h2><p><strong>知觉：</strong>知觉是指我们通过感官器官接收、处理和解释外部环境中的信号，并将其转化为有意义的经验和感知的过程。<strong>不同的处理和解释过程会得到不同的观点。</strong>知觉的影响因素有以下几个：</p><p><strong>积极错觉</strong></p><p>人们经常用积极眼光来描述伴侣，而对伴侣的缺点认为是不重要的。尽量客观的看待伴侣，接收伴侣的缺点。优点是增强双方之间的信任和互相支持。缺点是积极错觉与现实不符合的程度过高会使幻想破灭，不满情绪会与日俱增。</p><p><strong>归因过程</strong></p><p>归因过程是指人们事情发生的原因提出的解释。归因过程中有三个常见的现象：行动者/观察者效应、自我服务偏差和伴侣的归因模式。</p><ul><li>行动者/观察者效应：如果你的伴侣因为工作压力而变得疏离，作为观察者的你很可能倾向于将这种行为原因归因于伴侣的人格特质或态度问题，而忽略了工作压力等外部因素的影响；而作为行动者的伴侣则可能会认为自己的行为是因为工作压力导致的，而并不是因为自己的性格或态度问题。</li><li>自我服务偏差：自我服务偏差是指在解释自己的行为和情况时，人们倾向于将成功归因于自身因素而将失败归因于外部因素的一种认知偏差。比如夫妻双方都认为过错属于对方。</li><li>伴侣的归因模式：伴侣双方总的归因模式决定了亲密关系的满意程度。幸福的配偶对彼此的积极行为都通常给以内部的、稳定的、普遍的归因。他们也倾向于淡化彼此的过失，认为它们是偶然的、特殊的和局部的。</li></ul><p><strong>重构性记忆</strong></p><p><strong>在记忆过程中，个体会根据新的信息不断修订和改写记忆。</strong>如果当前幸福，人们倾向于忘记过去的不愉快；但如果伴侣感到痛苦，亲密关系在走下坡路，人们会低估过去曾经的幸福和情意。</p><p><strong>关系信念</strong></p><p>人们带着人际关系的固有信念步入亲密关系。这种固有信念即自己长期形成的人生观和价值观。</p><p><strong>自我实现的预言</strong></p><p>自我实现的预言（self-fulfilling prophecy）指的是一个人对某种情况的期望会诱导被期望人的行为和态度，使期望变成现实。 通过改变自己的信念和行为可以改变人们对自己的看法。同悲观主义者相比，期望他人值得信赖、慷慨大方、充满关爱的人会发现对方对自己的确很好。</p><p><strong>自我知觉</strong></p><p><strong>自我概念</strong>是我们对自己广泛的自我了解和自尊。在社会交往中，自我概念具有两种不同的功能：自我提升和自我证实。</p><ul><li>自我提升：从他人那里寻求能提升自我概念的反馈，这将使我们相信自己是合乎他人心意、有吸引力、有能力的人。</li><li>自我证实：从他人那里寻求与自我看法一致的反馈，这能证实他们现存的自我概念。</li></ul><p>在婚前谈恋爱的时候，，自我提升是很重要的动机，人人都会寻找喜欢和接纳自己的伴侣。所以，即使有着糟糕自我概念的人也会追求能提供积极反馈的伴侣。</p><p>在婚姻中，人际关系相互依赖更多、投入更多，自我证实的动机居于主导（这种现象叫婚姻转变）。人们需要支持他们自我概念的反馈。具有负面自我形象的人如果发现爱人不断表扬和欣赏他们，他们逐渐会找出各种办法尽可能地逃避自己的配偶：</p><h2 id="4-3-印象管理"><a href="#4-3-印象管理" class="headerlink" title="4.3 印象管理"></a>4.3 印象管理</h2><p><strong>印象管理</strong>：有意识地呈现自己积极有优越的形象，试图影响别人对我们的印象。 如男生故意在女生面前耍帅、哗众取宠。女生在和男生吃饭时有意识地减少吃饭。</p><p><strong>常见的印象管理策略</strong>有逢迎讨好策略、自我推销策略、恐吓策略和恳求策略。逢迎讨好和自我推销都能营造讨人喜欢的社交印象，但另外两种策略则会留下令人讨厌的形象。</p><ul><li><strong>逢迎讨好：</strong>通过讨好和迎合对方的言行举止和情感表达，增加对方的好感度和信任感。恋人间常用的印象管理策略。</li><li><strong>自我推销策略：</strong>通过展示自己的优点、成就和能力等方面，让对方产生积极的评价和认可。职场最常用的印象管理策略。</li><li><strong>恐吓策略：</strong>通过威胁、施压和打击等方式，让对方感受到自己的权威和影响力，达到控制对方的效果。</li><li><strong>恳求策略：</strong>使用恳求显得无能或体弱，以逃避责任或求取他人的帮助和支持。</li></ul><h2 id="4-4-对伴侣的了解程度"><a href="#4-4-对伴侣的了解程度" class="headerlink" title="4.4 对伴侣的了解程度"></a>4.4 对伴侣的了解程度</h2><p>感觉这部分没啥干货。</p><h1 id="5-沟通"><a href="#5-沟通" class="headerlink" title="5. 沟通"></a>5. 沟通</h1><p>沟通的重要性不言而喻。沟通的过程如图所示。</p><p><img src="/img/沟通.jpg" alt="依恋类型.jpg"></p><p>从信息传递者的意图到信息对接受者产生的影响，这中间会涉及多个环节，其中就有可能产生错误或误解。本章分别考察非言语沟通、言语沟通和沟通中遇到的障碍及应对方式。</p><h2 id="5-1-非言语沟通"><a href="#5-1-非言语沟通" class="headerlink" title="5.1 非言语沟通"></a>5.1 非言语沟通</h2><p><strong>非言语沟通的形式</strong></p><ul><li>面部表情</li><li>注视行为：恋人比朋友会更多地相互注视，而朋友比一般熟人也会更多地相互注视。在日常交往中，人们在交谈中倾听的时候更多地看对方（平均有60%的时间注视讲话者），讲话时更少地看对方（约40%的时间看向倾听者）。</li><li>身体动作</li><li>人际距离：亲密区（0cm-46cm，十分亲密的关系）、人际区（46cm-1.2m，一般的人际交往）、事务区（1.2m-3.7m，面试）、公共区（超过3.7m、结构化交往如上课）</li><li>副语言</li></ul><p><strong>非言语沟通的功能</strong></p><p>非言语沟通具有提供信息、调控交往、限定关系性质、人际影响、印象管理五种功能。</p><h2 id="5-2-言语沟通"><a href="#5-2-言语沟通" class="headerlink" title="5.2 言语沟通"></a>5.2 言语沟通</h2><p>写到这里突然觉得这本书的过渡逻辑真的写的太垃了。比如言语沟通，下面直接两个子标题：自我表露和言语沟通中的性别差异。为什么要讲这两点？言语沟通中需要讲的只有这两点吗？为什么要拉出来讲这两点？感觉有点不成体系。每章之间除了一二章剩下的也都互相独立，没有很自然的过渡。姑且这样写吧。</p><h3 id="5-2-1-自我表露"><a href="#5-2-1-自我表露" class="headerlink" title="5.2.1 自我表露"></a>5.2.1 自我表露</h3><p><strong>自我表露（self-disclosure）：</strong>向他人<strong>透露个人信息</strong>的过程就是自我表露，如果两个人彼此之间不共同拥有一些相对秘密的私人信息，他们的关系就称不上亲密。</p><p><strong>自我表露过程</strong></p><p><strong>社会渗透理论：</strong>大多数人际关系是以肤浅的信息交流（即“浅谈”）为起点的，然后再逐渐地转到更有意义的披露。</p><p>其中，沟通范围的拓展体现在沟通的广度和深度。广度指所讨论的话题多样性。深度指所讨论的话题对于双方的个人意义。人际关系从浅层不断拓展宽度和广度的沟通。</p><p><strong>相互作用：</strong>与熟人早期交往的自我表露通常会表现出明显的相互作用（reciprocity）。新伙伴们倾向于匹配彼此的开放程度，<strong>如果对方表露多自己也表露多，如果对方的自我表露减少自己也表露更少。</strong></p><p><strong>策略</strong>：新伙伴们通常<strong>分阶段地</strong>转到更深层次的话题，而不是一步到位。<strong>一次说太多、太快是危险的</strong>（切忌交浅言深）；因为这样会突破别人的期望，常常会给人留下糟糕的印象。最好的策略通常是保持耐心，让可以感觉到的相互作用逐渐地增加你们交往的亲密感。</p><p>两个人要变得亲近，其自我表露需要满足三个条件：</p><ul><li>首先，他们必须进行有意义的自我表露。开诚布公一般有益于人际关系。</li><li>其次，他们必须对彼此的个人信息有兴趣和同理心，在异性恋的关系中如果男性能做到这一点尤其有价值。</li><li>最后一点很重要，双方必须都认识到另一方具有应答性。判断出自己的伴侣理解和关爱自己（即所谓的感知到的伴侣应答性），这是亲密关系发展过程的关键要素。如果我们认为伴侣不关爱、不理解、不尊重自己，就不会把自己的秘密告诉他们。</li></ul><p><strong>禁忌话题：</strong>即使人际关系变得非常亲密，也需要保留一些只属于自己的秘密。但亲密关系中禁忌话题越多，伴侣间的满意度就越低，除非避开敏感话题能改善和保护他们的亲密关系。因为怯懦或能力不足而逃避讨论，会降低伴侣的满意度。</p><p><strong>自我表露原因</strong></p><p>自我披露引起喜爱的原因主要有三点：</p><ul><li>热门倾向于向自己喜欢的人透露更多的个人信息</li><li>对他人进行了自我表露，他们知道我们的秘密从而倾向于喜欢他们</li><li><strong>别人信任我们而对我们进行自我表露，具有奖赏意义</strong>，<strong>这是最重要的一点</strong>。</li></ul><p>有一种自我表露你绝对应该积极地勤加练习：告诉你爱的人你爱他。你诚实表达的钟爱、关心、温情和呵护对于想亲近你的人都是巨大的奖赏</p><p>另外，情侣可能有双方才知道含义的惯用语（idioms），使用的惯用语越多，就越幸福美满。</p><h3 id="5-2-2-言语沟通中的性别差异"><a href="#5-2-2-言语沟通中的性别差异" class="headerlink" title="5.2.2 言语沟通中的性别差异"></a>5.2.2 言语沟通中的性别差异</h3><p><strong>谈话主题</strong>：女性倾向于情感和人物话题，男性倾向于不太亲密和不带私人色彩的话题</p><p><strong>自我表露</strong>：女性具有比男性更多地自我表露，并且女性表露更加开放，<strong>男性对女性的亲密自我表露一般多于同性</strong>。</p><h2 id="5-3-沟通障碍及应对"><a href="#5-3-沟通障碍及应对" class="headerlink" title="5.3 沟通障碍及应对"></a>5.3 沟通障碍及应对</h2><p>直接说出心里话，努力与伴侣沟通并不一定会带来好的结果。我们常常认识不到，在那些听我们唠叨的人的心里面产生了人际隔阂，这会导致他们的误解和困惑。</p><h3 id="5-3-1-产生沟通障碍的原因"><a href="#5-3-1-产生沟通障碍的原因" class="headerlink" title="5.3.1 产生沟通障碍的原因"></a>5.3.1 <strong>产生沟通障碍的原因</strong></h3><ul><li><strong>表述意图</strong>：不幸福的伴侣在表述意图上表现得很糟糕。他们倾向于数怨并诉，因而经常偏离主题。这一点蛮重要，有事说事，针对这次事件中的具体不满之处进行表达，不要含糊细节，以及，不要提及以前不满的事情。</li><li><strong>彼此倾听</strong>：不幸福的伴侣在彼此倾听方面表现得很糟糕。他们很<strong>少有耐心仔细思索伴侣所说的话</strong>，反而仓促地得出结论。不幸福的伴侣比幸福的伴侣更多地以消极方式（反对或转换话题）打断对方的谈话。积极打断是表示赞同或要求解释而打断。</li><li><strong>消极情感：</strong>不幸福的伴侣在交谈时常常表现出消极情感。他们常常对伴侣的抱怨报以讽刺挖苦，贬低和鄙视伴侣的人格。</li></ul><h3 id="5-3-2-对沟通障碍的应对方式"><a href="#5-3-2-对沟通障碍的应对方式" class="headerlink" title="5.3.2 对沟通障碍的应对方式"></a>5.3.2 <strong>对沟通障碍的应对方式</strong></h3><p>对沟通障碍的应对方式对应于上述产生障碍的原因，具体措施有：</p><p><strong>精确表述</strong></p><ul><li><strong>行为描述</strong>：尽可能清楚明白、详细具体地指出惹怒我们的特定行为，伴侣间的沟通就会变得更为明智、准确。不仅能告诉伴侣自己的想法，还<strong>能把谈话重点集中在可处理的、单独的某个行为上</strong>，而<strong>行为比人格更容易改变</strong>。<strong>正确的行为描述专指某一特定事件，不会涉及普遍性</strong>；因而，在沟通中指出问题时不应该使用总是或从不这样的词语。</li><li><strong>第一人称</strong>：应该使用第一人称陈述来明确说明自己的感受<strong>。第一人称陈述的句子以“我”打头</strong>，然后描述清楚明白的情感反应。<strong>这种句式能驱使我们辨识自己的情感</strong>。</li><li><strong>XYZ陈述</strong>：<strong>行为描述和第一人称陈述结合起来</strong>的简单方法是把它们<strong>整合成XYZ陈述</strong>。<strong>XYZ陈述格式如下，“当你在Y情境下做X的时候” （标准的行为描述），“我感到Z”（第一人称陈述）。</strong></li></ul><p><strong>积极倾听</strong></p><ul><li><strong>复述</strong><br>倾听信息时：第一是要准确地理解对方话语所表达的意思，第二是要向对方传达关注和理解，让他知道我们对他的话是在意的。<strong>这两个任务都可以通过复述（paraphrasing）接受到的信息而完成，即用自己的话重复对方的意思，让信息的传递者有机会肯定那就是他真正想要表达的意思。不要简单的重复，而应该重新措辞并复述。</strong></li><li><strong>知觉检验</strong><br>知觉检验是一个人们可以验证自己对于伴侣当下情绪的判断是否正确的方法。在这个过程中，<strong>人们可以对伴侣的情绪进行询问，而不是以自己对的伴侣情绪的感知作为结论。例如“你对我刚才所说的话感到生气吗？”前提是需要具有感知的敏锐度</strong></li></ul><p><strong>守礼且镇定</strong></p><p>顾名思义，有足够的耐心倾听和表述自己的想法。</p><p><strong>尊重和确认</strong></p><p><strong>明确地表现我们对伴侣观点的关心和尊重。</strong>确认并<strong>不需要你一定与伴侣观点一致。</strong>即使与伴侣的观点相左，你也能对其观点表示适当的尊重和认可。如问：“我讨厌你那样做。”答：“是的，我明白你的感受。你说的话有道理。但我希望你也能理解我的感受。”。<strong>即使我们与伴侣持有不同的意见，也不需要虚假或谦卑地屈从伴侣的意见，而应该承认合理性表达尊重，然后委婉地说出自己的想法。</strong></p><h1 id="6-相互依赖"><a href="#6-相互依赖" class="headerlink" title="6. 相互依赖"></a>6. 相互依赖</h1><p>为了得到有价值的人际奖赏，我们会依赖他人，他人亦会依赖我们。在亲密关系的六大要素中，其中一点就是相互依赖，指伴侣之间彼此需要和依赖。</p><h2 id="6-1-相互依赖理论"><a href="#6-1-相互依赖理论" class="headerlink" title="6.1 相互依赖理论"></a>6.1 相互依赖理论</h2><p><strong>相互依赖理论：</strong>每个人都在寻求以最小代价获取能提供最大奖赏价值的人际交往，我们只会与那些能提供足够利益的伴侣维持亲密关系。</p><h3 id="6-1-1-相互依赖理论的三个重要因素"><a href="#6-1-1-相互依赖理论的三个重要因素" class="headerlink" title="6.1.1 相互依赖理论的三个重要因素"></a>6.1.1 相互依赖理论的三个重要因素</h3><p>相互依赖理论的三个重要因素为交往结果、人际关系的期望收益和人际关系的替代收益。</p><p><strong>交往结果</strong>某一特定的人际交往所带来的奖赏和代价之和。具体表达为：</p><p><strong>结果 = 奖赏 - 代价</strong></p><p>其中，奖赏是与他人接触时所获得的令人高兴的经验和物品。如伴侣的接纳。代价是具有惩罚性的、令人不悦的经验。如交往中的心理负担。</p><p>然而，相互依赖理论认为<strong>，人际交往的结果是正还是负并不重要，重要的是评价交往结果的两个标准</strong>。第一个标准是<strong>人际关系的期望收益</strong>，第二个标准是<strong>人际关系的替代收益</strong>。</p><p><strong>人际关系的期望收益</strong>：相互依赖理论假定每个人都有一个与众不同的比较水平（comparison level，CL），即我们认为自己在与他人的交往中应当得到的结果值。当交往结果超出我们的期望收益时，我们会感到幸福。当不满足我们的期望收益时，我们会感到不满满意。也就是说，亲密关系中的满意度<strong>并不仅仅取决于交往结果绝对意义上的好坏</strong>；相反，满意度来自交往结果和比较水平之差，即</p><p><strong>满意度 = 结果 - CL</strong></p><p><strong>人际关系的替代收益</strong></p><p>人际关系的替代收益（comparison level for alternative，CLalt） 是指如果我们抛弃目前的亲密关系，而转投可以选择的更好的伴侣或情境，所能得到的交往结果。 CLalt 决定了我们对亲密关系的依赖程度。如果其他的亲密关系有希望得到比目前的关系更好的收益，即使我们对现状还满意，也有可能离开现在的伴侣去追求更大的收益。另一方面，即使我们对自己目前的亲密关系不很满意，在没有更好的替代选择出现之前，我们也不可能脱离现在的关系。（这不就是备胎原理？）</p><p><strong>依赖度=结果- CLalt</strong></p><h2 id="6-2-亲密关系经济论"><a href="#6-2-亲密关系经济论" class="headerlink" title="6.2 亲密关系经济论"></a>6.2 亲密关系经济论</h2><p>相互依赖理论强调人们彼此提供给对方的关系结果。计算亲密关系的奖赏和代价，能为关系的现状和未来提供非同寻常的信息。</p><h3 id="6-2-1-奖赏和代价的独立性"><a href="#6-2-1-奖赏和代价的独立性" class="headerlink" title="6.2.1 奖赏和代价的独立性"></a>6.2.1 奖赏和代价的独立性</h3><p>奖赏和代价对亲密关系的影响是各自独立，彼此相异的。</p><p><strong>寻求奖赏时</strong>，我们企图满足自己喜好体验的欲望叫做接<strong>近动机（approach motivation）</strong>。</p><p><strong>回避代价时</strong>，我们渴望逃避代价的是另一种不同的驱力，叫做<strong>回避动机（avoidance motivation）</strong>。</p><p>接近和回避动机彼此独立的运转过程意味着亲密关系的快乐和痛苦可能<strong>涉及不同的策略</strong>。</p><p>对于快乐，有一个理论叫做<strong>自我延伸模型</strong>。自我延伸模型认为，人们在选择伴侣和建立亲密关系时，不仅仅是出于对爱情和安全感的需求，还<strong>希望通过这些关系来扩展自己的兴趣、技能和经验，满足自己的成长和发展的需要</strong>。这也是为什么刚刚恋爱的人常常快乐无比而伴侣逐渐熟悉之后（自我延伸变慢）会变得更平庸的原因。所以，<strong>持续创造性地发现个人成长的方法</strong>能够消除关系的沉闷。</p><h3 id="6-2-2-奖赏和代价随时间的变化"><a href="#6-2-2-奖赏和代价随时间的变化" class="headerlink" title="6.2.2 奖赏和代价随时间的变化"></a>6.2.2 奖赏和代价随时间的变化</h3><p><strong>关系紊乱模型：</strong>随着新伴侣发展到<strong>中等程度</strong>的亲密关系时，会有一段<strong>混乱和调整的时期</strong>。伴侣应该学会协调自己的需要和适应彼此。因为随着伴侣在一起的时间越来越多，<strong>他们打断了彼此的生活常规</strong>。比如伴侣一方可能想当然地认为他们会待在家里过周末，而不是接受邀请到外面去约会，这可能干扰另一方的计划。</p><p>此外，排除关系紊乱模型的影响，亲密关系满意度也会有下降，因为伴侣逐渐加深的了解会打破原有刚在一起时不现实的期望。</p><p><img src="/img/关系满意度.jpg" alt="关系满意度.jpg"></p><h2 id="6-3-亲密关系中的贪婪"><a href="#6-3-亲密关系中的贪婪" class="headerlink" title="6.3 亲密关系中的贪婪"></a>6.3 亲密关系中的贪婪</h2><p>相互依赖的实质是为伴侣提供高水平的关系结果，使他们想要留下来。在日常的关系中，根据亲密关系和普通关系的不同，在进行付出与回报中存在两种关系：</p><p><strong>交换关系：</strong>外在的公平交换规范调节。<strong>人们为他人付出期望得到同等的回报</strong>。<strong>交换关系多为陌生人或一般熟人之间的关系。</strong>事务性亲密关系，期望交换很快发生</p><p><strong>共有关系：</strong>特别关注对方的幸福，彼此<strong>不期望任何回报地支持和关照对方。共有关系多为亲密的伴侣或好友</strong>。愿意等待更长时间得到奖赏。</p><p>另一种观点叫做公平关系。</p><ul><li><strong>公平关系：</strong>关系结果对贡献的比率和伴侣的比率相似。即双方的付出和所得相似。公平在某些领域尤为重要。在家务劳动的分配和照料小孩这两个敏感问题上，保证公平是明智之举。</li></ul><h2 id="6-4-承诺本质"><a href="#6-4-承诺本质" class="headerlink" title="6.4 承诺本质"></a>6.4 承诺本质</h2><p><strong>承诺：</strong>持续亲密关系的意图。</p><p><strong>有三个影响承诺的因素：</strong>人际关系期望收益CL、人际关系替代收益Calt和个体在亲密关系中的投入。</p><p>其中前两个因素都已经介绍过，第三个因素投入是指个体在现存亲密关系中的投入程度。无论替代选择的质量如何，也无论个体是否幸福，高投入都会增加承诺。（沉没成本）</p><h1 id="7-友情"><a href="#7-友情" class="headerlink" title="7. 友情"></a>7. 友情</h1><h2 id="7-1-友情属性"><a href="#7-1-友情属性" class="headerlink" title="7.1 友情属性"></a>7.1 友情属性</h2><ul><li><strong>友情和爱情的区别：</strong>友情一般比爱情承担的责任更少，情感强度更弱，排他程度更低。能够普遍的发生在人际关系之间。</li><li><strong>尊重：</strong>当我们尊重别人时，我们会非常钦佩和重视他们。最亲密的朋友往往是我们尊重的人。</li><li><p><strong>信任：</strong>当我们自信地认为朋友会仁慈地对待我们，无私地考虑我们最大的利益时，我们就对他们产生了信任。</p></li><li><p><strong>资本化：</strong>常常能和朋友分享好消息，得到有益于紧密关系的热烈而有价值的反应。</p></li><li><strong>社会支持：</strong>朋友帮助我们克服困难，提供帮助和鼓励等社会支持。社会支持分为有形支持与无形支持。其中无形支持指社会帮助有时候会伴随有情感的代价，如威胁到朋友的自尊，因此最好的援助有时是无形的支持，这不会增添他/她的心理负担。社会支持主要有以下几类：<ul><li>感情支持：关爱、接纳和安慰等形式</li><li>身体安慰：表现为拥抱或搂抱</li><li>建议支持：表现为资讯和指导形式</li><li>物质支持：金钱或物品</li></ul></li><li><strong>应答性：</strong>对朋友的需要和兴趣表现出关注和支持。</li></ul><h2 id="7-2-友情变化"><a href="#7-2-友情变化" class="headerlink" title="7.2 友情变化"></a>7.2 友情变化</h2><p>友谊的形式会随其所处的社会背景（比如朋友是工作中的同事抑或生活中的邻居）、亲密程度、个体的年龄和性别的变化而有所改变。</p><p><strong>童年期：0-12岁</strong></p><ul><li><strong>接纳：</strong>0-9岁儿童进入小学阶段，儿童的发展出被接纳的需要；那些不被同伴充分接纳的儿童会感到被人排斥和孤立。</li><li><strong>亲密：</strong>9-12岁的小学高年级，儿童发展出对亲密的需要，典型表现为关注与自己年龄和兴趣相似的朋友。它以广泛的自我表露为特征，并且在此阶段儿童表现出观点采择、同理心以及利他主义，这些都是成人亲密关系的基础。</li></ul><p><strong>青少年：13-19岁</strong></p><ul><li>性需要</li><li>青少年与家人相处的时间越来越少，而与伙伴相处的时间越来越多</li><li><strong>青少年日益转向朋友来满足自己的依恋需要</strong></li></ul><p><strong>成年早期：20-30岁</strong></p><p>此时期的中心任务是“亲密对孤独”的冲突。正是在这个年龄段，我们学会了怎样建立持久、忠诚的亲密关系。 进入大学后，<strong>学生在家乡建立的友谊逐渐消失，被随后在校园中新建立的人际关系所取代</strong>。大学毕业之后，人们往往只与少数几个朋友交往，但与朋友之间的人际交往层次更深、相互依赖程度更强。</p><p><strong>中年期：31岁-50岁</strong></p><p>当人们有了恋人时，他们与家人和朋友相处的时间会减少。这时会发生<strong>二元退缩现象</strong>：人们与爱人见面的次数越来越多，而探望朋友的次数越来越少。当人们投身于配偶和孩子时，他们的社会生活并不会完全萎缩破灭，<strong>但他们社交活动的重心的确从私人朋友转移到家庭和夫妻共同的朋友上。如果夫妻双方都没有一个共同的朋友，配偶们就会面临更多的婚姻问题。</strong></p><p><strong>老年期：50岁-~</strong></p><p>老年人没有拓展自身人际关系的需求。当人们变老，未来显得越来越有限，他们的社交目标大概更多地指向现在而不是未来，也更注重最大限度地满足自己的情感需要，交际的目标指向友谊的质量而非数量；他们更注重精选出的深厚友情，不愿发生冲突</p><h2 id="7-3-友情差异"><a href="#7-3-友情差异" class="headerlink" title="7.3 友情差异"></a>7.3 友情差异</h2><p><strong>同性友情中的性别差异</strong></p><p><strong>女性之间的友谊</strong>是以<strong>情感分享和自我表露</strong>为其特征的，而<strong>男性友谊</strong>则是围绕着<strong>共同活动、相伴相随和搞笑娱乐</strong>而展开的。<strong>女性在爱情关系之外仍会向朋友寻求敏感、体贴的理解和支持，而男性常常做不到这点</strong>。这是因为<strong>社会文化对男性之间的亲密接纳程度更低</strong>，是社会文化压力之下迫不得已的选择.</p><p><strong>异性友情</strong></p><p>男女之间存在友情，<strong>然而具有伴侣的男女不太可能像单身男女那样拥有亲密友情</strong>，因为与潜在情敌的亲密联系可能对另一方构成威胁。</p><h1 id="8-爱情"><a href="#8-爱情" class="headerlink" title="8. 爱情"></a>8. 爱情</h1><h2 id="8-1-爱情类型"><a href="#8-1-爱情类型" class="headerlink" title="8.1 爱情类型"></a>8.1 爱情类型</h2><p><strong>爱情三角理论</strong></p><p>爱情三角理论认为爱情具有三个重要组成成分，分别是亲密、激情和承诺。</p><ul><li>亲密（intimacy）：包括热情、理解、沟通、支持和分享等爱情关系中常见的特征</li><li>激情（passion）：其主要特征为性的唤醒和欲望</li><li>承诺（commitment）：指投身于爱情和努力维护爱情的决心</li></ul><p>根据爱情三角理论中不同成分的强弱，可以得到8种爱情（2^3），其中最常见的是浪漫狂热之爱和相伴之爱。</p><p><strong>浪漫狂热之爱：亲密和激情</strong></p><p>浪漫狂热之爱是亲密关系中的一种爱恋风格，指的是由激情引发的、热烈而浓烈的爱情。其通常伴有强烈的肾上腺素，能够刺激人的大脑，产生兴奋和甜蜜的感觉。如初恋、暗恋或者是一见钟情所产生的强烈情感体验。甚至恐惧、大量运动后的亲密相处也会产生这种体验。</p><p><strong>相伴之爱：亲密和承诺</strong></p><p>相伴之爱是爱情三角理论中亲密和承诺的结合，相对于浪漫狂热之爱，它更注重情感稳定和长期的承诺。在持续的爱情关系中相伴之爱一般要强于浪漫狂热之爱。</p><h2 id="8-2-爱情的个体和文化差异"><a href="#8-2-爱情的个体和文化差异" class="headerlink" title="8.2 爱情的个体和文化差异"></a>8.2 <strong>爱情的个体和文化差异</strong></h2><ul><li><p><strong>文化：</strong>中国大学生比美国大学生在应该与谁结婚的问题上更可能遵从父母的愿望- </p></li><li><p><strong>年龄：</strong>随着年龄的增加，多数人会变得更成熟。灼热、急迫和强烈的情感随着时间会逐渐变弱，取而代之的是对爱情更为温和、成熟的看法。</p></li><li><p><strong>性别：</strong>男性往往比女性有着更为浪漫的态度体验，他们往往比女性更快地坠入爱河。女性对爱恋的对象更为挑剔，更迟缓地感受到激情，她们将爱慕之情限制在适配价值更高的伴侣身上。<strong>在爱情的三个成分中，激情与男性关系的满意程度有着很高的关联，而承诺则是预测女性满意度的最好成分。</strong></p></li></ul><h2 id="8-3-爱情的持久性"><a href="#8-3-爱情的持久性" class="headerlink" title="8.3 爱情的持久性"></a>8.3 <strong>爱情的持久性</strong></h2><p><strong>人们在结婚之后浪漫的爱情会减弱，幻想、新奇等激情因素会随着婚姻的持续减退</strong>（因为彼此更加了解、并且自我延伸模型中新奇的体验不断减少）。<strong>相伴之爱比浪漫爱情更加稳定，随着我们变老，激情会消退，但亲密和承诺都会增强。</strong>所以，你只要投身于同时是好友的爱人，<strong>如果不再有新奇，就去创造更多的新奇。不要停止寻找新颖、吸引人的共同娱乐的好方法。享受激情，但不要把它作为维持爱情关系的基础。</strong></p><h1 id="9-性爱"><a href="#9-性爱" class="headerlink" title="9. 性爱"></a>9. 性爱</h1><p>亲密的爱情关系往往包含了性的成分，而且我们的性行为和性满足常常取决于爱情关系的性质和健康状态。</p><h2 id="9-1-性态度"><a href="#9-1-性态度" class="headerlink" title="9.1 性态度"></a>9.1 性态度</h2><ul><li><strong>对随意性行为的态度：</strong>随着时代的发展，婚前性行为变得更被人接受。但人们仍然会持有以情感为标准的性认可态度。（建立在亲密关系基础上的性行为态度）。</li><li>对同性恋的态度</li><li>文化差异的性态度</li></ul><h2 id="9-2-性行为"><a href="#9-2-性行为" class="headerlink" title="9.2 性行为"></a>9.2 性行为</h2><p>性行为最重要的特点是：性生活为伴侣双方所期待，并且双方都能得到满足。</p><p><strong>第一次性行为</strong></p><p><strong>一旦伴侣之间发生性关系，其发生的背景会影响性行为的结果。</strong>如果第一次性行为遵循了伴侣明确表达出的爱意和承诺，则伴侣们常常会把它体验成关系的积极发展，能增加彼此的亲密情感。然而，如果第一次性行为没有这样的表达，性行为的结果通常是使关系发生令人讨厌的变化，导致不确定性和悔恨。</p><p><strong>忠诚关系中的性行为</strong></p><ul><li><p>性行为理由</p><ul><li><p>性的情感成分：以性行为作为沟通、传递爱意和忠诚的手段</p></li><li><p>性的肉欲方面：包括从性行为中获得的感官享受和未来伴侣的长相吸引力</p></li><li><p>实用的理由：要实现某些长远目标或完成某些具体目的的愿望</p></li><li><p>不安全的理由：提高个体的自尊或防止伴侣移情别恋。</p></li></ul></li><li><p>性行为次数影响因素</p><ul><li><p>亲密关系性质：同居情侣比夫妻性行为次数更多，情侣比单身性行为更多</p></li><li><p>个体的年龄</p></li><li><p>性取向：亲密关系刚确立时，男同比女同和异性恋者会发生更多的性行为</p></li></ul></li></ul><p><strong>性欲望</strong><br>男性整体上比女性有着更高的性欲望。<strong>女性并不认为免费的宴请就应以性来报答</strong>，但承担所有约会开销的男性却认为女性对浪漫的、最终亲密的关系感兴趣。否则他们就会觉得被人利用并痛恨此事。</p><p><strong>安全明智的性行为</strong></p><p><strong>特殊安全错觉：</strong>大多数人都会认为不幸的事件通常更可能发生在别人身上，而自己不会这么倒霉，所以我们不会采取明智的预防措施，以避免可以预见到的危险<strong>。使用避孕套比不使用避孕套能给伴侣双方传递出更多的尊重、关心和关注。说服你进行不安全性行为的新伴侣，很可能不如乐于尊重你意愿的伴侣珍视你和你们的亲密关系。</strong></p><h2 id="9-3-性满足"><a href="#9-3-性满足" class="headerlink" title="9.3 性满足"></a>9.3 性满足</h2><p><strong>只要夫妻极为忠诚于他们的伴侣关系，珍视一夫一妻制（彼此保持忠贞），他们就可能对性生活满足。</strong></p><p><strong>传统的性行为</strong></p><p>那些支持传统性别角色的人往往想当然地认为，男方采取各种主动措施，女方则按他的要求来行事。<strong>这些期望把女性置于被动的地位，这会损害她们在性生活的自主性</strong>；她们很少能选择性事日程，很少能占据性事的主导权，因此她们在性事上常常不能得偿所愿。剥夺女性的主动权和控制权会削弱她们的性欲望，降低她们的性唤醒，使她们更难获得性高潮，所以她们对性生活没有多大的兴趣。从男性的角度来说，总是处在控制地位也令某些男人不悦。许多男性希望他们自己是其伴侣渴望的有吸引力的目标，期盼他们的爱人能不时地居于主导地位。</p><p><strong>性沟通</strong></p><p>夫妻经常在发生性行为时从来就未曾提及性本身。<strong>如果我们从来不和我们的伴侣真诚、无畏、坦率地探讨我们的性喜好和性厌恶，则会对我们的生活造成巨大的伤害</strong>，其重要原因是：<strong>在性行为上清晰的沟通与更多的性满足有关（那些能坦率谈论性行为的人与那些只会不时地嘟囔抱怨的人相比，前者与伴侣有着更为满足的性互动。 他们会彼此询问双方所期望的动作，感觉良好时会给出反馈，并且一般会指导自己的爱人怎样取悦自己。</strong> </p><p>良好的沟通也有助于我们应对某些尴尬情形，比如我们不想发生性行为，以及我们的意图被人误解。 清楚明确的沟通有时是让这类男性醒悟所必需的——最有效的拒绝是自信果断、前后一致和坚持不懈的。</p><p><strong>性满足与关系满意度</strong></p><p>性满足与关系满意度相辅相成。如果我们对与伴侣的亲密关系并不如意，就不可能对我们的性生活感到满足。反之同理。</p><h2 id="9-4-性胁迫"><a href="#9-4-性胁迫" class="headerlink" title="9.4 性胁迫"></a>9.4 性胁迫</h2><p><strong>性胁迫方式</strong></p><ul><li><p><strong>言辞哄骗：</strong>通过言辞威逼利诱。包括虚假许诺、制造内疚感或者威胁要结束伴侣关系。因为这种侵犯相对而言并不是很严重（不会违法），所以一般不认为是性胁迫；</p></li><li><p><strong>灌醉：</strong>性侵犯表现为通过花言巧语或者将人灌醉而将阴茎插入女性体内。如果女性不积极主动、毅然决然地抵制这种行为，人们就会认为女性也要担当此类行为的部分责任。</p></li><li><p><strong>各种形式的暴力（违法）</strong></p></li></ul><p><strong>如何避免性胁迫</strong></p><ul><li><p>当心把性行为看成角逐某种利益的恋爱对象</p></li><li><p>请远离麻醉类物品</p></li><li><p>下决心坚定地反抗任何性侵犯的苗头：如果情况恶化，能够预先就断然拒绝不正当性行为的女性，不太可能被动地屈从于男性的侵犯</p></li><li><p>在开始亲密交往前，直接、坦率地和伴侣说清楚性界限，这样可以避免不必要的危险。</p></li></ul><h1 id="10-压力与紧张"><a href="#10-压力与紧张" class="headerlink" title="10. 压力与紧张"></a>10. 压力与紧张</h1><p>本章集中探讨对<strong>亲密关系有害的各种陷阱、障碍和危险</strong>。</p><h2 id="10-1-感知到的关系价值"><a href="#10-1-感知到的关系价值" class="headerlink" title="10.1 感知到的关系价值"></a>10.1 感知到的关系价值</h2><p>伴侣对亲密关系的重视达不到我们对他们期望的程度，我们就会受伤。这种受伤的程度<strong>取决于我们期望别人接纳我们的程度</strong>。</p><p>如果你遭到某个团队的拒绝，但在一开始你就不想参加这个团队，那么这对你构成不了什么打击。而当我们期望别人接纳我们，非常在乎别人对我们的看法时，这时的拒绝才更加令人痛苦。<strong>即使别人既接纳又喜欢我们，但达不到我们期望的程度，我们这时仍有可能受到伤害。这正是单恋经常出现的情形</strong>。我们的单恋对象可能反过来也会喜欢我们，但如果我们期望得到的是爱恋而不仅仅是喜欢，他们温和的举动也会令人抓狂。</p><h2 id="10-2-感情创伤"><a href="#10-2-感情创伤" class="headerlink" title="10.2 感情创伤"></a>10.2 感情创伤</h2><p>一般来说，就接纳而言，他人对我们的接纳程度越高，我们越可能获得更好的自我感觉。而就拒绝而言，温和的拒绝和更大程度的拒绝差别不大（因为就未来配偶的反应而论，轻微的厌烦和彻底的厌恶之间通常实际差别并不大）。</p><p><strong>关系贬值：</strong>我们感知到的关系价值减少或者他人对我们的尊重明显下降——带给人的感受尤为可怕，会引起多种痛苦的情绪反应。比如当伴侣背叛我们，我们就会感到悲哀、愤怒和受伤，而受伤感是一种独特的感受，与关系价值的减少有关。</p><h2 id="10-3-伴侣排斥"><a href="#10-3-伴侣排斥" class="headerlink" title="10.3 伴侣排斥"></a>10.3 伴侣排斥</h2><p><strong>排斥（ostracism）</strong>，亲密关系中的人际拒绝，即受到身边人的忽视和“横眉冷对”。<strong>排斥者们往往会冠冕堂皇地认为</strong>他们的排斥行为是一种惩罚伴侣、避免对抗或者在冲突之后平复心绪和低调处理的有效手段。<strong>事实上，当排斥的伴侣保持沉默时，只有极少的人会进行解释，这样被排斥的伴侣往往对排斥的原因一无所知。他们只知道自己被人拒绝了，他们体验到的情感更多是愤怒、沮丧和伤害，而不是内疚和悔恨。</strong>因此，被排斥者一般并不认为伴侣的退避行为是友善或者有效之举，相反，他们通常认为<strong>排斥只会损害他们的亲密关系</strong>。</p><h2 id="10-4-嫉妒"><a href="#10-4-嫉妒" class="headerlink" title="10.4 嫉妒"></a>10.4 嫉妒</h2><p>嫉妒：由于现实或臆想中的竞争对手而使珍贵的亲密关系面临丧失，引起一种消极的情感体验。界定妒忌最恰当的三种情感是：伤害、愤怒和恐惧</p><p><strong>嫉妒的两种类型</strong></p><ul><li><p>反应性嫉妒：反应性嫉妒是指人们在觉察到自己所珍视的亲密关系面临实际的威胁时产生的嫉妒心理</p></li><li><p>怀疑性嫉妒：怀疑性嫉妒是指伴侣并没有不端行为，个体只是由猜疑所引起的嫉妒。</p></li></ul><p>两种嫉妒的界限比较模糊，所以只考察共性问题，而不分别讨论。</p><p><strong>容易嫉妒的人</strong></p><ul><li><p><strong>Calt很低：</strong>当人们的替代伴侣很糟糕时，就会感到非常需要当前的伴侣，任何足以威胁他们亲密关系的事件或行为都是致命的。</p></li><li><p><strong>适配价值不足：</strong>如果伴侣一方比另一方条件更好，比如外貌上更有吸引力、更富有或更有才华，较弱一方的适配价值就较低，这就可能出现问题。这就是婚配要讲究门当户对的另一个原因，人们总是与具有类似适配价值的人共结连理。</p></li><li><p><strong>依恋类型：</strong>痴迷型比其他类型的人会体验到更多的嫉妒</p></li></ul><p><strong>被嫉妒的人</strong></p><p>什么样的情敌容易被嫉妒，取决于伴侣看重什么。女性比男性更关心伴侣的资源，自信、强势、果断和富有的、甚于仅仅外貌非常英俊的男人容易被嫉妒。</p><p><strong>被嫉妒的事物</strong></p><p>男性一想到伴侣在性事上的不贞就会激起最强烈的嫉妒，而女性对伴侣感情上的不贞反应更强烈。（因为父系不确定的演化以及社会男女资源不均的演化）</p><p><strong>对嫉妒的反应</strong></p><p>如果不贞的配偶是女方而非男方，人们一般会认为出轨一方更可能在感情上依恋第三者。男性比女性更可能探查不正当关系的性本质，而女性比男性更可能探查询问其感情本质。</p><p>有时人们的嫉妒反应本意是要保护亲密关系，但往往事与愿违，反而损害了亲密关系：暗中监视伴侣，限制伴侣的自由，或者诋毁和威胁情敌。在心生嫉妒时，对亲近感到相对轻松自在的人（即有着安全型或痴迷型依恋的人）更可能表达自己的忧虑并努力修复亲密关系。</p><p><strong>应对嫉妒</strong></p><p>不论你是否拥有自己伴侣的爱恋，<strong>如果你不能确信自己是个有价值的人，那么这很可能危及你和伴侣的健康。</strong></p><ul><li><p><strong>减少社交网站的使用：</strong>如果你发现自己在网上到处窥探伴侣的信息，由此导致完全没有必要的担忧，你可能就需要离开电子屏了</p></li><li><p><strong>依靠自己：</strong>拒绝沉溺于不公平的情境，而努力保持“清醒”的头脑，避免产生愤怒或尴尬的情绪体验。</p></li><li><p><strong>增强自己：</strong>为自己做一些美好的事情，思考自己的优秀品质，从而提升个体的自尊。</p></li></ul><h2 id="10-5-欺骗"><a href="#10-5-欺骗" class="headerlink" title="10.5 欺骗"></a>10.5 欺骗</h2><p><strong>欺骗原因</strong></p><ul><li><p><strong>夸大自己的吸引力：</strong>男性更可能不如实地报告他们的抱负和收入，谎称自己对感情忠诚。女性更可能做出性事的许诺却不兑现。</p></li><li><p><strong>为了对方的利益：</strong>保护被欺骗者的感情或者增加他们的利益。如当你的伴侣询问她的妆容是否好看时，假如你真的不喜欢，通常不会直言相告。</p></li><li><p><strong>保持与别人礼貌和友好的交往：</strong>我们常常声称同意别人的看法，但实际上并非如此，我们常常会说某些事令我们很开心，但实际上并没有那么开心。</p></li></ul><p><strong>欺骗被识破的可能</strong></p><ul><li><p>动机水平：非常渴望谎言能成功的人一般比对谎言成败不太在乎的人更容易让人察觉。<strong>尤其在人们想通过说谎给自己心仪的异性留下好印象时，往往最容易被人识破</strong>，谎言的接受者和任何旁观的人都了然于胸。</p></li><li><p>非言语行为：人们说谎时常常吞吞吐吐、音调较高、犯很多语法错误、发生口误</p></li><li><p>对伴侣欺骗行为的察觉：伴侣之间对彼此行为更加敏感。但他们也会信任彼此（否则他们的关系就可能不太亲密），这就使得他们表现出事实偏见（truth bias），即认为伴侣一般都在讲真话。</p></li></ul><p>在人们认为最有奖赏价值的亲密关系中，伴侣很少说谎，部分原因是说谎侵犯了共同期望的诚实和信任。要保守秘密并不容易。即使你的谎言没有被揭穿，它们也会破坏亲密关系的氛围，引起没有根据的猜忌和怀疑。</p><h2 id="10-6-背叛"><a href="#10-6-背叛" class="headerlink" title="10.6 背叛"></a>10.6 背叛</h2><p>背叛：我们信任的人做出的讨厌的、伤害人的行为，并且在情理上我们根本预期不到这种背信弃义的不端行为。</p><p><strong>竞争性需求</strong></p><ul><li><p>不同亲密关系的竞争性需求：<strong>当人们试图同时忠诚于数个不同的亲密关系时，竞争性需求就不可避免。</strong>当义务出现交叉重叠，偶尔违背某一特定的亲密关系就不可避免。<strong>比如，如果你的两位密友计划同一天在不同的城市举行婚礼，你必然会令一位好友失望，即使你根本不想令他失望。</strong></p></li><li><p>同一亲密关系中的竞争性需求：好友前妻和他最好的朋友同居。亲密关系的诚实和坦率要求我告诉朋友，他的其他朋友（或者说他前妻）的背叛行为。然而，关爱和同情准则又表明，不要让他背负痛苦和尴尬的背叛消息，因为他对此无能为力。这是一种没有人能赢的情境。</p></li></ul><p><strong>背叛的个体差异</strong></p><p>男性更可能背叛自己的爱侣和生意伙伴，而女性更可能背叛她们的朋友和家人</p><p><strong>应对背叛</strong></p><ul><li><p>勇敢地正视背叛而不否认它的存在</p></li><li><p>以积极的眼光重新解释背叛，并把它作为促进个人成长的动力</p></li><li><p>依靠朋友，寻求支持</p></li></ul><h2 id="10-7-宽恕"><a href="#10-7-宽恕" class="headerlink" title="10.7 宽恕"></a>10.7 宽恕</h2><p>有时被背叛的伴侣会感到自己迫切需要实施某种残酷的报复，他们会反复思考自己遭遇的不公正待遇，通常不如那些宽厚仁慈的人过得幸福；他们心怀怨恨，不忘旧恶，根本不能忘记过去，开始新的生活。（不忘掉仇恨就会一直活在过去，沉溺在不幸福的回忆中）</p><p><strong>宽恕的构成要素</strong></p><ul><li><p>谦卑、真诚的道歉<br>如果背叛者承认他们的错误，承担责任，为他们的不端行为表示羞愧、悔恨和自责以真诚地赎罪，并发誓未来表现更好，受害者更有可能宽恕那些背叛他们的人</p></li><li><p>受害者一方的同理心<br>那些能够站在伴侣的角度并想象伴侣为什么会那样做的人（特别是那些能设想自己实施背叛行为的人）与缺乏同理心的人相比，更有可能宽恕伴侣。</p></li></ul><p><strong>优势</strong></p><p>如果人们得到宽恕，他们一般会变得更为悔恨，这使他们不太可能重复犯错</p><p><strong>局限性</strong></p><p>如果伴侣偶尔有不良行为并且值得原谅，那么宽恕有益，但如果伴侣没有悔意，宽恕实际上有害，会削弱你的自尊，延缓任何问题的解决。</p><h1 id="11-冲突"><a href="#11-冲突" class="headerlink" title="11. 冲突"></a>11. 冲突</h1><p>本章考察亲密关系的冲突。研究冲突的本质和起源。冲突如何展开、怎样升级、人们怎样才能有效地解决冲突。我们还要思考冲突是否有益于亲密关系。</p><h2 id="11-1-冲突的性质"><a href="#11-1-冲突的性质" class="headerlink" title="11.1 冲突的性质"></a>11.1 冲突的性质</h2><p>只要个体的动机、目标、信念、观点或行为妨碍别人或者与别人矛盾，就会发生人际冲突</p><p><strong>冲突为什么是不可避免的</strong></p><ul><li><p>任何两个人在情绪和偏好上都会<strong>不时地</strong>存在差别</p></li><li><p>亲密关系中总交织着一定的张力，它们迟早会引起一些紧张</p><ul><li><p>自主性对联系性<br>自由独立自主地行事与和伴侣亲密联系之间存在矛盾，这两者都需要。<strong>所以人们更多地受最近没有得到满足的需要和动机的影响，而其偏好则会随之来回摇摆。</strong></p></li><li><p>开放对封闭<br>亲密的伴侣们期望能相互分享他们的思想和情感。然而，人们也希望有自己的隐私。</p></li><li><p>稳定对变化<br>熟悉和陌生的事物对人们都有吸引力，过分呆板僵化的可预测性会使爱情变得平庸而单调，这就会产生偶尔的犹豫不决和冲突。</p></li><li><p>聚合对分离</p></li></ul></li></ul><p><strong>冲突频率</strong></p><ul><li><p><strong>人格：</strong>高神经质的人比较敏感，更容易发生矛盾</p></li><li><p>依恋类型：忧虑被弃的人更怕伴侣离开自己，因此会产生更多的矛盾。</p></li><li><p><strong>生命阶段：</strong>如果你是年轻人，你与伴侣的冲突或许比过去更多</p></li><li><p><strong>相似性：</strong>冲突起源于不一致。伴侣之间的相似性低会产生更多的矛盾</p></li><li><p><strong>酒精</strong></p></li></ul><h2 id="11-2-冲突的过程"><a href="#11-2-冲突的过程" class="headerlink" title="11.2 冲突的过程"></a>11.2 冲突的过程</h2><p><strong>引发冲突的事件</strong></p><ul><li><p><strong>批评：</strong>行为人的评论或行为所要表达的内容并不重要，<strong>要紧的是目标把这种行动诠释为不公平的吹毛求疵</strong>。比如东西摆放位置、是否及时做了家务。</p></li><li><p><strong>无理要求：</strong>无理要求指看来不公平的索取，因为它超过了伴侣们彼此的正常期望。即使你为了完成了一项重大工程疯狂工作，却要求伴侣连续三个晚上做饭和洗碗，这会使伴侣不安。</p></li><li><p><strong>拒绝：</strong>拒绝（rebuffs）指 “一方请求另一方做出期待的反应，而另一方没有像预期的那样行动”。一方在接受到自己伴侣的性暗示后，在床上翻了下身又睡着了，伴侣就会感到被拒绝。</p></li><li><p><strong>累积的烦恼（cumulative annoyances）</strong>：相对轻微的事件不断重复变得恼人。比如男生对女生多次约会的迟到反应</p></li></ul><p><strong>伴侣对冲突的解释</strong></p><p><strong>自我服务偏差</strong>使当事人对自己行为做出更好的评价。冲突出现时，亲密伴侣对他们挫折所做出的解释，就会严重影响到他们的苦恼和愤怒程度。善意的归因用有利的眼光来看待伴侣，使得冲突更可能得到解决，这就是这类归因能增进亲密关系持续满意度的一个原因。当我们判断伴侣能改变有害的行为时，我们就更可能说出我们的不满，建设性地寻求解决冲突的方法</p><p><strong>掌控愤怒</strong></p><p>在亲密关系中，人们期望从伴侣那里得到慷慨、宽容的对待，咄咄逼人地展示损怒只会反过来让伴侣也变得愤怒。并且当你感到愤怒时表达出愤怒会让你更愤怒。如何掌控愤怒？</p><ul><li><p>换一种思维：思考伴侣在不想伤害你的前提下为什么这么做</p></li><li><p>冷静一下：暂时离开房间，尽快地平静下来，然后再投入冲突。</p></li><li><p>寻找幽默：幽默无法和愤怒共存，可以积极寻求幽默抵消愤怒。</p></li></ul><p><strong>介入冲突</strong></p><ul><li><p>避免冲突</p><ul><li><p>激发事件微不足道，不值得积极地争执</p></li><li><p>问题看来很难处理，冲突没有任何好处</p></li></ul></li><li><p>介入冲突</p><ul><li><p>协商</p></li><li><p>升级</p></li></ul></li></ul><p><strong>要求/退避模式</strong></p><p>一方（要求者）批评、不断唠叨、向另一方提出要求，而伴侣（退避者）逃避正面接触、退避、采取守势。在全世界，多数情况下女性是要求者而男性是退避者</p><p><strong>协商和顺应</strong></p><p>当爱恋中的伴侣最后头脑冷静下来，通常会进行协商。伴侣们宣告他们的立场并一起努力明智地解决冲突。</p><ul><li><p>协商</p><ul><li><p>保持乐观：积极期望有助于达成共识</p></li><li><p>尊重自己及伴侣的意见</p></li><li><p>在激烈的讨论中偶尔暂停一下</p></li></ul></li><li><p>顺应：双方都表现出破坏性冲突反应时亲密关系就很危险，当伴侣表现出破坏性的行动时，另一方能保持顺应难能可贵。顺应就是抑制同样破坏性行动的冲动，努力的镇静和忍耐。</p></li></ul><p><strong>应对冲突</strong></p><p>争执到底能促进还是侵蚀伴侣的满意度取决于争议进行的方式。争议方式分为4种。最普遍的婚姻模式中夫妻双方都是确认型，是夫妻群体中最满意的。</p><ul><li><p><strong>多变型：</strong>多变型常常表现出很高水平的负面情感，但他们能充分运用智慧和真来缓和愤怒。</p></li><li><p><strong>确认型：</strong>确认型的伴侣相比于多变型更加镇静，讨论或许很激烈，但他们常常通过表达同理心、理解对方的观点来彼此确认。</p></li><li><p><strong>逃避型：</strong>逃避型的夫妻很少争吵。他们回避正面对抗，如果他们真要讨论他们的冲突，也非常温和谨慎。</p></li><li><p><strong>敌对型：</strong>敌对型的讨论充斥着批评、蔑视、防卫和退避，讨论的时间越长，他们就会变得越压抑。</p></li></ul><h2 id="11-3-冲突的结果"><a href="#11-3-冲突的结果" class="headerlink" title="11.3 冲突的结果"></a>11.3 冲突的结果</h2><p><strong>冲突的结束</strong></p><p>常见的冲突结束有5种结果。</p><ul><li><p><strong>分离：</strong>分离指伴侣一方或双方在冲突没有解决时就退出的冲突结束方式。分离可以结束愤怒的会晤，并且时间上的分隔能使争斗双方头脑冷静，使双方能更有建设性地思考他们的处境。然而它提不出解决问题的方法，只是延迟了未来的不和。</p></li><li><p><strong>支配：</strong>支配（domination）指伴侣一方得逞，另一方停止反抗的冲突结束方式。另一方更强大情形下，强势方通常对这样的结果感到满意。但失败者对于支配是非常反感的，心中可能会滋生敌意和憎恨</p></li><li><p><strong>妥协：</strong>妥协（compromise）指双方都降低期望以找到双方都能接受的替代办法来结束冲突。当一方所得只有在对方蒙受损失的情况下才能实现时，妥协才可能是解决冲突的最好方式。</p></li><li><p><strong>整合式一致：</strong>伴侣们需要对他们的愿望进行改进并按重要性排序，做出选择性的让步，发现不强加于伴侣的、实现目标的新方法。</p></li><li><p><strong>结构性改善：</strong>结构性改善（structural improvement）指伴侣不仅得到他们想要的，而且从中得到学习和成长。</p></li></ul><p><strong>冲突的益处</strong></p><p>冲突能暴露潜在的问题和矛盾，这样才有可能寻求解决方法。<strong>不要避免冲突</strong>，成功的冲突包括自我控制，自我控制需要三个“不要”</p><ul><li><p><strong>不要退避：</strong>你的伴侣提出关心的问题或抱怨时，戒心重重地逃避冲突是令人讨厌的，不能解决任何问题。可以请求对方重新安排更方便的时间来讨论冲突。</p></li><li><p><strong>不要消极：</strong>遏制你的讥讽、克制你的轻视、丢弃你的厌恶。粗鲁、暴躁和刻薄的行为对你的亲密关系具有很强的侵蚀作用</p></li><li><p><strong>不要陷入负面情感相互作用的怪圈：</strong>请注意，当你意识到你和伴侣正在你来我往地破口大骂，侮辱和谴责变得越来越强烈时，<strong>请停止。休息10分钟，做好准备，平静下来，再返回你的讨论并为上次的过激言辞道歉。</strong></p></li></ul><h1 id="12-权力与暴力"><a href="#12-权力与暴力" class="headerlink" title="12. 权力与暴力"></a>12. 权力与暴力</h1><h2 id="12-1-亲密关系中的权力"><a href="#12-1-亲密关系中的权力" class="headerlink" title="12.1 亲密关系中的权力"></a>12.1 亲密关系中的权力</h2><p>运用相互依赖的观点来描述权力构筑的基础、权力行使的过程和使用权力导致的结果。</p><h3 id="12-1-1-权力的来源"><a href="#12-1-1-权力的来源" class="headerlink" title="12.1.1 权力的来源"></a>12.1.1 <strong>权力的来源</strong></h3><p><strong>权力是建立在对有价值资源控制的基础上。</strong>如果我控制了你想拥有事物的使用权，你可能就会心甘情愿地服从我的指令，以便得到你想拥有的事物，那么我就对你拥有权力。</p><h3 id="12-1-2-权力的特点"><a href="#12-1-2-权力的特点" class="headerlink" title="12.1.2 权力的特点"></a>12.1.2 <strong>权力的特点</strong></h3><ul><li><p><strong>拥有权力的人未必拥有人们渴望得到的资源；他/她只要拥有控制人们获得这些资源的能力就已足够。</strong><br>如你很想买某个东西，朋友虽然没有该商品，却拥有金钱，那他就拥有了控制力</p></li><li><p><strong>只有在他人想要得到某些资源的情况下，个体才能从控制的资源上得到权力。</strong>朋友对你的控制力取决于你多想获得该商品，个体的欲望助长了另一个人的权力。<strong>在爱情关系中，投入较少的伴侣通常拥有更多的权力</strong></p></li><li><p><strong>所渴望资源的替代来源易得性：如果很多朋友都能借给你钱，那你的选择会更加从容。更加依赖就意味着权力更少，如果伴侣一方的替代选择很少，另一方却很多，权力就会出现更大的不平衡。</strong>可获得的替代选择上的差别可以解释为什么在传统婚姻中男性一般女性更强权。</p></li></ul><h3 id="12-1-3-权力类型"><a href="#12-1-3-权力类型" class="headerlink" title="12.1.3 权力类型"></a>12.1.3 <strong>权力类型</strong></h3><p>奖赏权力、强迫权力、合理权力、参照权力、专家权力、信息权力</p><h3 id="12-1-4-男女两性对权力的控制"><a href="#12-1-4-男女两性对权力的控制" class="headerlink" title="12.1.4 男女两性对权力的控制"></a>12.1.4 男女两性对权力的控制</h3><p>男女得到权力的不同源于对资源控制的不同，一般情况下，男女权力不等，主要有三点原因</p><ul><li><p><strong>男性和女性一般面临着相对资源的差异：</strong>金钱作为权力源比其他任何资源的运用都要灵活。普遍性的资源几乎能在非常广泛的情境下与任何人交换，不管是谁控制了它们都有很大的自由来决定用它做什么（和谁一起做）特殊性的资源在特定的情境中很有价值，但在其他情境则并非如此，它们只能针对特定的伴侣赋予其拥有者权力。</p></li><li><p><strong>社会规范支持并维持男性的支配地位：</strong>如果女性处在领导岗位，直截了当地命令别人行事，人们对她们的评价常常比对男性更苛刻</p></li><li><p><strong>男女平等的标准</strong>：男女平等的标准是不确定的。男性通常在重大决策时更具有话语权。</p></li></ul><h3 id="12-1-5-权力的过程"><a href="#12-1-5-权力的过程" class="headerlink" title="12.1.5 权力的过程"></a>12.1.5 权力的过程</h3><p>权力表达有三种方式：谈话、非言语行为、权力风格</p><p><strong>谈话</strong></p><p>两人之间的谈话可能会受到双方权力平衡的影响。比如男性谈话中权力更大，因为女性能容许自己更多地被男性<strong>打断</strong>，而不是反过来打断男性。</p><p><strong>非言语行为</strong></p><p>权重之人较权轻之人的人际距离更大，表现更丰富的面部表情，姿势更不对称，占据更大的空间。</p><ul><li><p>性别差异<br>女性在判断他人情绪和意图方面一般比男性更精确</p></li><li><p>权力大小差异<br>个体非言语的敏感性还与他/她权力的大小有关。社会地位低的员工通常对社会地位高的领导感情变化更加敏感，反之领导不需要关注下属变化。</p></li></ul><p><strong>权力风格</strong></p><ul><li>直接/间接：人们对自己的亲密关系越满意，就越有可能采用直接的策略。</li><li><p>追求目标时和伴侣互动的程度，有权力的人更倾向于使用双边策略</p><ul><li><p>双边策略：人们寻求伴侣的互助合作，他们的策略就是双边的，涉及伴侣双方。</p></li><li><p>单边策略：人们会采用单边的独立行动，在不牵涉伴侣的情况下做他们想做的。（因为权力不足的情况下无法要求别人一起行动）</p></li></ul></li></ul><h3 id="12-1-6-权力的两面性"><a href="#12-1-6-权力的两面性" class="headerlink" title="12.1.6 权力的两面性"></a>12.1.6 权力的两面性</h3><ul><li><p><strong>积极面：</strong>忠诚、幸福的爱人常常利用他们的影响力来使他们的伴侣获益，从而提升而非损害他们相互之间的亲密关系</p></li><li><p><strong>阴暗面：有些人（大部分是男性）努力想成为他们亲密关系中的胜利者，他们往往是控制欲强、刚愎自用的人，其伴侣通常不幸福。</strong>权力对于他们很重要，如果他们不能通过更为合理的影响力来得偿所愿，他们就可能痛苦地但有时却很有效地利用暴力来施加控制。</p></li></ul><h2 id="12-2-亲密关系中的暴力"><a href="#12-2-亲密关系中的暴力" class="headerlink" title="12.2 亲密关系中的暴力"></a>12.2 亲密关系中的暴力</h2><h3 id="12-2-1-亲密关系中的暴力种类"><a href="#12-2-1-亲密关系中的暴力种类" class="headerlink" title="12.2.1 亲密关系中的暴力种类"></a>12.2.1 亲密关系中的暴力种类</h3><ul><li><p>情境性伴侣暴力（situational couple violence，SCV）：情境性伴侣暴力是从失去控制的剧烈冲突中突然爆发。当伴侣双方都变得愤怒陷于特定争执时，就会发生SCV，所以它只是偶尔发作，通常比较温和，不太可能升级为严重威胁生命的身体攻击。</p></li><li><p>亲密恐吓（intimate terrorism，IT）：伴侣一方把暴力作为控制和压迫另一方的工具，对伴侣的伤害很严重。亲密恐吓通常更加隐蔽，使用的手段可能是威胁、恐吓、恶言相向、限制行动等，目的在于通过对对方的控制，得以获得自己的利益和满足自己的需求。因此，亲密恐吓更多地是一种操纵和控制行为，而不是要立刻对对方施暴。</p></li><li><p>暴力抵抗（violent resistance）：指伴侣有力地对亲密恐吓进行反击</p></li></ul><h3 id="12-2-2-暴力相关因素"><a href="#12-2-2-暴力相关因素" class="headerlink" title="12.2.2 暴力相关因素"></a>12.2.2 暴力相关因素</h3><p><strong>情境性伴侣暴力影响因素</strong></p><ul><li><p>激发因素（instigating triggers）<br>情境性伴侣暴力的路径始于引起伴侣一方或双方争吵或愤怒的激发因素</p></li><li><p>促动因素（impelling influences）</p><ul><li><p>个体生命早期的事件<br>使人倾向暴力的因素源于个体生命早期的事件。比如，幼时目睹父母之间的暴力，长期接触太多攻击性的媒介（如暴力电影和视频游戏），这样的人更可能实施IPV</p></li><li><p>持久的个人特征<br>脾气暴躁、容易发怒或者神经质得分高的人也都容易发生亲密暴力。</p></li><li><p>伴侣之间的互动模式<br>沟通技能低下的伴侣或依恋类型不匹配的伴侣也更可能发生IPV</p></li><li><p>环境<br>工作或学习上的压力或者闷热、嘈杂、不舒服的环境也会让人变得易怒。</p></li></ul></li><li><p>抑制因素（inhibiting influences）<br>抑制因素可以抵消攻击的强烈欲望。如男女平等的社会文化，尽责的人、清醒的人</p></li></ul><p><strong>亲密恐吓</strong></p><ul><li><p>采取暴力和伤害威胁只是防止伴侣离开自己的拙劣手段</p></li><li><p>反社会或相当自恋，暴力只是他们用来达成心愿的工具</p></li></ul><p><strong>暴力抵抗</strong></p><ul><li><p>暴力基本原理<br>所有男性都认为他们的行为是对伴侣不敬的合乎情理的反应，都提到他们伴侣的挑衅才是他们虐待的起因。他们还感到男性理应比女性强势、优秀，所以他们有权利使用暴力来控制和处罚女性。</p></li><li><p>受伤者不离开的原因<br>她们不离开是因为尽管存在虐待，但是她们并不认为离开对她们更有好处</p></li></ul><h1 id="13-亲密关系解体"><a href="#13-亲密关系解体" class="headerlink" title="13. 亲密关系解体"></a>13. 亲密关系解体</h1><h2 id="13-1-离婚率上升的原因"><a href="#13-1-离婚率上升的原因" class="headerlink" title="13.1 离婚率上升的原因"></a>13.1 离婚率上升的原因</h2><ul><li><p>我们渴望从婚姻中得到更多，对婚姻持有更高的期望标准</p></li><li><p>上班的女性在经济上更为自由，有更多的机会接近有吸引力的替代伴侣，在工作和家庭之间面临的冲突日益严峻</p></li><li><p>兴起的个人主义和社会流动性使我们与阻遏离婚的社区规范联系更少，也更少受到它的影响</p></li><li><p>新制定的法律使得离婚更为大众接受，离婚的程序也更简单</p></li><li><p>随意的同居削弱了婚姻的承诺</p></li><li><p>离婚家庭的孩子在他们长大后更可能离婚</p></li></ul><h2 id="13-2-离婚征兆"><a href="#13-2-离婚征兆" class="headerlink" title="13.2 离婚征兆"></a>13.2 离婚征兆</h2><p>有人提出各种模型来详细解释离婚的某些根源，本节介绍各种模型的理论和研究结果</p><p><strong>障碍模型</strong></p><p>障碍模型的重大贡献在于强调了一个事实：本想分手的不幸伴侣却因为离开的代价太大而往往仍然在一起。”</p><ul><li><p>影响关系破裂的三种因素</p><ul><li><p>吸引力</p></li><li><p>个体拥有的替代选择</p></li><li><p><strong>亲密关系周围的障碍 社会压力、道德障碍、经济负担等</strong></p></li></ul></li></ul><p><strong>脆弱-应激-适应模型</strong></p><p>我们婚姻的质量取决于我们是谁（脆弱）、我们遭逢的环境（应激）和我们应对环境的方式（适应）三者的相互作用</p><ul><li><p>脆弱<br>脆弱（易受伤害性），个体对婚姻的负面特质。可能包括个体成长家庭里的不幸经历、受教育程度低、适应不良的人格特质、拙劣的社交技能或者对婚姻起反作用的态度。这些特征并不会使离婚必然发生，但它们会严重影响伴侣所遭遇的环境，还会影响到人们应对紧张的适应过程</p></li><li><p>应激<br>应激，压力事件。有些应激源（比如一段时期的失业或重病在身）只会发生在某些特定的婚姻上，但另一些应激源（比如怀孕、分娩和养育）则普遍存在。伴侣必须应对和适应应激事件，处理得不好，累计的不满就会引起婚姻的不稳定和离婚。</p></li><li><p>适应<br>模型具有反馈结构，成功适应的能力可以让我们变得更加坚强。</p></li></ul><p><strong>亲密关系适应过程（PAIR）项目</strong></p><p>亲密关系适应过程（Processes of Adaptation in Intimate Relationships，PAIR）</p><p>婚姻失败的三种解释：</p><ul><li><p>持续的动力<br>持续的动力（enduring dynamics）模型，认为伴侣把求爱期间就浮现出的问题、矛盾及持续的脆弱带入了他们的婚姻之中，这种婚姻一开始就更加脆弱</p></li><li><p>凸现的危难<br>突现的危难（emergent distress）模型，它提出最终毁灭伴侣的问题行为始于结婚之后。婚后出现了某些摧毁婚姻的危机。</p></li><li><p>幻灭<br><strong>三种解释中对是否离婚最好的预测因素。</strong>伴侣们在婚姻开始时，常常对他们的亲密关系有着美好、浪漫的看法，这是不切实际的乐观。之后，随着时间的推移们认识到他们的伴侣关系并不像起初看来的那般美好，任何婚姻中存在的浪漫都会消退。</p></li></ul><h2 id="13-3-分手"><a href="#13-3-分手" class="headerlink" title="13.3 分手"></a>13.3 分手</h2><p>人们不会轻率地结束他们曾经承诺的亲密关系，人们只有到了最后，认为没有伴侣他们会过得更好时才会提起离婚</p><h3 id="13-3-1-与婚前伴侣的分手"><a href="#13-3-1-与婚前伴侣的分手" class="headerlink" title="13.3.1 与婚前伴侣的分手"></a>13.3.1 <strong>与婚前伴侣的分手</strong></h3><p><strong>大学生对于分手有几个重大区别</strong></p><ul><li><p>是否直接严明<br>有些情况下，分手的努力是直接的，或者明确地说出来；然而，大多数情况下，人们使用间接的策略，企图不说出分手就结束关系。</p></li><li><p>分手的努力指向他人还是指向自己<br>指向他人会设法保护伴侣情感，比如给与伴侣反应机会以保存颜面。指向自己更自私地损害伴侣情感，比如单方面宣布结束关系，而不对伴侣做出解释，躲避任何进一步的接触。</p></li></ul><p><strong>步骤</strong></p><p>当伴侣一方对亲密关系感到厌倦并开始注意其他人时，结束关系的过程通常就已经开始了。该伴侣变得冷漠，感情投入更少，这往往在最初会引起修复关系并恢复关系原貌的努力。然而，当伴侣双方共处的时间更少，并且缺乏兴趣时，分手的念头又开始蠢蠢欲动了。接着又继续讨论关系，双方同意再次努力解决问题，但他们又注意到其他替代选择，伴侣变得更加退避。他们开始注意其他人，但是接着产生了重归旧好的短暂愿望，随后被内心呼唤放弃的深思熟虑所取代。他们在心理上已做好准备，然后分手。</p><h3 id="13-3-2-离婚步骤"><a href="#13-3-2-离婚步骤" class="headerlink" title="13.3.2 离婚步骤"></a>13.3.2 <strong>离婚步骤</strong></h3><p>接触关系的方式有可能影响今后对待彼此的情感，伴侣如果没有机会识别和讨论不满的原因，则会对彼此持有不太积极的情感，在分手后也不太可能保持联系，而讨论了这些困难的伴侣则要好得多。</p><ul><li><p>个人阶段：在<strong>最初的个人阶段</strong>里，伴侣一方变得不满意，经常感到沮丧和不悦</p></li><li><p>双人阶段：<strong>接着是双人阶段</strong>，不幸福的伴侣表露出他/她的不满，接着或许会出现旷日弥久的协商、对峙或者尝试适应，这阶段常见的情感包括震惊、愤怒、伤害，有时还会出现解脱感。</p></li><li><p>社交阶段：<strong>在亲密关系接近结束之际，社交阶段开始了</strong>。伴侣们公开宣扬他们的苦恼，向家人和朋友解释他们自己的遭遇，并寻求支持和理解</p></li><li><p>善后阶段：<strong>随着关系结束，善后阶段开始。</strong>哀痛减少，伴侣开始通过认知加工克服他们的失败，并丢弃过去的伴侣关系。重新修正、整理记忆，创造出可接受的关系历程故事（即“叙述”）。此阶段有可能发生合理化和对关系的重新评价</p></li><li><p>复兴阶段：<strong>在复兴阶段里，已离婚的“伴侣”作为单身重新进入社交生活</strong>，常常告诉别人他们的经验已经改变了他们，现在自己变得更加聪明睿智</p></li></ul><h2 id="13-4-分手结果"><a href="#13-4-分手结果" class="headerlink" title="13.4 分手结果"></a>13.4 <strong>分手结果</strong></h2><p><strong>解体后的关系</strong></p><p>大多数情况下，分手后彼此的忠诚全部消退。一小部分可以成为朋友，极少数重新复合。</p><p><strong>克服消极情绪</strong></p><p>具有不安全依恋类型的人（担心被伴侣抛弃）尤其可能难以释怀分手。他们仍对以前的伴侣痴迷（在想到他/她与别人相恋时特别紧张不安），所以比其他人更悲伤，持续的时间也更长。（<strong>要忘掉前伴侣，焦虑的人着眼于新的婚恋对象更容易摆脱失败的亲密关系</strong>）。</p><p><strong>离婚结果</strong></p><ul><li><p><strong>适应：</strong>人们要耗费数年的时间来适应婚姻的结束，但大多数人都能逐渐重新振作。</p></li><li><p><strong>社交圈子：</strong>人们在离婚后的数年里社交圈子一般变得更小。因为会失去某些朋友和大部分姻亲。</p></li><li><p><strong>经济资源：</strong>平均而言，离婚后女性的生活标准降低了，而男性则提高了。因为女性通常需要养育孩子。</p></li><li><p>前配偶之间的关系</p></li></ul><p><strong>父母离异的孩子</strong></p><p>与那些父母仍维持婚姻的人相比，父母离异的儿童在青少年期和成人早期幸福的水平都较低。如果儿童能够在离婚后维持与父母高质量的亲子关系，他们不太会受到离婚的影响。</p><h1 id="14-亲密关系维持与修复"><a href="#14-亲密关系维持与修复" class="headerlink" title="14. 亲密关系维持与修复"></a>14. 亲密关系维持与修复</h1><h2 id="14-1-亲密关系维持"><a href="#14-1-亲密关系维持" class="headerlink" title="14.1 亲密关系维持"></a>14.1 亲密关系维持</h2><h3 id="14-1-1-保持忠诚"><a href="#14-1-1-保持忠诚" class="headerlink" title="14.1.1 保持忠诚"></a>14.1.1 保持忠诚</h3><p>忠诚于伴侣关系的人与不太忠诚的伴侣相比，更加盼望亲密关系能持续，他们对亲密关系的思考和行为方式也不同</p><p><strong>认知维持机制</strong></p><ul><li><p><strong>自我定位的变化：</strong>他们不再把自己视为单独的个体，而是视为包括自己及伴侣在内的更大整体的一部分。<strong>用“我们”取代“我”</strong></p></li><li><p><strong>积极错觉：</strong>忠诚的伴侣会以积极错觉（positive illusion）来看待彼此，彼此理想化并尽可能以最好的眼光来看待他们的亲密关系</p></li><li><p><strong>替代选择的无视：</strong>满足的伴侣意识不到自己在替代关系（情人）中可能得到的好处，也相当不关心替代伴侣。</p></li></ul><p><strong>行为维持机制</strong></p><ul><li><p><strong>牺牲意愿：</strong>承诺的人常常愿意为亲密关系做出各种个人牺牲，克制自己的欲望或做出不愿意做的事情</p></li><li><p><strong>鼓励我们成长：</strong>当伴侣鼓励我们成为自己所期望的人时——<strong>支持我们去学习技能，赞同我们接纳有前途的新角色和责任，提升我们的自我成长</strong>——我们的亲密关系和个人幸福都会得到提升</p></li><li><p><strong>顺应：</strong>忠诚的爱人还倾向于忍受伴侣的一些不严重的苛刻对待而不还击。这就是顺应（accommodation）现象。它与自我折磨无关；相反，只要伴侣的冒犯只是偶尔或暂时的，顺应就提供了避免无谓冲突的有效方法，否则只会持续令人不悦的交往，这需要进行自我控制，</p></li><li><p><strong>玩乐：当伴侣能一起参与新异的、具有挑战性的、令人兴奋和快乐的活动时，他们通常会感到满足。</strong>在现实的世界里，那些热衷于徒步旅行、骑车、跳舞或者参加音乐会、演讲和演出的人，<strong>比那些只是待在家里看电视的人，认为他们的婚姻质量更高。</strong></p></li><li><p><strong>宽恕</strong></p></li></ul><h3 id="14-1-2-保持满足"><a href="#14-1-2-保持满足" class="headerlink" title="14.1.2 保持满足"></a>14.1.2 保持满足</h3><p>维持机制持续的时间是短暂的，所以我们不得不坚持到底</p><p><strong>欣赏并且表达感激</strong></p><p>义务地去注意伴侣为你付出的关爱、仁慈和慷慨。并且向伴侣表达。<strong>当我们向伴侣表达我们的感激时，我们就能为他们提供巨大的价值认可和关爱。我们明确的欣赏心态减少了他们帮助我们时感到的代价，因此他们很容易承受他们付出的较小的牺牲</strong>一一结果是他们在继续为我们的利益努力时，能得到更多的快乐。</p><ul><li>几种策略 最重要的是积极性、保证和分担任务</li></ul><p><img src="/img/亲密关系维持策略.jpg" alt="亲密关系维持策略.jpg"></p><h2 id="14-2-亲密关系修复"><a href="#14-2-亲密关系修复" class="headerlink" title="14.2 亲密关系修复"></a>14.2 亲密关系修复</h2><p>大意是自己找点自助性书籍学习或者寻求专业的婚姻治疗师，没啥营养。</p>]]></content>
    
    
    <summary type="html">社会心理学中的亲密关系</summary>
    
    
    
    <category term="读书分享" scheme="http://lishuaiyun.cn/categories/%E8%AF%BB%E4%B9%A6%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="心理学" scheme="http://lishuaiyun.cn/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>指数基金投资指南</title>
    <link href="http://lishuaiyun.cn/2023/03/27/%E6%8C%87%E6%95%B0%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84%E6%8C%87%E5%8D%97/"/>
    <id>http://lishuaiyun.cn/2023/03/27/%E6%8C%87%E6%95%B0%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84%E6%8C%87%E5%8D%97/</id>
    <published>2023-03-27T12:19:25.000Z</published>
    <updated>2023-04-20T07:31:59.789Z</updated>
    
    <content type="html"><![CDATA[<p>《指数基金投资指南》是雪球大V银行螺丝钉的书，里面介绍了一些他对于指数基金投资的科普和看法。下面记录了一些比较有用的知识。</p><p>储蓄的收益率很难抵消通货膨胀带来的货币贬值，所以需要通过合理投资赚取更高的收益率。</p><h1 id="1-投资新手建议"><a href="#1-投资新手建议" class="headerlink" title="1. 投资新手建议"></a>1. 投资新手建议</h1><p>这一章主要在介绍资产的概念，在《富爸爸穷爸爸》中已经介绍过，大同小异。</p><h1 id="2-指数基金科普"><a href="#2-指数基金科普" class="headerlink" title="2. 指数基金科普"></a>2. 指数基金科普</h1><h2 id="2-1-指数"><a href="#2-1-指数" class="headerlink" title="2.1 指数"></a>2.1 指数</h2><p>指数是一个选股规则，它的目的是按照某个规则挑选出一篮子股票，并反映这一篮子股票的平均价格走势。</p><p>例如沪深300指数是由上海和深圳证券市场中选取300只A股作为样本编制而成的成份股指数。覆盖了沪深市场六成左右市值，具有良好的市场代表性。</p><h2 id="2-2-指数是谁开发的"><a href="#2-2-指数是谁开发的" class="headerlink" title="2.2 指数是谁开发的"></a>2.2 指数是谁开发的</h2><p><strong>开发指数的机构主要有两类：证券交易所和指数公司。</strong></p><p>国内有三大指数系列。上海证券交易所（简称上交所）开发的上证系列指数，深圳证券交易所（简称深交所）开发的深证系列指数，以及中证指数有限公司开发的中证系列指数。</p><p>美国主要有三大指数：纳斯达克指数、标普500指数、道琼斯指数。</p><p>中国香港主要是恒生公司开发的指数，例如恒生指数和H股指数。</p><h2 id="2-3-指数基金"><a href="#2-3-指数基金" class="headerlink" title="2.3 指数基金"></a>2.3 指数基金</h2><p>如果有基金公司开发一个基金产品，也完全按照指数的选股规则去买入完全一样的一篮子股票，这就是指数基金。</p><p>指数基金跟普通的股票基金最大的一个不同点是：一般的股票基金，依赖于基金经理的投资水平，基金的业绩好不好跟很大程度上取决于基金经理的能力；<strong>而指数基金的业绩跟基金经理的关系不大，主要取决于对应指数的表现。</strong></p><h2 id="2-4-指数基金优势"><a href="#2-4-指数基金优势" class="headerlink" title="2.4 指数基金优势"></a>2.4 指数基金优势</h2><p><strong>生存周期长</strong></p><p>普通股票基金的表现取决于基金经理，由基金经理来决定股票的买入和卖出。但很少有基金经理能投资30~40年以上，所以普通股票基金一般无法长期存在下去。</p><p>指数基金可以通过吸收新公司替换老公司的方法，实现长生不老。理论上，指数的寿命与国家的寿命等同。</p><p><strong>长期上涨</strong></p><p>买指数基金就是买国运，所以只要国家有一个稳定的环境，指数背后的公司就能创造越来越多的盈利。或许某些年份遭遇困境，盈利会下滑，但长期看盈利会不断上涨。这是指数长期上涨的根本动力。</p><p><strong>成本低</strong></p><p>这里说的成本，主要是针对基金自身的运作成本。每只基金在运作的时候，<strong>每年都会收取基金管理费和托管费</strong>。主动型基金一般会收取基金规模的1.5%作为管理费。托管费是交给基金的托管方的。基金的庞大资产，并不是直接存放在基金公司，一般会在第三方托管方，例如某家大型银行。托管费就是支付给托管银行的费用。</p><p>因为指数基金不像主动型基金那样依赖基金经理，所以从整体来看，所有股票基金中，指数基金的管理费和托管费是最低的一类，这对于我们长期投资者来说，能省下一些费用。省到就是赚到，长期投资低成本指数基金更有利。</p><p><strong>tips：美国401计划和中国养老金账户</strong></p><p>由于养老对企业和社会负担越来越重，美国政府制定了401（k）条款。401k计划包括以下几点：</p><ul><li>每个月上班族拿出一部分收入来投入到401 (k) 计划中，企业也拿出一部分。汇总后一并投入到401 (k) 计划。</li><li>401 (k) 计划不需要缴纳资本利得税。这一点在美国很重要，美国做投资是要缴纳资本利得税的，免除这一税务，可以省下很多成本。</li><li>在59.5岁之前，401 (k) 计划里的钱不能取出来，否则要补上资本利得税和额外10%的惩罚税。</li></ul><p>这本书写的时候中国还没有出台养老金账户的相关政策，与401k相比，养老金账户在第一点不同，完全是个人出资的。相比之下，一些国企的企业年金和401k计划更像。</p><h1 id="3-指数基金分类"><a href="#3-指数基金分类" class="headerlink" title="3. 指数基金分类"></a>3. 指数基金分类</h1><p>指数基金最常见的一种分类，就是分为宽基指数和行业指数。</p><p>因为行业指数基金受行业特性的影响非常大。所以区分为宽基指数和行业指数。</p><ul><li>行业指数基金，限制投资行业。如消费行业指数基金</li><li>宽基指数基金：挑选股票的时候，并不限制行业，如沪深300指数基金。</li></ul><h2 id="3-1-宽基指数基金"><a href="#3-1-宽基指数基金" class="headerlink" title="3.1 宽基指数基金"></a>3.1 宽基指数基金</h2><p>宽基指数基金书中提到了很多，主要有上证50、沪深300、中证500、创业板指数、红利指数、基本面指数、央视财经50指数、恒生指数、纳斯达克指数等等。</p><h3 id="3-1-1-上证50指数"><a href="#3-1-1-上证50指数" class="headerlink" title="3.1.1 上证50指数"></a>3.1.1 <strong>上证50指数</strong></h3><p>上证50指数是从上交所挑选沪市规模最大、流动性好、最具代表性的50只股票组成样本股，以综合反映沪市最具影响力的一批优质大盘企业的整体状况。上证50指数是从2003年12月31日，从1000点开始起步。</p><p><img src="/img/上证50.jpg" alt="上证50指数历史走势"></p><p>从走势图可以看出：</p><ul><li>总体走势是上涨的。</li><li>从2003年年底以来，国内股市发生过三轮比较明显的牛市，分别发生在2006~2007年、2009年和2015年。<strong>其余时间里股市大多波澜不惊，走平或者阴跌。</strong></li><li>A股经常暴涨或暴跌，所以指数基金也带有这个特征。这个特征是我们投资指数基金需要特别注意的一点。</li></ul><p><strong>特点</strong></p><ul><li>以大盘股为主（国内指数挑选股票时都会遵循一定潜规则，如上市不满一个季度的股票不选；暂停上市的股票不选；财务上有问题的股票不选；多年亏损的股票不选。）</li><li>只有上交所的股票，没有深交所的股票，所以没有办法反映国内股市整体的走势。</li></ul><p><strong>蓝筹股</strong>：在西方赌场里，一般有三种颜色的筹码，其中蓝色筹码最为值钱。后来就用蓝筹股，代表规模较大、有较大影响力的公司。</p><p><strong>交易渠道：</strong>指数基金从交易渠道上可以分为场内指数基金和场外指数基金。这个场指的是证券交易所。场内基金在证券交易所上市，可以有“申购赎回”和“买入卖出”两套交易体系，其中买入卖出方式需要在证券交易所中进行，是通过股票交易软件来操作的。如果基金没有在证券交易所上市，那就是场外基金，它只有“申购赎回”一种交易方式。</p><p><strong>避开规模较小的指数基金：</strong>如果一个指数基金规模较小，它清盘的概率就比较大。基金清盘并不是说我们的投资血本无归了，而是按照某一个基金净值强制赎回，导致我们的投资中断。如果基金规模太小，那么基金公司运作这个基金可能就是亏本的，基金公司就有可能停止这个基金的运作。</p><p><strong>增强型指数基金：</strong>指数基金的目的是复制指数。不过有的时候，股市会出现一些比较明显的能获得超额收益的机会。于是，有的指数基金就会在追踪指数的基础上，去做一些操作来赚取超额收益，例如打新、量化模型等，希望相对于指数获得一些增强收益。这就是增强型指数基金。</p><p><strong>联接基金：</strong>联接基金是一种场外基金，通过申购赎回来交易。但它并不直接投资股票，而是通过<strong>投资对应的场内指数基金</strong>来实现复制指数的目的，也是指数基金的一种。</p><h3 id="3-1-2-沪深300"><a href="#3-1-2-沪深300" class="headerlink" title="3.1.2 沪深300"></a>3.1.2 沪深300</h3><p>沪深300指数（简称沪深300）是由中证指数公司开发的，从<strong>上交所和深交所</strong>挑选规模最大、流动性最好的300只股票。它的成份股数目比上证50多，也都是以大公司为主。从市值规模上来说，占到国内股市全部规模的60%以上，比较有代表性，所以<strong>沪深300也被认为是国内股市最具代表性的指数</strong>。</p><p><strong>特点：</strong>兼顾上交所和深交所</p><h3 id="3-1-3-中证500"><a href="#3-1-3-中证500" class="headerlink" title="3.1.3 中证500"></a>3.1.3 中证500</h3><p>将全部沪深300指数的300家公司排除，然后将最近一年日均总市值排名前300名的企业也排除，这样可以最大限度地避免选入大公司。在剩下的公司中，选择日均总市值排名前500名的企业，这就是中证500指数。</p><p><strong>特点：</strong>和上证50、沪深300表现有不同。</p><h3 id="3-1-4-创业板指数"><a href="#3-1-4-创业板指数" class="headerlink" title="3.1.4 创业板指数"></a>3.1.4 创业板指数</h3><p>在主板上市交易，门槛是很高的，公司需要达到一定规模，而且也要有足够的盈利才可以。但是有一些小公司，目前盈利还不好，达不到主板上市的条件。国家就给这类公司提供了一个门槛更低的市场：创业板市场。</p><p>创业板市场放在深交所下面。</p><p><strong>特点：</strong>中小型公司为主的指数。并且这些公司大多盈利没有进入稳定期，所以创业板的整体盈利数字比较低。相比主板的指数基金更容易暴涨暴跌。</p><h3 id="3-1-5-红利指数"><a href="#3-1-5-红利指数" class="headerlink" title="3.1.5 红利指数"></a>3.1.5 红利指数</h3><p><strong>指数基金加权方式</strong></p><ul><li>市值加权：股票规模越大，权重越高。是指数基金主流加权方式。</li><li>策略加权：按照别的方式决定个股权重。如红利指数按照股息率决定权重。</li></ul><p>股票的现金分红，也叫股息。能够长期发放高现金分红，至少就能够说明企业的盈利和财务状况良好。所以市面上指数发布商都发布了基于红利策略的指数。</p><p><strong>红利机会指数</strong></p><p>红利机会指数在传统红利指数的基础上增加了一些筛选条件。红利机会指数有3个要求：</p><ul><li>过去3年盈利增长必须为正；</li><li>过去12个月的净利润必须为正；</li><li>每只股票权重不超过3%，单个行业不超过33%。</li></ul><p><strong>指数特点</strong></p><ul><li><p>高股息率，在熊市更有优势。熊市分红后再投入的效果非常出众。指数的股息率越高，这一点在熊市越是明显。所以红利指数高股息率的特性，在熊市里是非常不错的优势。（同样是分红100万，熊市分红后100万能买到的股票份额，远比牛市分红后100万能买到的股票份额多得多。）</p></li><li><p>能持续发放现金股息的公司，盈利能力和财务健康状况好的概率越高。（现金股息是切切实实地发放了出去，如果公司财务不好，是没有能力持续发放股息的。财务状况越稳定，企业出意外的情况也就会小，股价的波动也会比较小。）</p><h3 id="3-1-6-基本面指数"><a href="#3-1-6-基本面指数" class="headerlink" title="3.1.6 基本面指数"></a>3.1.6 基本面指数</h3><p>策略加权的指数有很多。除了挑选高股息率股票的红利指数，还有一类影响力也非常大的策略加权指数：基本面指数。 </p><p>基本面指一般从4个维度去衡量：营业收入，现金流，净资产和分红。</p><h3 id="3-1-7-恒生指数"><a href="#3-1-7-恒生指数" class="headerlink" title="3.1.7 恒生指数"></a>3.1.7 恒生指数</h3><p>国内除了上海和深圳两个证券交易所之外，还有一个非常特殊、但又非常重要的证券交易所——香港证券交易所，简称港交所。<strong>而投资于中国香港、美国等市场的基金品种称为QDII基金</strong>。</p><p>QDII的意思是合格境内机构投资者。我们可以把这种基金理解成一种“代购”。这些境外市场用的都是非人民币交易，所以可以在一定程度上抵御人民币汇率风险。在港股指数基金中，最著名的就是恒生指数了。</p><p>恒生指数投资的是所有在中国香港上市的公司中规模最大的50家企业。</p><p><strong>特点</strong></p></li><li><p><strong>历史悠久，成熟开放。</strong>中国香港是一个成熟开放的国际金融中心，在港交所上市要简单一些，内地有些公司就会转战到香港去上市。</p></li><li><p><strong>跟内地紧密相关，但投资者以境外投资者为主。</strong>香港回归之前，港股股票市场，内地投资者占比非常低。目前，内地投资者正在逐渐夺回港股定价权，港股市场也会成为中国第三大证券交易市场。</p></li><li><p><strong>“老千股”导致个股投资风险巨大，普通投资者投资港股的最好方式是港股指数基金。</strong>老千股就是指钻了很多政策的空子，利用股票市场来为自己谋求利益。内地投资者不熟悉港股市场，很容易就被玩得血本无归。</p><p>H股：如果一家公司在内地注册，但是在香港地区上市，这样的公司就是H股。</p></li></ul><h3 id="3-1-8-纳斯达克100指数"><a href="#3-1-8-纳斯达克100指数" class="headerlink" title="3.1.8 纳斯达克100指数"></a>3.1.8 纳斯达克100指数</h3><p>纳斯达克（NASDAQ）是美国交易所之一，成立于1971年。是高科技公司和互联网公司的代表性股票上市地之一。纳斯达克100指数投资的是在纳斯达克上市的规模最大的100家企业。</p><p><strong>风险：</strong>外汇额度不够导致暂停申购。投资港股的QDII指数基金因为港股通不限额度，所以不会有额度不足的情况，但投资美股的QDII指数基金，会因为基金公司美元额度不足，经常暂停基金的申购。</p><h3 id="3-1-9-标普500指数"><a href="#3-1-9-标普500指数" class="headerlink" title="3.1.9 标普500指数"></a>3.1.9 标普500指数</h3><p>标普500指数是美国影响力最大的一个股票指数，是美国传统经济的代表，定位上类似于国内的沪深300指数。</p><p>标普500指数也是以大盘股为主，有500只成份股。标普500指数不单纯按照上市公司的规模来选股票，不限制入选公司的市值规模，不过要想入选标普500，得是一个行业排在前面的领导者。所以标普500是一个附带主观判断的蓝筹股指数</p><h3 id="3-2-行业指数基金"><a href="#3-2-行业指数基金" class="headerlink" title="3.2 行业指数基金"></a>3.2 行业指数基金</h3><p>这是因为行业指数的投资风险更高一些，不仅要考虑投资价值，还要考虑不同行业自身的特点和当前所处的发展阶段。如当前阶段经济下行，但是光伏和新能源相关基金相比于宽基表现亮眼很多。</p><p>行业指数基金的主要两种组成方式：</p><ul><li>标准的10个一级行业分类</li><li>按照某个主题划分的主题行业，如养老、环保、健康、互联网等。</li></ul><p>最主要的10个一级行业分别是：</p><ul><li>材料：金属、采矿、化学制品等。</li><li>可选消费：汽车、零售、媒体、房地产等。</li><li>必需消费：食品、烟草、家居等。</li><li>能源：能源设备与服务、石油天然气等。</li><li>金融：银行、保险、券商等。</li><li>医药：医疗保健、制药、生物科技等。</li><li>工业：航空航天、运输、建筑产品等。</li><li>信息：硬件、软件、信息技术等。</li><li>电信：固定线路、无线通信、电信业务等。</li><li>公共事业：电力、天然气、水等。</li></ul><h3 id="3-2-1-值得投资的行业"><a href="#3-2-1-值得投资的行业" class="headerlink" title="3.2.1 值得投资的行业"></a>3.2.1 值得投资的行业</h3><p>值得投资的行业，主要有两个，一个是天生赚钱更容易的行业，另一个是具有明显强周期性的行业。</p><p><strong>容易赚钱的行业</strong></p><p>投资医药股和必需消费股，长期来看在A股更容易赚钱。</p><p>所市场需求比较稳定，企业有护城河能保证一定的利润率，并且再投资需求小，能获得大量的自由现金流，只有容易形成这些条件的行业，才能比较容易的赚钱。如医药、必需消费、可选消费，以及相关的主题行业。</p><p><strong>强周期性行业</strong></p><p>有的行业，并不能一直稳定地赚钱，这些行业的盈利会呈周期性变化。通常强周期性行业的周期底部，即在它们比较便宜的时候买入；在周期顶部，即比较贵的时候卖出，就能获得非常不错的收益。强周期性行业如金融行业中的银行、证券、保险、地产行业、能源行业、部分材料行业等。</p><h3 id="3-2-2-优秀行业"><a href="#3-2-2-优秀行业" class="headerlink" title="3.2.2 优秀行业"></a>3.2.2 优秀行业</h3><p><strong>必需消费行业</strong></p><p>必需消费是需求最稳定的行业，主要是维持我们正常生活所需要的各种消费品，例如饮料、酒、农副食品等。</p><p><strong>医药行业</strong></p><p>我们每个人都离不开生老病死，医药是人类的基本需求。医药指数是经济危机中非常具有价值的避险板块。即使宏观经济不好，医药行业整体表现也好于宏观经济。如1992～2012年的20年中，日本有14年医药指数都跑赢了日经指数。</p><p><strong>可选消费行业</strong></p><p>必需消费指的是我们在日常生活中需要经常消费的食品、饮料、烟草等常用日用消费品，<strong>一般单价比较低，消费频率高，也是刚需</strong>。</p><p>可选消费指的是有钱的时候才会消费，这种消费可以提升我们的生活质量，但不是刚需。其特点为：</p><ul><li>需求比必需消费弱，有一定周期性。</li><li>受益于人口红利，特别是人均消费金额的提升。</li><li>可选消费的升级换代特性。如手机、彩电等</li></ul><p><strong>养老行业</strong></p><p>养老产业覆盖了多个行业，包括医疗保健、信息技术、日常消费、可选消费，甚至包括保险公司这种金融行业。</p><p>目前影响力最大的养老产业的指数是中证养老产业指数，挑选规则为先保证各个子行业的龙头入选，再按市值来挑选。养老产业指数主要是由医药行业、必需消费行业和可选消费行业混合的，因此，它同样具备医药和消费的优秀属性，属于非常不错的好行业指数。</p><h3 id="3-2-3-强周期性行业"><a href="#3-2-3-强周期性行业" class="headerlink" title="3.2.3 强周期性行业"></a>3.2.3 强周期性行业</h3><p><strong>周期性行业指的是行业的某些方面会呈周期性波动。</strong>例如，销售保健品的行业会有销售旺季和销售淡季，券商会因为牛市和熊市而产生业绩波动，银行会因为宏观经济的影响而产生盈利方面的周期波动，航空股会因为油价的波动而成本变化很大，等等。</p><p>最具有代表性的周期性行业就是金融行业。目前国内上市的金融公司，主要是以银行、保险、证券为主。</p><p><strong>银行业</strong></p><p>银行具备的商业模式可以简单地看作是“两个收入，两个费用”：利息收入，非利息收入，利息费用，风险准备金。</p><p>例如，银行可以以3%的利率从储户手里收集钱财，然后以6%的利率贷给企业。<strong>贷款的利息就是利息收入</strong>，<strong>支付的3%就是利息费用。</strong>另外银行还可以收取中间收入或者渠道费用，例如手续费、管理费。这个费用与利息无关，所以是“<strong>非利息收入</strong>”。银行贷款给客户，如果客户还不上钱，银行就得从自己的收益中拿出一部分来弥补亏空。这个用来弥补亏空的资金要预先准备好，这就是“<strong>风险准备金</strong>”费用。</p><p>简单来看，<strong>银行的收益=利息收入+非利息收入-利息费用-风险准备金=利差收益+非利息收入-风险准备金。</strong></p><p>从这个商业模式，我们可以看出：银行的周期性受宏观经济的影响较大。<strong>当经济处于下行周期，客户还款质量下降，风险准备金增加，同时国家也要降息来刺激经济，所以银行利差收益减少，风险准备金增加，银行效益就会变差。</strong>当经济好转时，国家要给经济降温，客户还款质量也变好了，银行效益就会变好。因为经济周期一直在波动，所以银行也会周期往复。</p><p><strong>银行不是同质化经营</strong></p><p>大多数银行都遵从利差收益的盈利模式，提供的服务大类也差不多，但是银行并不是同质化经营，它们的差异体现在对风险的控制上。进入经济下行周期，风控能力强的银行计提更少的风险准备金，利润波动小，周期性小，能实现稳健的收益增长。不同风控能力的银行长期增长能力有天壤之别，经历过几个周期后差距就非常明显了。</p><p><strong>优秀的银行特征</strong></p><ul><li>注重利差收益的银行：专注于传统“利差收益”的银行，会努力将存款成本降至最低（利息费用降低），同时严格把控贷款客户的质量，努力将业务布满在不同的地区，分散贷款的风险，降低风险准备金费用。</li><li>依赖区域经济发展的地区性银行：由于业务比较集中在一个地区，因此地区性银行的资产质量、业务量与当地经济的发展情况、当地居民的金融习惯高度相关。同时区域性的银行大多与当地政府、企业关系更加密切，能获取很多稳定的业务。（置身室内中有提到。地区性银行即城投行，是当地政府设立方便投融资的银行，那跟政府关系肯定好，本来就是政府出资牵头成立的）</li><li>注重非利息收入的银行。越是依赖利差收益，就越是需要银行尽可能地做到低成本揽储，低风险放贷。这种模式不可避免地会受到经济周期的影响。在经济下行周期，原来质量较好的客户还款能力也有可能下降，从而让银行大幅增加风险准备金，利润大降。所以有的银行就试图在“非利息收入”上下功夫，提升非利息收入的比例，可以降低银行的周期性波动。如兴业银行的“银银平台”。</li></ul><p><strong>证券业</strong></p><p>证券行业也就是券商业，也被称为“周期之王”。它是最典型的一个强周期性行业。</p><p>证券公司最主要的收入来源是交易费用。牛市的时候，无论是新开户还是资金量都会与平时相比有大幅的提升。所以证券行业的业绩与牛熊市的相关性非常大。证券行业的周期性取决于市场行情。每次牛市，券商股都是备受瞩目的明星。</p><p><strong>证券行业可以说是不适合长期持有的行业的一个典型：</strong>大多数券商提供的<strong>服务同质化严重</strong>，导致券商行业的基本面和股价的走势高度趋同。激烈的竞争不断地压缩券商的主要收入——佣金。大多数券商没有核心竞争力或者说护城河，不能把自己从竞争中脱离出来，客户可以更加自由地选择券商。再加上互联网金融的冲击，未来超低佣金会成为主流。这些加剧了证券行业的竞争程度。</p><p>选择证券行业的指数基金来投资券商，既可以享受到它的强周期性特征，又可以摒弃大多数个股风险。</p><p><strong>保险业</strong></p><p>保险行业虽然非常重要，其公司规模也非常大，但目前上市的保险公司数量并不多，无法构成指数基金。</p><p><strong>地产行业</strong></p><p>地产行业也是一个强周期性的行业。按照世界主要发达国家的经验，<strong>当人均居住面积达到一定程度之后，地产行业的周期性会大大增强。</strong></p><h3 id="3-2-4-其他行业"><a href="#3-2-4-其他行业" class="headerlink" title="3.2.4 其他行业"></a>3.2.4 其他行业</h3><p><strong>环保行业</strong></p><p>环保行业是一个政策驱动的行业，因为历史欠账太多，国家下决心要大力发展环保行业。</p><p><strong>白酒行业</strong></p><p>必需消费行业下的一个子行业，利润率高，并且有品牌优势。</p><h1 id="4-如何挑选指数基金"><a href="#4-如何挑选指数基金" class="headerlink" title="4. 如何挑选指数基金"></a>4. 如何挑选指数基金</h1><p>指数基金“买什么”和“怎么买”。</p><h2 id="4-1-价值投资理念"><a href="#4-1-价值投资理念" class="headerlink" title="4.1 价值投资理念"></a>4.1 价值投资理念</h2><h3 id="4-1-1-三个价值投资理论"><a href="#4-1-1-三个价值投资理论" class="headerlink" title="4.1.1 三个价值投资理论"></a>4.1.1 三个价值投资理论</h3><p><strong>股票的价格与其内在价值之间的关系</strong></p><p>股票有其内在价值，股票的价格围绕其内在价值上下波动。虽然股价在短期里会暴涨暴跌，但长期表现还是会与股票的内在价值趋于一致的。</p><p><strong>能力圈</strong></p><p>对所投资的品种非常了解，能判断出它大致的内在价值是多少，而不是什么热门投资什么。</p><p><strong>安全边际</strong></p><p>在投资的时候，我们需要判断一下，当前股价与股票内在价值之间的关系。安全边际（Margin of Safety）是资产价格低于其真实价值的部分。<strong>这一差额可以被视为是一个可以抵御未来潜在亏损的缓冲区域。</strong>用比价值低的价格去买股票。</p><p>投资指数基金的时候，无论是定投，还是一次性买入，都是遵循同样的道理。这其中，最重要的就是判断出价格与价值的关系，在价格低于价值的时候去投资。但是怎么知道指数基金的价格是不是低于价值呢？我们可以通过一些<strong>估值指标</strong>和方法来帮助我们判断。</p><h3 id="4-1-2-常见的估值指标"><a href="#4-1-2-常见的估值指标" class="headerlink" title="4.1.2 常见的估值指标"></a>4.1.2 常见的估值指标</h3><p>估值就是从各种不同的角度去评估资产。最常用的估值指标主要是4个：市盈率、盈利收益率、市净率、股息率。</p><h4 id="市盈率"><a href="#市盈率" class="headerlink" title="市盈率"></a><strong>市盈率</strong></h4><p><strong>定义</strong></p><p>市盈率的定义是：公司市值/公司盈利（即PE=P/E，其中P代表公司市值，E代表公司盈利）。</p><p><strong>公司盈利</strong>。可以取不同的值，从而将市盈率细分为静态市盈率、滚动市盈率和动态市盈率。其中静态市盈率是取用公司上一个年度的净利润，滚动市盈率是取用最近4个季度财报的净利润，动态市盈率是取用预估的公司下一年度的净利润。</p><p><strong>公司市值。</strong>市值代表我们买下这个公司理论上需要的资金量。很少有公司的盈利会在一年的时间里大幅波动，但是公司的市值可以在牛市的时候大幅上涨，在熊市的时候大幅下跌，原因就在于市盈率估值的大幅波动：牛市推高了投资者对单位盈利的估值。</p><p>最具参考意义的是静态市盈率和滚动市盈率，因为它们是已经确实发生了的盈利，这也是我们通常所说的市盈率。</p><p><strong>意义</strong></p><p><strong>如果一家公司的市盈率较低，代表较小的市值取得了较大的盈利。</strong>该公司的股票价格可能被低估，此时可能是买入的好时机；反之，如果市盈率较高，则该公司的股票价格可能被高估，此时可能会发生调整或者风险较大，投资的时机需要谨慎考虑。</p><p><strong>应用前提</strong></p><p>应用市盈率的前提有两个，一是流通性好，能够以市价成交；二是盈利稳定不会有太大波动。</p><ul><li><strong>流通性好</strong></li></ul><p>市场上某些很小的股票的市盈率有好几百倍，其实这类高泡沫的股票，市盈率已经失去了参考意义。因为这类股票流通性不好，只需要很少的资金买卖，你的投资行为会极大地影响市价，形成一种反馈效应。</p><p>有比较合理的流动性，是应用一切估值指标的前提。一般能够进入沪深300、中证500之类指数的股票，它们的流动性都没有什么问题。</p><ul><li><strong>盈利稳定</strong></li></ul><p>有的行业盈利并不稳定，不适用市盈率，例如有“市盈率陷阱”的没落行业和周期行业，有的行业处于成长期或者亏损期，也不适用市盈率。</p><p>周期行业不适用市盈率。例如证券行业，在牛市的时候利润暴涨数倍，原本40~60的市盈率瞬间变为个位数。从市盈率角度看起来好像很低估，但实际上这只是暂时的，景气周期一过，行业的利润就会骤减，市盈率从个位数又变为了几十。<strong>基本提供同质化产品和服务的行业，都具备比较明显的周期性，并不适合用市盈率估值</strong>。</p><p>亏损股无法使用市盈率这个指标。而正处于高速成长期的股票，公司的盈利大部分需要用于再投入扩大规模，所以盈利会被人为地调整，并不能稳定，因此也不适合用市盈率估值。</p><p>有的行业市盈率很低，但是实际上行业进入了下行周期，盈利在不断减少。从PE=P/E这个角度，盈利E不断减少，市盈率PE就会逐渐变大，不再低估。这就是“市盈率陷阱”。</p><p>宽基指数基金大多都可以与这两点比较符合，所以使用市盈率为宽基指数基金来估值是可行的。</p><h4 id="盈利收益率"><a href="#盈利收益率" class="headerlink" title="盈利收益率"></a><strong>盈利收益率</strong></h4><p>盈利收益率是市盈率的变种。市盈率是用公司市值除以盈利，而盈利收益率则是用公司盈利除以公司市值。也就是盈利收益率＝E/P。换句话说，<strong>盈利收益率也约等于市盈率的倒数</strong>。</p><p>盈利收益率所代表的意义是，假如我们把一家公司全部买下来，这家公司一年的盈利能够带给我们的收益率，就是盈利收益率。（好像比市盈率更直观一点）</p><h4 id="市净率"><a href="#市净率" class="headerlink" title="市净率"></a><strong>市净率</strong></h4><p>市净率 = 公司市值 / 每股净资产</p><p><strong>应用前提</strong></p><ul><li>净资产收益率（ROE）越高的企业，资产运作效率越高，市净率也就越高。ROE = 净利润/净资产。</li><li>资产价值越稳定，市净率的有效性越高。有的资产能够随着时间增值，有的则会随着时间迅速贬值。例如贵州茅台，正在酿造中的白酒会随着时间不断增值；但是英特尔公司生产的电脑芯片，如果没有及时销售，会迅速贬值。</li><li>无形资产。传统企业净资产很大一部分是有形资产，例如地皮、矿山、厂房、原材料等，它们的价值比较容易衡量。如果一个企业主要靠无形资产来经营，像律师事务所、广告服务公司、互联网公司，那市净率就没有多少参考价值了。</li></ul><p>当企业的资产大多是比较容易衡量价值的有形资产，并且是长期保值的资产时，比较适合用市净率来估值（传统实业公司）。 比如前文介绍的<strong>强周期性行业的指数基金</strong>，它们的盈利不稳定或盈利呈周期性变化，因此市盈率和盈利收益率都无法用在它们上面，但<strong>可以用市净率来估值</strong>。像航空、航运、能源等都很适合用市净率估值。</p><h4 id="股息率"><a href="#股息率" class="headerlink" title="股息率"></a><strong>股息率</strong></h4><p>股息率 = 公司的现金分红/公司市值</p><p>分红率 = 公司的现金分红/公司盈利</p><p>盈利收益率=公司盈利/公司市值</p><p>股息率＝盈利收益率＊分红率</p><p>分红率一般是公司预先就设置好了，并且连续多年都不会有什么改变。所以股息率和盈利收益率呈正相关关系。</p><h3 id="4-1-3-如何查看指数估值"><a href="#4-1-3-如何查看指数估值" class="headerlink" title="4.1.3 如何查看指数估值"></a>4.1.3 如何查看指数估值</h3><p>市盈率、市净率、股息率等都是<strong>股票常用的指标</strong>，投资个股的时候，这些数据基本在股票交易软件上都有，查起来很方便。</p><p>指数基金包括一篮子股票，它可以把背后股票的盈利、净资产、股息等数据求出一个平均值，从而计算出指数基金的估值指标。</p><p>指数基金是可以计算出这些估值的，但是<strong>普通的股票基金就无法计算这些估值了。</strong>普通的股票基金虽然也有股票，但是具体投资哪些品种，投资多少，都是由基金经理来决定。基金经理并不会把自己的投资计划实时公布，这就导致我们无从得知当前股票基金持有哪些股票（基金会每个季度公布前十大持仓，但这也只是一部分股票），自然也就无法计算估值指标了。</p><p>指数估值可以在指数官网和一些专业公众号上查看。</p><h2 id="4-2-盈利收益率法挑选指数基金"><a href="#4-2-盈利收益率法挑选指数基金" class="headerlink" title="4.2 盈利收益率法挑选指数基金"></a>4.2 盈利收益率法挑选指数基金</h2><p>根据安全边际原则，应该在指数低估的时候买入基金，留下抵御未来潜在亏损的缓冲区域。在盈利收益率高的时候才开始定投，在盈利收益率低的时候停止定投，甚至卖出。</p><p>有两个数据可供参考。盈利收益率高是10%，低是6.4%。</p><p>当盈利收益率大于10%时，开始<strong>定投</strong>。</p><p>当盈利收益率低于6.4%时，暂停定投。这个6.4%是来自债券基金的平均收益。因为债券基金更加稳定，风险更小。所以我们应该在指数基金的盈利收益率不足6.4%的时候，<strong>分批卖出</strong>指数基金，换成其他品种。</p><p>一般情况下，盈利收益率在短时间内变化不大，不会出现变化很频繁的情况。所以，我们只需要配合定投，在每月定投的时候，查看一下盈利收益率，再根据盈利收益率当时所处的范围，选择相对应的操作，也就是继续定投、坚定持有或是分批卖出，这样就可以了。</p><p>有没有可能指数基金一直处于高估？</p><p>对港股指数基金来说，通过对历史的分析，基本上每隔4~5年就会出现一次机会。</p><p><strong>局限性</strong></p><h2 id="4-3-博格公式挑选指数基金"><a href="#4-3-博格公式挑选指数基金" class="headerlink" title="4.3 博格公式挑选指数基金"></a>4.3 博格公式挑选指数基金</h2><h1 id="5-如何买入指数基金"><a href="#5-如何买入指数基金" class="headerlink" title="5. 如何买入指数基金"></a>5. 如何买入指数基金</h1><h1 id="6-定投计划"><a href="#6-定投计划" class="headerlink" title="6. 定投计划"></a>6. 定投计划</h1><h1 id="7-资产配置"><a href="#7-资产配置" class="headerlink" title="7. 资产配置"></a>7. 资产配置</h1>]]></content>
    
    
    <summary type="html">对于指数基金投资的知识科普</summary>
    
    
    
    <category term="读书分享" scheme="http://lishuaiyun.cn/categories/%E8%AF%BB%E4%B9%A6%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="理财" scheme="http://lishuaiyun.cn/tags/%E7%90%86%E8%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>秋招总结</title>
    <link href="http://lishuaiyun.cn/2023/01/19/%E7%A7%8B%E6%8B%9B%E6%80%BB%E7%BB%93/"/>
    <id>http://lishuaiyun.cn/2023/01/19/%E7%A7%8B%E6%8B%9B%E6%80%BB%E7%BB%93/</id>
    <published>2023-01-19T13:26:34.000Z</published>
    <updated>2023-01-19T14:15:16.862Z</updated>
    
    <content type="html"><![CDATA[<p>离过年还有两天，秋招基本算是结束了，想聊一聊过去几个月想法的转变。</p><p><strong>求职目标从互联网转移到了国企</strong></p><p>造成这一想法的原因其实是多方面的，4，5月份结束春招后读了两本书，读了《被讨厌的勇气》让我理解享受当下，《中国政府与经济发展》让我思考互联网最近几年增量的停滞、业务的收缩以及大规模裁员背后的原因。</p><p>虽然理解什么是享受当下，但真正入职字节才对享受当下有更深入的体会。4300一个月10平的房子，仅能容下床，衣柜和1米长的桌子，背着电脑下班，即使11点到家也要面临12点对齐会议的可能，早上9点起床上班，周末两天心中唯一的想法就是躺尸两天。这一切让我对留在北京互联网工作有极大的抗拒，记得本科毕业怀揣着巨大的热情和憧憬从数学转到了计算机，梦想在互联网做一番事业，但现在我很清楚的认识到这里或许并不适合我。</p><p>综上，秋招基本all in国企和外企。外企投了微软和ZOOM，然而今年经济形式外企也不是法外之地，甚至裁的更离谱，刚投完这两家公司就宣布不进行秋招了，所以全都在投国企。</p><p>我投的国企更多都是技术序列，因为毕竟有两段大厂实习，面国企技术序列其实有很大优势。</p><p>国企北到北京，南到杭州，投了以下公司：</p><p>中行北研（笔试挂，玄学）</p><p>工行银行杭研（offer）</p><p>农行天研（offer）</p><p>交行北研（offer）</p><p>邮储苏研（offer）</p><p>浙商银行总行（offer）</p><p>渤海银行总行（笔试挂）</p><p>移动苏研（offer）</p><p>山东港口金融控股（offer）</p><p>青岛联通（offer）</p><p>中国人寿杭研（学历挂，卡本科）</p><p>感觉有大厂实习+技术栈匹配的话，面国企这些研发基本都没有问题。</p><p>最让人动心的是农行天研和邮储苏研，最想去的城市是青岛，但是山东这地方确实有点离谱了，天津和苏州都没去过，开盲盒，选了天津，只能说天津不去也大概知道什么样，典型北方城市，应该不会出错。</p><p>以上。</p>]]></content>
    
    
    <summary type="html">聊一聊找工作的事，总结下秋招</summary>
    
    
    
    <category term="工作" scheme="http://lishuaiyun.cn/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
    <category term="秋招" scheme="http://lishuaiyun.cn/tags/%E7%A7%8B%E6%8B%9B/"/>
    
  </entry>
  
  <entry>
    <title>置身事内：中国政府与经济发展</title>
    <link href="http://lishuaiyun.cn/2022/10/05/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85%EF%BC%9A%E4%B8%AD%E5%9B%BD%E6%94%BF%E5%BA%9C%E4%B8%8E%E7%BB%8F%E6%B5%8E%E5%8F%91%E5%B1%95/"/>
    <id>http://lishuaiyun.cn/2022/10/05/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85%EF%BC%9A%E4%B8%AD%E5%9B%BD%E6%94%BF%E5%BA%9C%E4%B8%8E%E7%BB%8F%E6%B5%8E%E5%8F%91%E5%B1%95/</id>
    <published>2022-10-05T02:51:02.000Z</published>
    <updated>2022-10-05T03:51:22.718Z</updated>
    
    <content type="html"><![CDATA[<p>思维导图整理到了幕布：<a href="https://www.mubucm.com/doc/sSR4o0hf_C">https://www.mubucm.com/doc/sSR4o0hf_C</a></p><p>整本书写作逻辑分为三部分：地方政府的权力和事务划分、地方政府推动经济发展的模式、该模式下经济发展存在的问题和目前我国正在采取的改革措施。</p><p>印象比较深刻的主线：</p><p>1994年分税制改革：地方政府拿到的税收+中央转移支付 只能维持基本的政府运转，基础设施建设、投资地方企业等等都没有资金来源。</p><p>土地财政和土地金融：城市土地国家垄断，通过推高房价获取财政收入，缺点是土地金融有杠杆，当城市化进度遭到阻碍，地方政府会负债。</p><p>2008年金融危机：美国放贷门槛太低，造成资金无法回收，银行破产，又称“次贷危机”。为了应对金融危机，我国出台四万亿计划提振经济，优点是确实刺激了经济发展，缺点无下限投递，部分资金随意使用，造成金钱浪费，且进一步推高了政府负债。</p><p>中美贸易冲突：房价持续走高，已经走到一个比较危险的地方。国内年轻人负债太高，没有消费欲望，从除商品房外最大商品 汽车销量连年下降可以证明。市场经济下国内生产力过剩，只能输出到国外，中国是美国最大进口国，一定程度上冲击了美国市场，产生了中美贸易冲突。</p><p>国内经济增速放缓：房价处在高位，群众负债太高没有消费欲望，过剩的商品无法全部输出，工人下岗，工厂停办造成了经济增速放缓。目前我国的改革方式是供给侧结构改革，一方面优化供给结构，控制生产。另一方面刺激消费，消化过剩商品。促进形成国内大循环，国内国际双循环的经济体系。</p>]]></content>
    
    
    <summary type="html">一文搞懂政府推动经济发展模式以及当下问题</summary>
    
    
    
    <category term="读书分享" scheme="http://lishuaiyun.cn/categories/%E8%AF%BB%E4%B9%A6%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="经济学" scheme="http://lishuaiyun.cn/tags/%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>小狗钱钱&amp;富爸爸穷爸爸</title>
    <link href="http://lishuaiyun.cn/2022/07/29/%E5%B0%8F%E7%8B%97%E9%92%B1%E9%92%B1-%E5%AF%8C%E7%88%B8%E7%88%B8%E7%A9%B7%E7%88%B8%E7%88%B8/"/>
    <id>http://lishuaiyun.cn/2022/07/29/%E5%B0%8F%E7%8B%97%E9%92%B1%E9%92%B1-%E5%AF%8C%E7%88%B8%E7%88%B8%E7%A9%B7%E7%88%B8%E7%88%B8/</id>
    <published>2022-07-29T02:51:02.000Z</published>
    <updated>2023-04-13T14:06:56.470Z</updated>
    
    <content type="html"><![CDATA[<p>《小狗钱钱》和《富爸爸穷爸爸》是两本理财经典入门书籍，因为是理财启蒙读物，所以更侧重故事性，干货比较少，一晚上就能看完。</p><h1 id="1-小狗钱钱"><a href="#1-小狗钱钱" class="headerlink" title="1 小狗钱钱"></a>1 小狗钱钱</h1><p><strong>七二法则</strong>：七二法则是一种用于<strong>计算复利效应</strong>的财务规则 。它表明，一笔投资通过复利增值翻倍所需要的时间，约等于72除以该投资年化收益率的百分比数值 。例如，如果一个投资年化收益率为8%，那么用七二法则可以计算出这笔投资翻倍所需的年份大约为9年（72/8=9）。推导还挺难的，略。</p><p><strong>风险分摊</strong>：合理规划自己的资金，比如50%用来投资，投资不要放在一个篮子里；40%用来实现中短期目标；还有10%用于日常零花。</p><p>还有一些筛选基金的方法，比较基础，不多赘述。</p><h1 id="2-富爸爸穷爸爸"><a href="#2-富爸爸穷爸爸" class="headerlink" title="2 富爸爸穷爸爸"></a>2 富爸爸穷爸爸</h1><p><strong>资产的概念</strong>：资产是不需要到场就能运营赚取收益的东西，比如股票、股票、债券、能产生收益的房地产、票据、版权等。通过职业赚取的钱单纯进行储蓄没有意义，将钱用于投资资产能够持续增加现金流，是财富自由的必经之路。</p><p><strong>负债的概念</strong>：不断减少你现金流的东西。</p><p><strong>纳税</strong>：税收针对的是中产阶级，贫穷的人达不到纳税标准，因为富人懂得避税，公司纳税是通过净利润比例纳税，只需要将私人需要买的走公司账户占据公司支付，这部分就是走的税前收入。并且可以不断的用收入项投资作为指出，这样也会避税。</p><p>如何正确的投资？需要培养自己的财商。</p><p><strong>财商</strong>：创造并管理财富的能力。财商的四大要素是：会计、投资、了解市场和法律（减税优惠政策）。</p><p><strong>技能组合</strong>：专业性人才很多，技能的组合会使收入指数级增长。其中最重要的技能是销售和营销。</p><p><strong>资金短缺：</strong>资金出现短缺时，不要动用储蓄，给自己压力想办法解决。</p>]]></content>
    
    
    <summary type="html">两本理财入门读物</summary>
    
    
    
    <category term="读书分享" scheme="http://lishuaiyun.cn/categories/%E8%AF%BB%E4%B9%A6%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="理财" scheme="http://lishuaiyun.cn/tags/%E7%90%86%E8%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>激荡四十年</title>
    <link href="http://lishuaiyun.cn/2022/05/13/%E6%BF%80%E8%8D%A1%E5%9B%9B%E5%8D%81%E5%B9%B4/"/>
    <id>http://lishuaiyun.cn/2022/05/13/%E6%BF%80%E8%8D%A1%E5%9B%9B%E5%8D%81%E5%B9%B4/</id>
    <published>2022-05-13T08:47:42.000Z</published>
    <updated>2022-05-13T08:47:42.481Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>春招全记录</title>
    <link href="http://lishuaiyun.cn/2022/05/02/%E6%98%A5%E6%8B%9B%E5%85%A8%E8%AE%B0%E5%BD%95/"/>
    <id>http://lishuaiyun.cn/2022/05/02/%E6%98%A5%E6%8B%9B%E5%85%A8%E8%AE%B0%E5%BD%95/</id>
    <published>2022-05-02T12:18:11.000Z</published>
    <updated>2022-05-02T12:44:14.220Z</updated>
    
    <content type="html"><![CDATA[<p>春招结束大概有半个月了，今晚闲来无事想总结下自己的春招。</p><p>大概投递了以下公司：</p><p>美团，拼多多，360，蚂蚁，米哈游，网易，华为，百度，腾讯，字节，快手</p><p>进入面试的有：</p><p>美团，蚂蚁，网易，华为，腾讯，字节，快手</p><p>收到意向：蚂蚁，字节，快手</p><p>还在排序：网易，华为</p><p>面了一半放弃：腾讯</p><p>面的基本都过了，不会很高级的知识，感觉关键在于算法题做出来和简历上写的都很有把握，基本面试官问的我简历上的东西我都能比较熟练的回答出来，而且大厂更看基础，几乎所有的面试官给我的评价都是基础很好。</p><p>我是很反感面向面试学习，我基本没有看过面经，针对面经的问题复习不够体系化，深度也不够，关键还是把学过的知识形成体系，深度足够。</p><h1 id="1-美团"><a href="#1-美团" class="headerlink" title="1. 美团"></a>1. 美团</h1><p>美团笔试直接白卷G了，但后来还是被捞了，一面过，二面挂。</p><p><strong>一面</strong></p><ol><li>mysql和redis区别，各自的应用场景。</li><li>你刚才说的都是mysql和redis的写，举个读的应用场景。</li><li>mysql和redis怎么同步，redis读mysql的时候读主库还是从库，读主库主库负载不了，读从库延迟怎么办</li><li>多个从库延迟不同，读取结果不同怎么办</li><li>如果用主主架构行吗</li><li>rpc框架用过吗</li><li>rpc有同步调用和异步调用，区别是什么</li><li>同步阻塞和同步非阻塞的区别是什么，各自优缺点</li><li>注册中心用过吗</li><li>eureka原理是什么，怎么做到注册的</li><li>请求长时间得不到响应怎么办</li><li>长连接和短连接的优缺点</li><li>进程和线程区别，各自的通信机制</li><li>切换的时候各自的代价</li><li>实习的时候用过spark，spark怎么获知不同机器之间的信息</li><li>算法：反转指定区间内的链表</li></ol><p>一面全问了框架，这块只是了解，全程靠猜。</p><p><strong>二面</strong></p><ol><li>RPC框架</li><li>MySQL事务</li><li>事务拆分</li><li>秒杀数据库一致性</li><li>实习项目框架</li><li>设计模式随便说一个</li></ol><h1 id="2-蚂蚁"><a href="#2-蚂蚁" class="headerlink" title="2. 蚂蚁"></a>2. 蚂蚁</h1><p>阿里系八股问的不多，算法也不怎么做，主要就是项目，考察知识的灵活运用。</p><p><strong>一面</strong></p><ol><li>泛型用在什么场景？</li><li>接口上使用泛型实现类需要实现该泛型吗？</li><li>反射能不能拿到父类和父类中的private</li><li>抽象类和接口应用场景</li><li>查看timewait的linux命令</li><li>error能被捕捉吗 受检异常和非受检异常</li><li>秒杀系统怎么防止超卖（MySQL stock &gt; 0）</li><li>mysql扛不住怎么办？</li><li>内存标记为0如果有人回表怎么办？从技术上和业务两个角度解决问题</li><li>如果并发量太大，每条记录要做日志怎么处理</li><li>不用消息队列怎么办</li><li>重复秒杀</li><li>限流</li><li>kafka了解吗说一说</li><li>redis读多写少的话怎么分片</li></ol><p><strong>二面</strong></p><ol><li>实习相关</li><li>秒杀相关</li><li>redis集群重新分片</li></ol><p><strong>三面</strong></p><ol><li>为什么做秒杀</li><li>整体的架构思路和优化思路</li><li>超卖几种情况，怎么解决</li><li>少卖几种情况，怎么解决</li><li>介绍实习工作</li><li>怎么优化的？整体思路</li><li>遇到的最大挑战</li><li>怎么学习的</li><li>为什么不待在之前实习的公司</li><li>职业规划</li></ol><h1 id="3-网易雷火"><a href="#3-网易雷火" class="headerlink" title="3. 网易雷火"></a>3. 网易雷火</h1><p>一二面表现不错，三面感觉差点意思，主要是策略模式应该用了动态绑定实现，这个当时没想起来怎么做</p><p><strong>一面</strong></p><ol><li>数据库存的数据乱码怎么办？</li><li>数据库本身编码不对？不是这个原因</li><li>sql调优</li><li>docker file用过吗</li><li>docker image发布过吗</li><li>linux查看进程</li><li>sql  语句 查不重复的值</li><li>redis过期键删除策略</li><li>定期删除的具体选取键是怎么选的</li><li>spring ioc</li><li>结束进程的方式</li></ol><p><strong>二面</strong></p><ol><li>HashTable和ConcurrentHashMap</li><li>redis用c写的，怎么优化让它变快的</li><li>redis持久化</li><li>mysql持久化</li><li>spring aop</li><li>springboot启动流程</li><li>算法：剪绳子</li></ol><p><strong>三面</strong></p><ol><li>手写策略模式</li><li><p>策略模式优缺点</p></li><li><p>手画Java线程状态变化图</p></li><li><p>线程池创建以及所有参数</p></li><li><p>自己实现线程同步</p></li><li><p>使用定义泛型使用一下</p></li></ol><h1 id="4-华为"><a href="#4-华为" class="headerlink" title="4. 华为"></a>4. 华为</h1><p><strong>一面</strong></p><ol><li>实习</li><li>timewait</li><li>用过什么设计模式</li><li>找到带有某个字符的文件</li><li>linux命令</li><li>常用数据结构</li><li>linux 文件系统</li><li>算法：砖墙</li></ol><p><strong>二面</strong></p><p>主管学数学的，看我本科学数学，撞枪口了属于是</p><ol><li>实数怎么定义，数学符号语言描述</li><li>啥最难，我说实变函数，他就问实变函数，G</li><li>测度的定义</li><li>还有实变函数的一些问题，全不会</li><li>开放性问题</li></ol><h1 id="5-腾讯"><a href="#5-腾讯" class="headerlink" title="5. 腾讯"></a>5. 腾讯</h1><p><strong>一面</strong></p><ol><li>实习</li><li>秒杀项目</li><li>算法1：寻找二维有序数组的第k大的数</li><li>算法2：判断合法括号</li></ol><p><strong>二面</strong></p><p>后期没有面试状态了，加上部门业务不感兴趣，不想面了二面就拒绝了</p><h1 id="6-字节"><a href="#6-字节" class="headerlink" title="6. 字节"></a>6. 字节</h1><p><strong>一面</strong></p><ol><li>三次握手和四次挥手</li><li>线程池</li><li>拒绝策略</li><li>阻塞队列</li><li>JVM运行时数据区</li><li>算法：编辑距离</li></ol><p><strong>二面</strong></p><ol><li>实习</li><li>进程通信的方式</li><li>共享内存会出现什么问题</li><li>java锁升级</li><li>threadlocal</li><li>最长不重复子字符串</li><li>交替打印</li></ol><p><strong>三面</strong></p><ol><li>user<id, name ,parentId> 建树（为一个数据库表转化成树结构然后遍历树结构输出）</li><li>建好的树层序遍历</li></ol><h1 id="7-快手"><a href="#7-快手" class="headerlink" title="7. 快手"></a>7. 快手</h1><p><strong>一面</strong></p><ol><li>用过快手吗？快手应该从哪改进</li><li>发出http报文后到渲染到浏览器过程</li><li>Java内存结构</li><li>CMS垃圾收集器</li><li>HashMap</li><li>B+树</li><li>synchronized</li><li>volatile</li><li>希尔排序</li><li>堆排序</li><li>数据链路层的设备：交换机</li><li>redis用过什么数据结构</li><li>算法：第k大的数字（快排）</li></ol><p>这是八股强度最大的一次，问了也不深入，麻木的问答，感觉是kpi</p><p><strong>二面</strong></p><ol><li>实习</li><li>秒杀</li><li>B+树结构</li><li>算法：合并k个有序链表</li></ol><p>二面完主管当场夸了说很好，后面让hr安排入职，问了下我能实习多长实现，回答三个月而且还不能立即到岗，当场G。</p>]]></content>
    
    
    <summary type="html">春招面试情况汇总</summary>
    
    
    
    <category term="工作" scheme="http://lishuaiyun.cn/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
    <category term="春招" scheme="http://lishuaiyun.cn/tags/%E6%98%A5%E6%8B%9B/"/>
    
  </entry>
  
  <entry>
    <title>被讨厌的勇气</title>
    <link href="http://lishuaiyun.cn/2022/05/02/%E8%A2%AB%E8%AE%A8%E5%8E%8C%E7%9A%84%E5%8B%87%E6%B0%94/"/>
    <id>http://lishuaiyun.cn/2022/05/02/%E8%A2%AB%E8%AE%A8%E5%8E%8C%E7%9A%84%E5%8B%87%E6%B0%94/</id>
    <published>2022-05-02T12:16:57.000Z</published>
    <updated>2022-05-08T14:46:40.613Z</updated>
    
    <content type="html"><![CDATA[<p>心理学有群体心理学和个体心理学。之前的《乌合之众》讲的是个体在群体中的表现，群体在社会中的的心理特征，而被讨厌的勇气就是个体心理学，讲的是单独的个体，其内在的心里表现。</p><p>个体心理学有三大巨头：弗洛伊德，荣格和阿德勒。被讨厌的勇气讲的是阿德勒心理哲学。</p><h1 id="1-第一夜-我们的不幸是谁的错"><a href="#1-第一夜-我们的不幸是谁的错" class="headerlink" title="1. 第一夜 我们的不幸是谁的错"></a>1. 第一夜 我们的不幸是谁的错</h1><p>当下的一切都由过去推导而来，要想解决心理创伤，首先要知道过去发生了什么事导致了现在的心理创伤，进而去解决它，这是弗洛伊德主张的原因论。</p><p>阿德勒心理学否定原因论，主张目的论，遭遇了重大的挫折并不是不会对我们的人格产生影响，相反，影响会很大。但过去发生了什么并不重要，重要的是我们对过去的经历赋予了什么意义，并不是过去发生了什么一定早就了现在的我们，我们的生活由我们自己决定，是我们对于过去经历的解读形成了现在的我们，这颠覆了传统心理学因果论的思想。之前看过刘慈欣的短篇小说《镜子》，超弦计算机，创世程序，只要模拟的宇宙爆炸和我们本身所在宇宙大爆炸参数一致，后面的一切都可以由计算机推导出来，emmm，认同阿德勒的心理学吧，但是站到大刘小说最宏观的宇宙下，我还真觉得都能由计算机推导…</p><p>这样的思想是在无视现实世界既定的事实吗？物质世界一切都是客观存在的，高房价，严重的社会阶级矛盾，舆论的控制都是现实，不关注过去发生了什么不是在无视现实吗？但是我们都是庞大的社会中的渺小个体，即便执着于过去我们也无法改变，所以执着于过去反而不太现实，改变不了世界，我们只能改变当下的自己，一个人的本性不能被更换，但能被更新，我们无法选择既定的过去，我们亦不能选择确定的未来，我们能做的，是活在当下的选择，我们之所以没有改变生活的决心，是因为我们在自己不断下着不要改变的决心：</p><ul><li>如果一直保持现在的我，如何应对眼前的事情都可以根据既有的经验推测，这是轻车熟路的状态。</li><li>如果选择新的生活方式，那就既不知道新的自己会遇到什么问题也不知道该怎么应对新的事情，未来的生活可能更好也可能更坏。</li></ul><p>人们即使心怀不满，但还是认为保持现状更加轻松和安心。人可以被改变，缺乏的只是选择自己新的生活方式的勇气。决定自己人生的是活在“此时此刻”的你自己。</p><h1 id="2-第二夜-一切烦恼来自人际关系"><a href="#2-第二夜-一切烦恼来自人际关系" class="headerlink" title="2. 第二夜 一切烦恼来自人际关系"></a>2. 第二夜 一切烦恼来自人际关系</h1><p>阿德勒认为一切烦恼都来自于人际关系。那独立于人际关系之外的烦恼呢？</p><p>比如自卑感，自卑感不是客观事实造就的，而是个人主观的臆测，当看到同龄人活跃的姿态时，我会感到自卑，看到朋友幸福没有衷心祝福而是心生嫉妒或者非常焦躁，也不喜欢自己满是粉刺的脸。自卑感是对自我价值的不认可，而所有的价值必须建立在社会意义之上，如果一个人脱离社会独立存在就谈不上自卑感了，所以自卑感这种源于自身的烦恼最终还是可以追溯到人际关系上。</p><p>自卑其实是一个借口，基于目的论解释就是只是为了不去做某事而去臆想的借口，什么都不去做就认定自己不行或者现实无法改变，客观上不同个体之间存在差距，但如果把这种差距主观解释为“我做不到”，那就不是“不能成功”而是“不想成功”了，不愿意为了改变自我而去牺牲目前的乐趣，也就是没有改变生活方式的“勇气”。缺少这种勇气的人就会陷入“自卑情结”。</p><p>“自卑情结”有时会发展为另一种被称为“优越情结”的心理状态。“自卑情结”和“优越情结”看似相反却有紧密的联系，因为自卑通常伴随着如果我能有XX那我也能成功的心理状态，正是自己没有改变的勇气才会通过彰显自己虚假的优越感来进行补偿，比如暴发户正是因为面对真正的上流人士自卑才会通过金钱张扬自身的优越感，很多人也通过不断炫耀自身的高考成绩沉迷于过去的荣耀，正是因为有强烈的自卑感才会骄傲自大，希望得到别人的认可。</p><p>追求优越性是对的，但这里的优越不是比别人优越，而是比自己优越，<strong>不要和任何人竞争，只要自己不断前进即可</strong>。积极地看待自己与别人的差异，我们虽然不同但是平等，一个人的价值在于超越自我。如果在人际关系中存在竞争，那人就不可能摆脱人际关系带来的烦恼，也就不可能摆脱不幸，<strong>如果意识到竞争或胜负势必会产生自卑感，此时不知不觉会把他们当作你的竞争对手，把整个世界看成“敌人”。即使立于不败之地，处于竞争中的人也一刻不得安心，不想称为败者，这或许会得到社会性的成功但得不到幸福。</strong>无法真心祝福他人就是站在竞争的角度来考虑人际关系，把他人的幸福看作我的“失败”所以才无法给与祝福。（李诞在脱口秀里说的“大家都这样想，我比任何人都希望我的哥们幸福，但最好别比我幸福”）一旦从竞争的怪圈解放出来，对世界的看法也大不相同。</p><p>阿德勒认为人际关系有三大课题：工作、交友与爱。当由朋友发展成恋人的时候，一些朋友之间的言行就不再允许了，阿德勒认为对恋人不应该有任何束缚，其实这里有些疑惑，如果恋人丝毫不顾及你的感受胡搞乱混，这也不需要任何束缚吗？我的理解是尽可能的自由放松，没有自卑感也不炫耀优越性，，保持平静而自由的状态，如果对方在保持这种状态下的行为让自己感到不适，那可能真的是两个人不合适了。</p><h1 id="3-第三夜-让干涉你生活的人见鬼去"><a href="#3-第三夜-让干涉你生活的人见鬼去" class="headerlink" title="3. 第三夜 让干涉你生活的人见鬼去"></a>3. 第三夜 让干涉你生活的人见鬼去</h1><p>什么是自由呢？不是指人身的自由，而是思想的自由，行为的自由，很多人受原生家庭的困扰，比如我的父亲控制欲很强，这养成了我遇到问题很难自己拿定主意，处处按照他的想法活着，直到上了大学离开家才有了一些好转。我们要活在他人的期待中吗？满足他人的期待，获得他人的认可从而消除自卑感增加自信心，这会活在他人的世界中。<strong>我们每个人都为自己而活，不为满足他人的期待而活。同样，他人也不为满足我的期待而活，当别人的行为不符合自己的想法时也不必发怒。</strong>有个疑问，我认为杀人犯不应该杀人，但他杀人了我不应该愤怒？父母不应该管教孩子？以及完全不关心别人的想法，完全自私的活着？</p><p>阿德勒提出解决人际关系的关键在于<strong>课题分离</strong>。一切人际关系矛盾都起因于对别人的课题妄加干涉或者自己的课题被别人妄加干涉，当有一个课题的时候，首先应该考虑的是“这是谁的课题”。辨别是谁的课题的方法就是考虑“某种选择带来的后果应该谁来承担”。<strong>关于自己的人生我们能够做的就是“选择的自己认为最好的道路”。另一方面，别人如何评价我的选择，那是别人的课题，我根本不能左右。</strong>就像父母要求你做什么事，如果按照他们的想法做事，选择的是他们，承担后果的却是你，所以应该自己应对自己的课题。</p><p>知乎有这样一段话：孩子的成长不仅是孩子的人生课题，也是家长的人生课题。<strong>家长不能以人生课题分离为理由放弃对孩子的教育和管束。</strong>随着孩子逐渐长大，他自己能够完成的人生课题越来越多。家长应该逐渐从孩子的生活中退出，要有做好人生课题分离的意识，不要过多的干涉孩子能够完成和必须由孩子自己完成的人生课题。关于生活的各种知识，家长可以向孩子进行演示，引导，说明利害。对于孩子所做的各种事情，家长要表明自己的态度，给孩子正确的反馈。这本身就是一个教育的过程，家长的反馈能够帮助孩子树立正确的是非对错观念。在紧急的情况下，对孩子的不当行为进行强力的制止以及适当的惩罚都是必要的。</p><p>阿德勒的思想有些过于极端和反直觉，私以为不能全盘接收，应该根据自身情况灵活内化运用。</p><h1 id="4-第四夜-要有被讨厌的勇气"><a href="#4-第四夜-要有被讨厌的勇气" class="headerlink" title="4. 第四夜 要有被讨厌的勇气"></a>4. 第四夜 要有被讨厌的勇气</h1><p>课题分离，人的烦恼可能会减少，但不干涉别人的课题也不被别人干涉，这是否是以自我为中心的错误的个人主义呢？</p><p>课题分离不是为了疏远他人，而是用来解开错综复杂的人际关系，课题分离是起点，共同体才是终点。</p><p>共同体感觉指把他人看作伙伴并能够从种感到“自己有位置”的状态，那么如何做到从课题分离到共同点呢？阿德勒认为应该在课题分离的基础上建立横向关系，自卑感是从纵向关系延伸出的意识，只要能对所有人都建立起虽不同但平等的意识，就根本不会产生自卑情结。</p><p>那在同辈之间也会产生纵向关系吗？即使不按照上司或者部下的关系理解，也会产生“A不如我，我不如B”，“要听B的，不听A的”这种概念。建立横向关系是生活方式上的重大转变。</p><p>在我们的社会中，上下关系是一种制度，无视这一点就是无视社会秩序，那怎么建立横向关系呢？<strong>不是向朋友一样对待领导，重要的是意识上的平等以及坚持自己应有的主张。</strong></p><h1 id="5-第五夜-认真的人生“活在当下”"><a href="#5-第五夜-认真的人生“活在当下”" class="headerlink" title="5. 第五夜 认真的人生“活在当下”"></a>5. 第五夜 认真的人生“活在当下”</h1><p>共同体概念首先需要从“我”开始，延伸至大的共同体。首先需要<strong>停止对“我”的执著，换成“对他人的关心”</strong>。对自我太执着是因为自我意识过剩，<strong>自我意识过剩是指对自我存在过分放大，要么总觉的别人在看自己，因为太在乎别人而限制了自己的言行；或是过分以自身认知干涉外界。</strong></p><p>为什么会自我意识过剩呢？小心翼翼的行动是为了不被嘲笑，不被小瞧，比如我有时会想参与到不符合平时行为的活动（比如操场唱歌和修眉），又顾及到同行者不能真正的放下自己，不敢显露自己的本真。而一个人在房间却能高谈阔论，放声歌唱。<strong>停止对“我”的执著，换成“对他人的关心要做到三点：自我接纳，他者信赖和他者贡献。</strong></p><p>自我接纳指假如做不到就诚实地接受这个“做不到的自己”，然后尽量朝着能够做到的方向去努力，不对自己撒谎。自我接纳是接受不能更换的事物，接受真实的“我”。然后关于可以改变的事情，拿出改变的“勇气”，这就是自我接纳。</p><p>他者信赖指相信他人不附加任何条件。是否背叛是他人的课题，如果想要逃避痛苦或者悲伤才不敢付诸行动，以至于与任何人都无法建立起深厚的关系。</p><p>他人贡献并不是舍弃“我”而为他人效劳，它反而是为了能够体会到“我”的价值而采取的一种手段。为他人贡献并不是为了获得他人的认可，这样仍然会回到自我束缚的怪圈，形成自卑情结，而是产生“我对他人有用”的<strong>主观上的“贡献感”。</strong></p><p>人类都具有“优越性追求”，希望自己特别优秀，但是当特别优秀的愿望无法实现的时候，就会转而“希望自己特别差劲”，其目的都一样，希望获得他人的关注，脱离普通成为特别的存在，<strong>这是廉价的优越性追求</strong>。</p><p>但是不可能所有人都特别优秀，自我接纳要有甘于平凡的勇气，普通并不等于无能，人生并不需要长远的目标。就像第一夜说的那样，过去的自己与此时此刻的自己没有任何关系，未来会如何也不是“此时此刻”要考虑的问题。但这并不意味着不需要为了未来努力，例如想上大学却不想学习，这就是没有过好“此时此刻”的态度，<strong>如果为了遥远的人生目标，并认为现在是准备阶段，一直想着“真正想做的是这样的事情，等时机到了就去做”，是一种拖延人生的生活方式。只要是在拖延人生，我们就会无所进展，只能每天过着枯燥乏味的单调生活，因为这种情况下，人会认为“此时此刻”只是准备阶段和忍耐阶段。</strong>就像我想毕业去做激光，毕业学乐器，摄影等等，其实就是对当下的不负责，人生有几个三年等到毕业才去实现，所以有想法就要去做，这才是“活在当下”。</p><p>没有人生目标无妨，因为人生本就舞动在“此时此刻”。人生也不存在普遍性的人生意义，每个人的人生意义，都该由自己决定。</p>]]></content>
    
    
    <summary type="html">一个人不活在过去，不活在未来，只活在当下。</summary>
    
    
    
    <category term="读书分享" scheme="http://lishuaiyun.cn/categories/%E8%AF%BB%E4%B9%A6%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="心理学" scheme="http://lishuaiyun.cn/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>乌合之众</title>
    <link href="http://lishuaiyun.cn/2022/04/13/%E4%B9%8C%E5%90%88%E4%B9%8B%E4%BC%97/"/>
    <id>http://lishuaiyun.cn/2022/04/13/%E4%B9%8C%E5%90%88%E4%B9%8B%E4%BC%97/</id>
    <published>2022-04-13T13:34:14.000Z</published>
    <updated>2022-04-13T14:07:04.106Z</updated>
    
    <content type="html"><![CDATA[<p>《乌合之众》原名《The Crowd》,很明显译者翻译为《乌合之众》纯粹是为了标题党好卖，我很讨厌《乌合之众》这个书名，带有高高在上和不屑的意味，也有很多人自以为读了这本书就脱离了群体，认为自己是社会的精英，这显然就是低智行为了，没有人能脱离群体存在。</p><p>但这本书仍然贡献了很有用的观点，并且我们能跟当前的生活对应，《乌合之众》最核心的观点就是群体的智商低下，聪明的个体在融入群体之后会做出违背自身意志的行为，因为群体之间的意志具有简单性，传播性，迷惑性的特点。</p><p>这也是我对《乌合之众》翻译名很抗拒的原因，群体之间容易接收观点未必是一件坏事。好的方面，群体的信仰就是这样形成的，没有这些，我们无法形成瑰丽的文明。坏的方面，群体确实容易被煽动，比如微博评论经常表现为低智化。勒庞总体上对于群体观念是贬低态度，但仍不吝惜高度的赞扬：</p><p>他们当然是在无意识地实践着这些美德，然而这无碍大局， 我们不该对群体求全责备，说他们经常受无意识因素的左右，不善于动脑筋。在某些情况下，如果他们开动脑筋考虑起自己的眼前利益，我们这个星球上根本就不会成长出文明，人类也不会有自己的历史了。</p><p>让人们怀抱着那些希望和幻想吧，不然他们是活不下去的。这就是存在着诸神、英雄和诗人的原因。在渴望理想的心灵里，科学是有所欠缺的，因为它不敢做出过于慷慨的承诺，因为它不能撒谎。</p><p>群体从来不受理性的指引，是否该对此表示遗憾？我们不必贸然称是。毫无疑问，是幻觉引起的激情和愚顽，激励着人类走上了文明之路。 因此，还是让我们把理性留给哲人，不要过于强烈地坚持让它插手对人的统治吧。一切文明的主要动力并不是理性，倒不如说，尽管存在着理性，文明的动力仍然是各种感情，譬如尊严、自我牺牲、宗教信仰、爱国主义以及对荣誉的爱。</p><p>总结：勒庞有种族主义，贬低妇女，对群体贬低，书中的很多内容我们都不必在意，我们只需要记住，我们是群体的一部分，每个人既是独立的个体，又属于群体的一部分，不要觉得自己高高在上，然而对于群体之间的一些舆论，保持自己清醒的头脑，正如《黑客与画家》中说的那样，凡是不认同社会之处，你连想都不敢想，马上就放弃自己的观点，那才会真正出问题。</p>]]></content>
    
    
    <summary type="html">具有时代局限性仍可称为好书</summary>
    
    
    
    <category term="读书分享" scheme="http://lishuaiyun.cn/categories/%E8%AF%BB%E4%B9%A6%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="心理学" scheme="http://lishuaiyun.cn/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>JVM中的记忆集</title>
    <link href="http://lishuaiyun.cn/2022/03/02/JVM%E4%B8%AD%E7%9A%84%E8%AE%B0%E5%BF%86%E9%9B%86/"/>
    <id>http://lishuaiyun.cn/2022/03/02/JVM%E4%B8%AD%E7%9A%84%E8%AE%B0%E5%BF%86%E9%9B%86/</id>
    <published>2022-03-02T03:39:33.000Z</published>
    <updated>2022-03-26T13:13:22.132Z</updated>
    
    <content type="html"><![CDATA[<p>在JVM中的跨代引用这里一直有些疑惑，Minor GC时应该是从GC Roots为起点遍历整个分析链，这样的话要记忆集干嘛呢，因为记忆集是防止遍历老年代的呀。那如果GC Roots只遍历年轻代为止，JVM怎么知道遍历到的节点是年轻代还是老年代呢。</p><p>查了一些资料其实还挺深入的。</p><p><strong>新生代GC的时候从GC Roots出发不会扫描整个图，而是遍历到老年代对象就会停止（防止遍历整个老年代，节省开销）</strong>。因为HotSpot虚拟机在堆中地址空间连续，有一个分界线，一边是新生代，一边是老年代，如果遍历到老年代停止那老年代引用的新生代对象无法被遍历到，此时我们需要记忆集来维护一个列表记录哪些新生代被老年代引用，将这些老年代也加入GC Roots（因为是Minor GC，默认老年代都存活）。（记忆集的一种实现叫做卡表）</p><p>GC Roots是一组活跃的引用，通常是：</p><ul><li>Java 虚拟机栈（栈帧中的本地变量表）中引用的对象</li><li><p>本地方法栈中引用的对象</p></li><li><p>方法区中常量引用的对象</p></li><li><p>方法区中类静态属性引用的对象</p></li><li><p>所有被同步锁（synchronized关键字）持有的对象。 </p></li></ul><p>但也不只是这些，在Minor GC时不知道老年代的存活情况，默认老年代是存活的，<strong>所以要把引用新生代的老年代也都加入到GC Roots中。</strong></p><p>参考链接：</p><ul><li><a href="https://www.zhihu.com/question/53613423/answer/135743258">RednaxelaFX</a></li><li><a href="http://javainterview.gitee.io/luffy/2021/08/19/04-Java%E8%99%9A%E6%8B%9F%E6%9C%BA/04.%20%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/">Java3y</a></li></ul>]]></content>
    
    
    <summary type="html">JVM中的记忆集作用</summary>
    
    
    
    <category term="Java" scheme="http://lishuaiyun.cn/categories/Java/"/>
    
    
    <category term="JVM" scheme="http://lishuaiyun.cn/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>threadlocal源码分析</title>
    <link href="http://lishuaiyun.cn/2022/02/21/threadlocal/"/>
    <id>http://lishuaiyun.cn/2022/02/21/threadlocal/</id>
    <published>2022-02-21T09:06:45.000Z</published>
    <updated>2022-03-26T13:14:38.517Z</updated>
    
    <content type="html"><![CDATA[<p>最近在看多线程相关的知识，关于ThreadLocal内存泄漏问题查了一些博客感觉都没有说明白，通过查看源码有了一些心得，这里分享一下。<strong>采用自顶向下的方式说明原理。</strong></p><h1 id="1-ThreadLocal作用"><a href="#1-ThreadLocal作用" class="headerlink" title="1. ThreadLocal作用"></a>1. ThreadLocal作用</h1><p>ThreadLocal是 JDK包提供的，它提供了线程本地变量，也就是如果你创建了一个ThreadLocal变量，那么访问这个变量的每个线程都会有这个变量的一个本地副本。当多个线程操作这个变量时，实际操作的是自己本地内存里面的变量，从而避免了线程安全问题。创建一个ThreadLocal变量后，每个线程都会复制一个变量到自己的本地内存，常用于保存userinfo，这样就不用将userinfo作为函数参数传递了。</p><h1 id="2-ThreadLocal原理探究"><a href="#2-ThreadLocal原理探究" class="headerlink" title="2. ThreadLocal原理探究"></a>2. ThreadLocal原理探究</h1><p>Thread类中有一个ThreadLocalMap类型的变量threadLocals，而ThreadLocalMap是一个哈希表。在默认情况下，每个线程中的这两个变量都为null，只有当前线程第一次调用ThreadLocal 的set或者get方法时才会创建它们。<strong>其实每个线程的本地变量不是存放在ThreadLocal实例里面，而是存放在调用线程的threadLocals变量里面。也就是说，ThreadLocal类型的本地变量存放在具体的线程内存空间中。ThreadLocal就是一个工具壳，它通过set方法把 value值放入调用线程threadLocals里面并存放起来，当调用线程调用它的get方法时，再从当前线程的threadLocals变量里面将其拿出来使用。</strong>另外，Thread里面的threadLocals被设计为map结构是因为每个线程可以关联多个ThreadLocal变量。</p><p>thread类中的threadlocals变量：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ThreadLocal values pertaining to this thread. This map is maintained</span></span><br><span class="line"><span class="comment"> * by the ThreadLocal class. */</span></span><br><span class="line">ThreadLocal.ThreadLocalMap threadLocals = <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><p>threadlocal的set，get方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the value in the current thread&#x27;s copy of this</span></span><br><span class="line"><span class="comment"> * thread-local variable.  If the variable has no value for the</span></span><br><span class="line"><span class="comment"> * current thread, it is first initialized to the value returned</span></span><br><span class="line"><span class="comment"> * by an invocation of the &#123;<span class="doctag">@link</span> #initialValue&#125; method.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the current thread&#x27;s value of this thread-local</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">get</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//获取当前线程</span></span><br><span class="line">    Thread t = Thread.currentThread();</span><br><span class="line">    <span class="comment">//获取当前线程内的map并取值</span></span><br><span class="line">    ThreadLocalMap map = getMap(t);</span><br><span class="line">    <span class="keyword">if</span> (map != <span class="keyword">null</span>) &#123;</span><br><span class="line">        ThreadLocalMap.Entry e = map.getEntry(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">if</span> (e != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">            T result = (T)e.value;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> setInitialValue();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Variant of set() to establish initialValue. Used instead</span></span><br><span class="line"><span class="comment"> * of set() in case user has overridden the set() method.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the initial value</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(T value)</span> </span>&#123;</span><br><span class="line">    Thread t = Thread.currentThread();</span><br><span class="line">    ThreadLocalMap map = getMap(t);</span><br><span class="line">    <span class="keyword">if</span> (map != <span class="keyword">null</span>)</span><br><span class="line">        map.set(<span class="keyword">this</span>, value);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        createMap(t, value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-ThreadLocal内存泄漏问题"><a href="#3-ThreadLocal内存泄漏问题" class="headerlink" title="3. ThreadLocal内存泄漏问题"></a>3. ThreadLocal内存泄漏问题</h1><p>ThreadLocal存在内存泄漏的隐患，因为根据原理知道变量是通过thread类中的threadlocals变量存储的，正常情况下threadlocals生命周期跟随Thread，当线程结束时，内部的threadlocals变量仍然通过threadlocal引用key。造成了内存泄漏的情况。那JDK对这种情况是否有相应的措施呢？其实是有的，看下源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadLocalMap</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Entry</span> <span class="keyword">extends</span> <span class="title">WeakReference</span>&lt;<span class="title">ThreadLocal</span>&lt;?&gt;&gt; </span>&#123;</span><br><span class="line">        <span class="comment">/** The value associated with this ThreadLocal. */</span></span><br><span class="line">        Object value;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//entry内部key是threadlocal对象，value存储set传递的值</span></span><br><span class="line">        Entry(ThreadLocal&lt;?&gt; k, Object v) &#123;</span><br><span class="line">            <span class="keyword">super</span>(k);</span><br><span class="line">            value = v;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">private</span> Entry[] table;</span><br><span class="line">    </span><br><span class="line">    ThreadLocalMap(ThreadLocal&lt;?&gt; firstKey, Object firstValue) &#123;</span><br><span class="line">        table = <span class="keyword">new</span> Entry[INITIAL_CAPACITY];<span class="comment">//强引用</span></span><br><span class="line">        <span class="keyword">int</span> i = firstKey.threadLocalHashCode &amp; (INITIAL_CAPACITY - <span class="number">1</span>);</span><br><span class="line">        table[i] = <span class="keyword">new</span> Entry(firstKey, firstValue);</span><br><span class="line">        size = <span class="number">1</span>;</span><br><span class="line">        setThreshold(INITIAL_CAPACITY);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Thread类中的Threadlocals对象是ThreadLocalMap实现的，ThreadLocalMap底层是Entry数组，单个Entry节点内部存放了key（threadlocal对象），value（实际要存放的数据），Entry节点继承了弱引用，<strong>存放key的时候将key设为弱引用</strong>。threadLocalMap引用entry是<strong>强引用</strong>。</p><p><img src="/img/threadlocal.jpg" alt="threadlocal.jpg"></p><p>若当前没有线程引用Entry节点时，我们知道弱引用对象会在下一次垃圾回收的时候被回收掉，于是垃圾回收后map内存放的对象变为<null, value>，那value还是强引用，节点还是不为空，仍在存活，其实在调用threadlocal的set，get，remove方法时都会寻找时机清理这些Entry节点为<null,value>的元素。以set方法为例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadLocal</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(T value)</span> </span>&#123;</span><br><span class="line">        Thread t = Thread.currentThread();</span><br><span class="line">        ThreadLocalMap map = getMap(t);</span><br><span class="line">        <span class="keyword">if</span> (map != <span class="keyword">null</span>)</span><br><span class="line">            map.set(<span class="keyword">this</span>, value);<span class="comment">//调用map的set方法内部会调用清理函数</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            createMap(t, value);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadLocalMap</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(ThreadLocal&lt;?&gt; key, Object value)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// We don&#x27;t use a fast path as with get() because it is at</span></span><br><span class="line">        <span class="comment">// least as common to use set() to create new entries as</span></span><br><span class="line">        <span class="comment">// it is to replace existing ones, in which case, a fast</span></span><br><span class="line">        <span class="comment">// path would fail more often than not.</span></span><br><span class="line"></span><br><span class="line">        Entry[] tab = table;</span><br><span class="line">        <span class="keyword">int</span> len = tab.length;</span><br><span class="line">        <span class="keyword">int</span> i = key.threadLocalHashCode &amp; (len-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Entry e = tab[i];</span><br><span class="line">             e != <span class="keyword">null</span>;</span><br><span class="line">             e = tab[i = nextIndex(i, len)]) &#123;</span><br><span class="line">            ThreadLocal&lt;?&gt; k = e.get();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (k == key) &#123;</span><br><span class="line">                e.value = value;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (k == <span class="keyword">null</span>) &#123;</span><br><span class="line">                 <span class="comment">//如果key为null，代表这个条目是陈旧的需要被回收的，可以直接用新值替代，内部结束的时候也会调用清理函数   </span></span><br><span class="line">                <span class="comment">//cleanSomeSlots()</span></span><br><span class="line">                replaceStaleEntry(key, value, i);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        tab[i] = <span class="keyword">new</span> Entry(key, value);</span><br><span class="line">        <span class="keyword">int</span> sz = ++size;</span><br><span class="line">        <span class="comment">//尝试清理如果返回false并且已经达到阈值，扩容</span></span><br><span class="line">        <span class="keyword">if</span> (!cleanSomeSlots(i, sz) &amp;&amp; sz &gt;= threshold)</span><br><span class="line">            rehash();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//会清理直到下个Entry节点为止中间的所有&lt;null，value&gt;，至于为什么只清理这一区间而不清理所有，这是很巧妙的算法，因为</span></span><br><span class="line">    <span class="comment">//threadlocalMap使用的是避免哈希碰撞的算法是线性探测</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">cleanSomeSlots</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> removed = <span class="keyword">false</span>;</span><br><span class="line">        Entry[] tab = table;</span><br><span class="line">        <span class="keyword">int</span> len = tab.length;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            i = nextIndex(i, len);</span><br><span class="line">            Entry e = tab[i];</span><br><span class="line">            <span class="keyword">if</span> (e != <span class="keyword">null</span> &amp;&amp; e.get() == <span class="keyword">null</span>) &#123;</span><br><span class="line">                n = len;</span><br><span class="line">                removed = <span class="keyword">true</span>;</span><br><span class="line">                i = expungeStaleEntry(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">while</span> ( (n &gt;&gt;&gt;= <span class="number">1</span>) != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> removed;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但通过set，get等方法内部的清理方式有延时，所以最好还是使用remove()方法及时清理。</p><p>进一步的，对于线程池而言，线程长期存活，线程一直强引用Entry造成内存泄漏，所以要及时调用remove()方法清理。</p>]]></content>
    
    
    <summary type="html">threadlocal原理探究</summary>
    
    
    
    <category term="Java" scheme="http://lishuaiyun.cn/categories/Java/"/>
    
    
    <category term="Java源码" scheme="http://lishuaiyun.cn/tags/Java%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>happens-before</title>
    <link href="http://lishuaiyun.cn/2022/02/12/happens-before/"/>
    <id>http://lishuaiyun.cn/2022/02/12/happens-before/</id>
    <published>2022-02-12T12:39:49.000Z</published>
    <updated>2022-03-26T13:14:21.535Z</updated>
    
    <content type="html"><![CDATA[<p>happens-before原则这里一直云里雾里，今天总结了一下。</p><h2 id="1-从单线程的as-if-serial语义和指令重排序说起。"><a href="#1-从单线程的as-if-serial语义和指令重排序说起。" class="headerlink" title="1. 从单线程的as-if-serial语义和指令重排序说起。"></a>1. 从单线程的as-if-serial语义和指令重排序说起。</h2><p><strong>指令重排</strong></p><p>指令重排就是减少中断的一种技术。但是如果重排序具有数据依赖的操作执行顺序，程序的执行结果就会改变。</p><p>编译器和处理器在重排序时，会遵守数据依赖性，编译器和处理器不会改变存在数据依赖关系的两个操作的执行顺序。这里所说的数据依赖性仅针对单个处理器中执行的指令序列和单个线程中执行的操作，<strong>不同处理器之间和不同线程之间的数据依赖性不被编译器和处理器考虑</strong>。</p><p><strong>as-if-serial语义</strong></p><p>as-if-serial语义的意思是：不管怎么重排序（编译器和处理器为了提高并行度），（单线程）程序的执行结果不能被改变。编译器、runtime和处理器都必须遵守as-if-serial语义。</p><p>为了遵守as-if-serial语义，编译器和处理器不会对存在数据依赖关系的操作做重排序，因为这种重排序会改变执行结果。但是，如果操作之间不存在数据依赖关系，这些操作就可能被编译器和处理器重排序。</p><p>编译器和处理器为了遵守as-if-serial语义可以保证串行语义一致，但是没有义务保证多线程间的语义也一致。<strong>所以在多线程下，指令重排序可能会导致一些问题。</strong></p><h2 id="2-happens-before"><a href="#2-happens-before" class="headerlink" title="2. happens-before"></a>2. happens-before</h2><p>首先看下示例说明多线程下指令重排序的隐患：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HappensBefore</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 线程1和线程2执行，没有执行加锁等同步策略</span></span><br><span class="line"><span class="comment">    * 分别执行的话不考虑重排序如果线程2的条件语句得到执行，那么res的值一定是9</span></span><br><span class="line"><span class="comment">    * 但是如果线程1进行了指令重排序,线程2在线程1的flag=true执行后num执行前会得到res = 1的结果</span></span><br><span class="line"><span class="comment">    * 所以对于多个线程操作同一变量，同时具有可见性和重排序的问题，重排序就是happens-before需要解决的问题</span></span><br><span class="line"><span class="comment">    * 多个线程会发生虽然在单个线程内没有数据依赖，但多个线程通过共享变量存在数据依赖导致单线程不能随便进行指令重排序的情况。</span></span><br><span class="line"><span class="comment">    * 单线程重排序as-if-serial解决，多线程重排序happens-before解决</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testMethod</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">        Thread thread1 = <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            <span class="comment">//两个语句没有数据依赖，可以重排序</span></span><br><span class="line">            num = <span class="number">3</span>;</span><br><span class="line">            flag = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">        Thread thread2 = <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">                res = num * num;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        thread1.start();</span><br><span class="line">        thread2.start();</span><br><span class="line">        Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        HappensBefore demo = <span class="keyword">new</span> HappensBefore();</span><br><span class="line">        demo.testMethod();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>happens-before关系本质上和as-if-serial语义是一回事。多个线程会发生虽然在单个线程内没有数据依赖，但多个线程通过共享变量存在数据依赖会导致单线程不能随便进行指令重排序的情况。</p><p>as-if-serial语义保证单线程内重排序后的执行结果和程序代码本身应有的结果是一致的，<strong>happens-before关系保证正确同步的多线程程序的执行结果不被重排序改变。</strong></p><p>总之，如果操作A happens-before操作B（happens-before不是简单的A发生在B之前，而是B想要看到A的操作，那么需要操作之间必须存在happens-before关系），那么操作A在内存上所做的操作对操作B都是可见的，不管它们在不在一个线程。</p><p>在Java中，有以下天然的happens-before关系：</p><ul><li>程序顺序规则：一个线程中的每一个操作，happens-before于该线程中的任意后续操作。</li><li><p>监视器锁规则：对一个锁的解锁，happens-before于随后对这个锁的加锁。</p></li><li><p>volatile变量规则：对一个volatile域的写，happens-before于任意后续对这个volatile域的读。</p></li><li><p>传递性：如果A happens-before B，且B happens-before C，那么A happens-before C。</p></li><li><p>start规则：如果线程A执行操作ThreadB.start()启动线程B，那么A线程的ThreadB.start（）操作happens-before于线程B中的任意操作、</p></li><li>join规则：如果线程A执行操作ThreadB.join（）并成功返回，那么线程B中的任意操作happens-before于线程A从ThreadB.join()操作成功返回。</li></ul><p>最后，附上在学校内论坛发帖引起的讨论：</p><p><a href="https://bbs.byr.cn/#!article/Java/66185">北邮人论坛：多线程编程中顺序一致性模型和happens-before怎么理解</a></p>]]></content>
    
    
    <summary type="html">happens-before浅析</summary>
    
    
    
    <category term="Java" scheme="http://lishuaiyun.cn/categories/Java/"/>
    
    
    <category term="多线程" scheme="http://lishuaiyun.cn/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>黑客与画家</title>
    <link href="http://lishuaiyun.cn/2022/01/11/%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6/"/>
    <id>http://lishuaiyun.cn/2022/01/11/%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6/</id>
    <published>2022-01-11T09:23:35.000Z</published>
    <updated>2022-04-11T13:07:40.640Z</updated>
    
    <content type="html"><![CDATA[<p>黑客与画家是硅谷创业之父Paul Graham在互联网从业多年的思考，包含他对于创业、致富、沟通、设计、工作、编程和思考方式的理解，这本书真的太好了，关于思考的方式，关于程序的理解，关于团队的沟通都与平时自己积累下来的想法不谋而合。</p><h1 id="1-从业思考"><a href="#1-从业思考" class="headerlink" title="1. 从业思考"></a>1. 从业思考</h1><p>原文：计算机科学是数学和计算机博物学家（研究专门性题目，比如路由算法），计算机技术是黑客（软件工程），是工程师，黑客搞懂“计算理论”的必要性，与画家搞懂颜料化学成分的必要性差不多大。</p><p>理解：理科和工科工作思想有本质区别，理学通常是基础研究，注重理论推导。而工学更强调实用价值，定理应该怎么用是工学更看重的。这也是我从数学转到计算机最难以适应的地方，下意识的探究原理让我比别的同学进度更慢更累，当然，基础会更扎实。</p><p>原文：你把整个程序想清楚的时间点，应该是在编写代码的同时，而不是在编写代码之前，编程语言是用来帮助思考程序的，而不是用来表达你已经想好的程序。<strong>它应该是一支铅笔，而不是一支钢笔</strong>。</p><p>理解：一开始就把所有的细节想好不太现实，也很影响效率，先把大体思路用程序表达出来再不断丰富是更好的选择。</p><p>原文：不要长年累月地在一个项目上不断工作，<strong>应该定期地从头开始，而并且试图把所有的最新想法都以修订版的形式包括进去。</strong></p><p>理解：定期的重写迭代，就像看书，每次读都会有新的收获。</p><p>原文：多人共同开发一个软件的正确模式是需要合作，但是不要“合”得过头。如果一个代码块由三四个人共同开发，就没有人真正“拥有”这块代码。正确的合作方法是将项目分割成严格定义的模块，每一个模块由一个人明确负责。模块与模块之间的接口经过精心设计，如果可能的话，最好把文档说明写得像编程语言规范那样清晰。</p><p>理解：工作分配方式</p><p>原文：<strong>你必须能够站在用户的角度思考问题，也就是说你必须学会“换位思考”。</strong>判断一个人是否具备“换位思考”的能力有一个好方法，那就是看他怎样向没有技术背景的人解释技术问题。 软件的部分功能就是解释自身。为了写出优秀软件，你必须假定用户对你的软件基本上一无所知。 在某些地方，自行其道、完全不替读者着想，被看成是高水平、高智商的表现，甚至都发展成了一种风尚。但是，我不觉得“换位思考”与智商之间存在任何联系。</p><p>理解：写注释的重要性</p><p>原文：黑客就像画家，工作起来是有心理周期的。有时候，你有了一个令人兴奋的新项目，你会愿意为它一天工作16个小时。等过了这一阵，你又会觉得百无聊赖，对所有事情都提不起兴趣。<strong>在你厌倦的时候再去做那些比较容易的工作，这是个不错的主意。</strong></p><p>理解：就像我现在写博客~</p><h1 id="2-设计"><a href="#2-设计" class="headerlink" title="2. 设计"></a>2. 设计</h1><p>原文：<strong>大公司为了避免设计上的灾难，选择了减少设计结果的标准差。</strong>但是当你排斥差异的时候，你不仅将失败的可能性排除在外，也将获得高利润的可能性排除在外。这对大公司来说不是问题，因为生产特别优秀的产品不是它们的获胜手段。大公司只要做到不太烂，就能赢。</p><p>理解：资本的胜利。</p><p>原文：<strong>真正竞争软件设计的战场是新兴领域的市场，这里还没有人建立过防御工事。</strong>只要你能做出大胆的设计，由一个人或一批人同时负责设计和实现产品，你就能在这里战胜大公司。微软公司自己一开始就是这样走向成功的，苹果公司和惠普公司也是如此。我觉得几乎所有的创业公司都是这样取得成功的。</p><p>理解：抖音就是这样成功的，布局新兴领域，这也是当今领域都被大型互联网公司垄断情况下创业公司成功的唯一途径。</p><p>原文：好设计是简单的设计。当你被迫把东西做得很简单时，你就被迫直接面对真正的问题。当你不能用表面的装饰交差时，你就不得不做好真正的本质部分。</p><p>理解：其实人们更喜欢简洁的设计模式，前提是去掉一切装饰后的本质真的很美。</p><p>原文：好设计是永不过时的设计。</p><p>理解：优雅永不过时。</p><p>原文：好设计常常是大胆的设计</p><h1 id="3-思考：不能说的话"><a href="#3-思考：不能说的话" class="headerlink" title="3. 思考：不能说的话"></a>3. 思考：不能说的话</h1><p>原文：要是能坐上时间机器回到过去，不管哪一个年代，有一件事都是不会改变的，那就是“祸从口出”。你一定要小心自己说的话。</p><p>理解：祸从口出</p><p>原文：不要随大流，凡是不认同社会之处，你连想都不敢想，马上就放弃自己的观点，那才会真正出问题。</p><p>理解：群体的意见一致，但智商底下。我们是群体的一份子，但要学会从群体中抽离出来称为能独立思考的个体，见&lt;&lt;乌合之众&gt;&gt;。</p><h2 id="3-1-什么是不能说的话"><a href="#3-1-什么是不能说的话" class="headerlink" title="3.1 什么是不能说的话"></a>3.1 什么是不能说的话</h2><p>原文：判断言论真伪。未来的人们很可能会发现，他们觉得很平常的话，在我们今天这个时代都是不能说的。现在有没有伽利略这样的人和事？很可能是有的。</p><p>理解：</p><p>原文：找出标签，然后列出相关想法，逐个追问。研究人员记录了医生检查X光片时的眼球运动。研究发现，即使那些医生漏掉了一个癌症病灶，他们的目光通常也会在那个地方停留一会。这说明他们的头脑深处已经意识到那里有问题，但是这种深层的反应没有上升为自觉的意识。</p><p>理解：经常性的会感觉到可能存在某些问题，但常常因为思考的懒惰不去想，这些我们隐隐觉得有问题的通常就有问题。</p><p>原文：回顾过去。请问过去的看法与现在的看法哪一个更正确？很多时候你无法回答，<strong>因为过去与现在之间的变化往往不是因为对错，而是因为社会观念变了。如果某个观点在大部分时空都是不受禁止的，只有我们这个社会才把它当作禁忌，那么很可能是我们出错了。</strong></p><p>理解：</p><p>原文：<strong>寻找那些一本正经的卫道者，看看他们到底在捍卫着什么，不想让你看见什么。</strong>孩子“被迫”在一个精心设计的环境中长大。他的头脑或多或少是纯洁无瑕的，一点也不知道那些“不能说的话”，从来没有被真实的社会生活“污染”过。孩子眼里的世界是不真实的，是一个被灌输进他们头脑的假想世界。将来当孩子长大以后接触社会，就会发现小时候以为真实的事情，在现实世界中是荒唐可笑的。</p><p>理解：小时候父母说什么就是什么，我们觉得什么都是正确的，现在我们知道父母的很多观点都是错的甚至是荒谬的。主流舆论控制下我们生活在信息茧房内，谁能保证自己看到了真实的世界，只有通过自己的思考能更贴近一些。</p><p>原文：<strong>去观察禁忌是如何产生的。</strong>不管实际上是否有思想斗争，斗争总是会以思想斗争的形式表现出来，思想斗争更容易争取支持者。第一批的接受者总是带有很强的抱负心，他们有自觉的精英意识，想把自己与普通人区分开来。当流行趋势确立以后，第二批接受者就加入进来了，人数比上一批庞大得多，恐惧心在背后驱使着他们。他们接受流行，不是因为想要与众不同，而是因为害怕与众不同。</p><p>理解：融入群体的个体智商低下，通常会很容易接受自己作为个体不能接受的行为或思想。见乌合之众。</p><h2 id="3-2-为什么找出不能说的话"><a href="#3-2-为什么找出不能说的话" class="headerlink" title="3.2 为什么找出不能说的话"></a>3.2 为什么找出不能说的话</h2><p>原文：纯粹的好奇心，对任何被禁止的东西都有特别强烈的好奇心。<strong>我要亲眼看一下，然后自己做决定。</strong></p><p>理解：我要有自己的思想，而不是被动灌输的思想。</p><p>原文：这是很好的脑力训练，尤其是那些似乎不应该思考的问题，你的大脑也要养成思考它们的习惯。<strong>训练自己去想那些不能想的事情，你获得的好处会超过所得到的想法本身。</strong>如果你能“远远地”跳出传统思维，提出让别人一听就脑袋轰一声炸开的惊人观点，那么你就在“小小地”跳出传统思维方面不会有任何困难。要知道，人们把后面的这种情况称为“创新”。</p><p>理解：不知道从什么时候起懒的思考，长久下来思维变得迟钝，养成思考的习惯，即便是错的。</p><p>原文：优秀作品往往来自于其他人忽视的想法，而最被忽视的想法就是那些被禁止的思想观点。做一个异端是有回报的，不仅是在科学领域，在任何有竞争的地方，只要你能看到别人看不到或不敢看的东西，你就有很大的优势。</p><p>理解：勇敢思考，敢为别人不敢为。</p><h2 id="3-3-发现了“不能说的话”但别说"><a href="#3-3-发现了“不能说的话”但别说" class="headerlink" title="3.3 发现了“不能说的话”但别说"></a>3.3 发现了“不能说的话”但别说</h2><p>至少也要挑选合适的场合再说，只打那些值得打的仗。</p><p>原文：这时你要明白，<strong>自由思考比畅所欲言更重要。好的方法是在思想和言论之间划一条明确的界线。在心里无所不想，但是不一定要说出来。鼓励自己在心里默默思考那些最无法无天的想法。</strong></p><p>理解：自由思考比畅所欲言更重要！</p><p>原文：“守口如瓶”的真正缺点在于，你从此无法享受讨论带来的好处了。<strong>你最好找一些信得过的知己，只与他们畅所欲言、无所不谈。这样不仅可以获得新观点，还可以用来选择朋友。能够一起谈论“异端邪说”并且不会因此气急败坏的人，就是你最应该认识的朋友。</strong></p><p>理解：切忌交浅言深，有这样的朋友是幸事。</p><h2 id="3-4-如果一定要做出回答"><a href="#3-4-如果一定要做出回答" class="headerlink" title="3.4 如果一定要做出回答"></a>3.4 如果一定要做出回答</h2><p>原文：<strong>我还没想好。人们喜欢讨论的许多问题实际上都是很复杂的，马上说出你的想法对你并没有什么好处。</strong></p><p>理解：冲动是魔鬼。</p><p>原文：逐步把辩论提升到一个抽象的层次。你不要直接攻击某个标签，而要攻击它的“元标签”（meta-label）。所谓“元标签”，就是对某个标签的抽象描述。如果人们开始讨论元标签，那么原来的标签反而不会受到注意了。</p><p>原文：另一种反击的方法就是使用隐喻<br>理解：讽刺现实</p><p>最好的一种可能就是幽默。</p><h2 id="3-5-永远质疑"><a href="#3-5-永远质疑" class="headerlink" title="3.5 永远质疑"></a>3.5 永远质疑</h2><p>如果你想要清晰地思考，就必须远离人群。但是走得越远，你的处境就会越困难，受到的阻力也会越大，因为你没有迎合社会习俗，而是一步步地与它背道而驰。</p><p>原文：远离人群。你不要让自己成为人群的一分子，而要尽可能地远离人群，观察正在发生的事情，特别注意那些被压制的思想观点。</p><p>理解：群体的观点总是一致，群体观点的内容和他们接收的暗示有关。想要摆脱群体间思想的传染，最好的方式是远离群体独立思考。</p><p>原文：远离自己。客观的观察自己，通过类似的机制，一个人完全可以识别和抵制外界流行的道德观念，把它们与内心世界相分离。</p><p>理解：将自己的思想暂时从这个身体中抽离出来，能从客观的角度观察事物。</p><h1 id="4-良好的坏习惯"><a href="#4-良好的坏习惯" class="headerlink" title="4. 良好的坏习惯"></a>4. 良好的坏习惯</h1><p><strong>对于适当的不服从管教，保持宽容不会有太大的坏处</strong>，反而很有利于美国的国家优势，它使得美国不仅能吸引聪明人，还能吸引那些很自负的人。</p><p>一个人们拥有言论自由和行动自由的社会，往往最有可能采纳最优方案，而不是采纳最有权势的人提出的方案。</p><h1 id="5-创造财富"><a href="#5-创造财富" class="headerlink" title="5. 创造财富"></a>5. 创造财富</h1><ul><li>如果想致富，最好的办法就是自己创业，或者加入创业公司。</li><li><strong>创业公司将你所有的压力压缩到三四年。承受较大的压力通常会为你带来额外的报酬，但是你还是无法逃避基本的守恒定律。如果创业那么轻松，那么所有人就都去创业了。</strong></li><li><p>任何公司的成功历程中，运气都是一个很大的随机因素。</p></li><li><p>财富与金钱并不是同义词。金钱是交换财富的媒介，模糊了交易的实质。</p></li><li><p>许多人从小就认定世界上的财富总额是固定不变的。然而<strong>财富并不是零和博弈</strong>。通过修理一辆老爷车，你使得自己更富有。与此同时，你也并没有使得任何人更贫穷。所以，这里明显不是一个面积不变的大饼。事实上，当这样观察的时候，你会很好奇，为什么有人会觉得大饼的面积无法增大</p></li><li><p>大公司会使得每个员工的贡献平均化，大公司无法准确测量每个员工的贡献。要致富，你需要两样东西：可测量性和可放大性。任何一个通过自身努力而致富的个人，在他们身上应该都能同时发现可测量性和可放大性。</p><ul><li><p>是否存在可放大性，那就是看失败的可能性。因为收入和风险是对称的，所以如果有巨大的获利可能，就必然存在巨大的失败可能。</p></li><li><p><strong>小团体=可测量性</strong><br>对精英团体来说，将自己的工作与其他高手的工作平均化要比与平庸之辈的工作平均化让人满意多了。<br>乔布斯曾经说过，创业的成败取决于最早加入公司的那十个人。（尽可能加入核心团队）<br>但是，一个非常能干而且在乎回报的人，通常在同类人组成的小团队中会有更出色的表现，自己也会感到更满意。</p></li><li><p><strong>高科技=可放大性</strong><br>因为创业公司通过发明新技术盈利，所以具备可放大性。<br><strong>创业公司本质其中之一就是其他人复制你的模式是否很困难。也就是说，你为竞争对手设置的壁垒有多高。</strong><br><strong>一开始就选择较难的问题，此后的各种决策都选择较难的那个选项。（比如算法和开发，应该选算法。基架还是业务，应该选基架。为自己搭建技术壁垒，能保证核心竞争力）</strong>（总的来说这也是很好的处事原则。如果你有两个选择，就选较难的那个。如果你要选择是坐在家里看电视,还是外出跑步，那就出去跑步吧。这个方法有效的原因可能是遇到两个一难一易的选择时，往往出于懒惰的缘故，你会选择较易的那个选项。在意识深处，你其实知道不懒惰的做法会带来更好的结果,这个方法只是迫使你接受这一点）</p></li></ul></li><li><p>只有在快速获得巨大利益的激励下，你才会去挑战那些困难的问题，否则你根本不愿意去碰它们。</p></li><li><p>潜在的买家会尽可能地拖延收购。收购这件事最难的地方就是让买方真正拿出钱。大多数时候，<strong>促成买方掏钱的最好办法不是让买家看到有获利的可能，而是让他们感到失去机会的恐惧。</strong>他们真正在意的只是你拥有的用户数量。</p></li><li><p>创业公司如同蚊子，往往只有两种结局，要么赢得一切，要么彻底消失。<strong>大公司宁愿花大钱做更安全的选择，所以向他们出售一家已经成功的创业公司要比出售还处在早期阶段的创业公司更容易，即使会让他们付出多得多的价码</strong>。</p></li></ul><h1 id="6-互联网模式"><a href="#6-互联网模式" class="headerlink" title="6. 互联网模式"></a>6. 互联网模式</h1><ul><li><p>互联网软件修改起来很方便。<strong>软件的发布过程可以分解为一系列的渐进式修改</strong>，而不是猛地推出一个大幅变动的版本。</p></li><li><p>互联网软件的发布规则是：它运行不了，你就无法发布；一旦它能运行了，你就可以立刻发布。你的软件是连续性渐变的，某些更新也许比较重大，但是“版本”这个概念不适用于互联网软件。</p></li><li><p>解决新代码的bug要比解决历史遗留代码的bug容易。在自己刚刚写好的代码中，找出bug往往会比较快。</p></li><li><p>能够即时发布软件，对开发者是一个巨大的激励。如果软件的新版本要等到一年后才能发布，我就会把大部分新构思束之高阁，至少过上一段时间再来考虑<strong>。互联网软件只要想到好的构思，可以立刻着手实现。</strong></p></li><li><p><strong>向一个项目增加人手，往往会拖慢项目进程。</strong>随着参与人数的增加，人与人之间需要的沟通呈现指数式增长。人数越来越多，开会讨论各个部分如何协同工作所需的时间越来越长，无法预见的互相影响越多越大，产生的bug也越来越多。<br>理解：所以互联网公司经常加班工资高而不是降低工资释放员工时间招收更多人是有道理的，因为单纯的人力并不会使项目开发进度加快，人数的增加也意味着沟通成本的增加</p></li><li><p>效率对互联网软件至关重要，因为硬件费用由你支付。推广Viaweb的关键，就是允许访问者在线试用.(可以借此研究用户行为得到反馈)</p></li><li><p>“订报纸模式”正是互联网软件天然的收费模式。互联网软件和传统桌面软件盈利不同之处在于，互联网软件本身不需要被用来安装所以使用会员制收费，但传统桌面程序需要安装可以使用安装激活的策略</p></li><li><p>非IT公司的内部系统管理员没有行业竞争压力，日久天长就会变得工作效率低下、不负责任。不能直接感受到竞争压力的部门都应该外包出去。</p></li><li><p>互联网软件永远没有收工的那一天，如果你愿意，可以一直干下去，每天忙上16个小时。</p></li><li><p>尝试创业</p><ul><li><p>两件令人害怕的事情</p><p>实际上，这两件事都是没有通电的电篱笆。</p><ul><li><p>不懂得管理企业</p><ul><li><p>做出用户喜欢的产品<br>至于如何做出用户喜欢的产品，下面是一些通用规则。从制造简洁的产品开始着手，首先要保证你自己愿意使用。然后，迅速地做出1.0版，并且不断加以改进，整个过程中密切倾听用户的反馈。用户总是对的，但是不同的用户要求不一样。低端的用户要求简化操作和清晰易懂，高端的用户要求你增加新功能。软件最大的好处就是让一切变得简单。但是，做到这一点的方法是正确设置默认值，而不是限制用户的选择。如果竞争对手的产品很糟糕，你也不要自鸣得意。比较软件的标准应该是看对手的软件将来会有什么功能，而不是现在有什么功能。无论何时，你都要使用自己的软件。Viaweb的主要功能是建立网上商店，但是我们也使用它建立自己的网站。不要只因为对方的头衔是市场专家、设计师或产品经理，就盲目听从他们的话。如果他们的观点真的很好，那就听从他们，关键是你要自己判断，不要盲从。只有自己懂得设计的黑客，才能设计软件，不能交给对软件一知半解的设计师。如果你不打算自己动手设计和开发，那就不要创业。</p></li><li><p>保证开支小于收入。</p></li></ul></li><li><p>害怕竞争<br>可是实际上，他们害怕你胜过你害怕他们，而且这一点上，他们并没有错。几个黑客搞懂如何租用办公室，或者如何雇用销售人员，要比那些公司（不管大公司还是小公司）搞懂如何正确写出软件容易得多</p></li></ul></li></ul></li></ul>]]></content>
    
    
    <summary type="html">适合所有程序员和互联网创业者，也适合一切对计算机行业感兴趣的读者。</summary>
    
    
    
    <category term="读书分享" scheme="http://lishuaiyun.cn/categories/%E8%AF%BB%E4%B9%A6%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="计算机随想" scheme="http://lishuaiyun.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>单例模式</title>
    <link href="http://lishuaiyun.cn/2021/09/28/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>http://lishuaiyun.cn/2021/09/28/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-09-28T07:05:27.000Z</published>
    <updated>2022-03-26T13:14:51.391Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-目的"><a href="#1-目的" class="headerlink" title="1. 目的"></a>1. 目的</h2><p><strong>单例模式</strong>是一种创建型设计模式， 让你能够保证一个类只有一个实例， 并提供一个访问该实例的全局节点。</p><h2 id="2-问题"><a href="#2-问题" class="headerlink" title="2. 问题"></a>2. 问题</h2><p>单例模式同时解决了两个问题， 所以违反了单一职责原则：</p><ol><li><strong>保证一个类只有一个实例</strong>。 为什么会有人想要控制一个类所拥有的实例数量？ 最常见的原因是控制某些共享资源 （例如数据库或文件） 的访问权限。</li></ol><p>它的运作方式是这样的： 如果你创建了一个对象， 同时过一会儿后你决定再创建一个新对象， 此时你会获得之前已创建的对象， 而不是一个新对象。</p><p>注意， 普通构造函数无法实现上述行为， 因为构造函数的设计决定了它<strong>必须</strong>总是返回一个新对象。</p><p><img src="E:\有道云笔记存储\qq7FB9F72DBAEA505AA864E222F1AC8714(1" alt="img">\41ebffe12b584bf3b2a46a22f697ea80\n-comic-1-zh.png)</p><p>客户端甚至可能没有意识到它们一直都在使用同一个对象。</p><ol><li><p><strong>为该实例提供一个全局访问节点</strong>。 </p></li><li><ol><li>还记得你 （好吧， 其实是我自己） 用过的那些存储重要对象的全局变量吗？ 它们在使用上十分方便， 但同时也非常不安全， 因为任何代码都有可能覆盖掉那些变量的内容， 从而引发程序崩溃。</li><li>和全局变量一样， 单例模式也允许在程序的任何地方访问特定对象。 但是它可以保护该实例不被其他代码覆盖。</li><li>还有一点： 你不会希望解决同一个问题的代码分散在程序各处的。 因此更好的方式是将其放在同一个类中， 特别是当其他代码已经依赖这个类时更应该如此。</li></ol></li></ol><p>如今， 单例模式已经变得非常流行， 以至于人们会将只解决上文描述中任意一个问题的东西称为单例。</p><h2 id="3-解决方案"><a href="#3-解决方案" class="headerlink" title="3. 解决方案"></a>3. 解决方案</h2><p>所有单例的实现都包含以下两个相同的步骤：</p><ul><li>将默认构造函数设为私有， 防止其他对象使用单例类的 new运算符。</li><li>新建一个静态构建方法作为构造函数。 该函数会 “偷偷” 调用私有构造函数来创建对象， 并将其保存在一个静态成员变量中。 此后所有对于该函数的调用都将返回这一缓存对象。</li></ul><p>如果你的代码能够访问单例类， 那它就能调用单例类的静态方法。 无论何时调用该方法， 它总是会返回相同的对象。</p><p><img src="E:\有道云笔记存储\qq7FB9F72DBAEA505AA864E222F1AC8714(1" alt="img">\0ad778ab5822464fbd1a197c926b25cc\clipboard.png)</p><h2 id="4-代码"><a href="#4-代码" class="headerlink" title="4. 代码"></a>4. 代码</h2><p>单例的实现方法有很多，最常用的实现是双重校验和静态内部类。</p><p>双重校验</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> Singleton instance;   <span class="comment">//volatile保证线程间的可见性</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供一个静态的公有方法，加入双重检查代码，解决线程安全问题，同时解决懒加载问题</span></span><br><span class="line">    <span class="comment">//同时保证了效率，推荐使用</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (Singleton.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    instance = <span class="keyword">new</span> Singleton();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>静态内部类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//写一个静态内部类，该类中有一个静态属性Singleton</span></span><br><span class="line">    <span class="comment">//在调用getInstance()方法时，静态内部类才会被装载，保证了懒加载;同时类加载是线程安全的</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonInstance</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton INSTANCE = <span class="keyword">new</span> Singleton();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供一个静态的公有方法，直接返回SingletonInstance.INSTANCE</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> SingletonInstance.INSTANCE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-应用场景"><a href="#5-应用场景" class="headerlink" title="5. 应用场景"></a>5. 应用场景</h2><p><strong>如果程序中的某个类对于所有客户端只有一个可用的实例， 可以使用单例模式。</strong></p><p>单例模式禁止通过除特殊构建方法以外的任何方式来创建自身类的对象。 该方法可以创建一个新对象， 但如果该对象已经被创建， 则返回已有的对象。</p><p><strong>如果你需要更加严格地控制全局变量， 可以使用单例模式。</strong></p><p>单例模式与全局变量不同， 它保证类只存在一个实例。 除了单例类自己以外， 无法通过任何方式替换缓存的实例。</p><p>请注意， 你可以随时调整限制并设定生成单例实例的数量， 只需修改 获取实例方法， 即 getInstance 中的代码即可实现。</p>]]></content>
    
    
    <summary type="html">单例模式是一种创建型设计模式， 让你能够保证一个类只有一个实例， 并提供一个访问该实例的全局节点。</summary>
    
    
    
    <category term="设计模式" scheme="http://lishuaiyun.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="设计模式" scheme="http://lishuaiyun.cn/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>非暴力沟通</title>
    <link href="http://lishuaiyun.cn/2021/06/13/%E9%9D%9E%E6%9A%B4%E5%8A%9B%E6%B2%9F%E9%80%9A/"/>
    <id>http://lishuaiyun.cn/2021/06/13/%E9%9D%9E%E6%9A%B4%E5%8A%9B%E6%B2%9F%E9%80%9A/</id>
    <published>2021-06-13T09:21:09.000Z</published>
    <updated>2022-05-08T15:10:34.601Z</updated>
    
    <content type="html"><![CDATA[<p>读完了，待整理…</p>]]></content>
    
    
    <summary type="html">观察、感受、需要和请求</summary>
    
    
    
    <category term="读书分享" scheme="http://lishuaiyun.cn/categories/%E8%AF%BB%E4%B9%A6%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="心理学" scheme="http://lishuaiyun.cn/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>安河桥间奏</title>
    <link href="http://lishuaiyun.cn/2021/04/30/%E5%AE%89%E6%B2%B3%E6%A1%A5%E9%97%B4%E5%A5%8F/"/>
    <id>http://lishuaiyun.cn/2021/04/30/%E5%AE%89%E6%B2%B3%E6%A1%A5%E9%97%B4%E5%A5%8F/</id>
    <published>2021-04-30T10:21:14.000Z</published>
    <updated>2022-03-26T12:12:41.303Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;一直都挺喜欢听歌的，萌生学吉他的念头大概是寒假闲来无事刷视频，梁博的《黑夜中》尾奏，《给我一点温度》尾奏着实把我迷到了，上午有个这个念头以后就再也抑制不住，下午就买了吉他，现在练习了两个月之后差不多比较完整的还原了指弹《安河桥》间奏，还是挺开心的，放上链接：</p><p><a href="https://www.bilibili.com/video/BV1jK4y1Z7dq/">学习吉他两个月后我弹出了安河桥间奏_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</a></p><p>&emsp;&emsp;没找到安河桥好看的封面，拿博哥当封面🤭</p><p>&emsp;&emsp;下一首不学指弹，准备弹唱万青的《杀死那个石家庄人》。</p>]]></content>
    
    
    <summary type="html">练习两个月吉他弹出的安河桥间奏</summary>
    
    
    
    <category term="生活" scheme="http://lishuaiyun.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="吉他" scheme="http://lishuaiyun.cn/tags/%E5%90%89%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>杀死一只知更鸟</title>
    <link href="http://lishuaiyun.cn/2021/04/23/%E6%9D%80%E6%AD%BB%E4%B8%80%E5%8F%AA%E7%9F%A5%E6%9B%B4%E9%B8%9F/"/>
    <id>http://lishuaiyun.cn/2021/04/23/%E6%9D%80%E6%AD%BB%E4%B8%80%E5%8F%AA%E7%9F%A5%E6%9B%B4%E9%B8%9F/</id>
    <published>2021-04-23T14:59:40.000Z</published>
    <updated>2022-03-26T13:15:49.622Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;《杀死一只知更鸟》前半部分很枯燥，基本都是在交代故事背景，埋下伏笔，甚至我是硬着头皮看下去的，当小说进行到后半部分高潮迭起，并与前文的伏笔一一呼应，才让我明白了这的确是一本不可多得的好书。</p><p>&emsp;&emsp;故事发生在上个世纪三十年代初，虽然美国已经废除了奴隶制，但对黑人的歧视仍根植于每个白人的血液里，但是阿迪克斯顶着社会舆论的压力要为黑人汤姆辩护，因为汤姆被人指责强奸，但他是无辜的，尽管没有白人愿意相信，各种流言蜚语冲击着阿迪克斯的家庭，但他仍然坚定自己的信念，他是个完美的父亲，教导孩子保持善良，坚守勇敢，反对暴力。</p><p>他始终不愿意满足杰姆持枪的愿望，后来杰姆知道自己的父亲是小镇第一神枪手，但他却从来不主张用枪。</p><p>他教导杰姆什么是勇敢：<strong>不要错误地认为一个人手握枪支就是勇敢。勇敢就是，在你还没开始的时候就知道自己注定会输，但依然义无反顾地去做，并且不管发生什么都坚持到底。一个人很少能赢，但有时也会。</strong></p><p>他在法庭上义正言辞的为黑人辩护：<strong>我不是一个理想主义者，我并不坚信我们的法庭和我们的陪审制度完美无缺、公正无私——它们对我来说，不是理想，而是活生生的工作状态。先生们，法庭不会比坐在我面前的任何一位陪审团成员更公正。法庭只能和它的陪审团一样完善，而陪审团只能和它的每一位成员一样完善。我对诸位先生充满信心，相信你们会用理性的眼光重新审查你们听到的证词，做出一个裁决，让被告和家人团聚。以上帝的名义，尽你们的职责吧。</strong></p><p>可惜，最终阿迪克斯的演讲没有战胜偏见，法庭上的众多白人在无可辩驳的事实前仍然选择了处死黑人汤姆。</p><p>是的，阿迪克斯知道自己很难战胜人们心中的偏见，但他仍然坚定地为黑人辩护，他用实际行动践行了自己对勇敢的定义，<strong>你还没开始的时候就知道自己注定会输，但依然义无反顾地去做，并且不管发生什么都坚持到底。</strong></p><p>故事的另一条线是怪人拉德利，小镇上的人从不让孩子靠近拉德利家，人们认为他是恶魔，小镇上的很多邪恶勾当都和拉德利脱不开关系，流言蜚语迫使拉德利不愿出门。</p><p>但所有人都误会了他，他通过树洞送给孩子们礼物，帮杰姆把裤子缝好放在篱笆旁，当斯科特和杰姆有生命危险时，他挺身而出。书中结尾，斯科特被救后第一次见到拉德利的时的问候：</p><p><strong>“你好，怪人”</strong></p><p>面对未知的事物，自己不了解的人，不应该有先入为主的判断，耳听为虚，眼见为实，偏见是最没有礼貌的事。</p><p><strong>你永远也不可能真正了解一个人，除非你穿上他的鞋子走来走去，站在他的角度考虑问题。</strong></p><p>还有一些精彩的句子：</p><p>除了恐惧本身，没有什么可恐惧的。</p><p>你为什么这么做？”杰姆轻声轻气地说：“她说你替黑鬼和人渣打官司。”</p><p>“他们当然有权利那样想，他们的看法也有权得到充分的尊重，”阿迪克斯说，“但是，我在接受他人之前，首先要接受自己。有一种东西不能遵循从众原则，那就是人的良心。”</p><p>杰姆平静地回了一句：“我妹妹不邋遢，我也不怕你。”</p><p>“一个人没必要把自己懂的东西都展现出来。这不是淑女的做派——再说了，人们不喜欢他们身边有什么人比他们懂得多。这会让他们气不打一处来。你使用的语言再标准，也改变不了他们。除非他们自己想学，否则一点儿办法也没有。你要么闭上嘴巴，要么跟他们说一样的话。”</p><p>阿迪克斯说过，与人交谈的礼貌做法是谈论对方感兴趣的事情，而不是大谈特谈自己的兴趣点。</p><p>我不是一个理想主义者，我并不坚信我们的法庭和我们的陪审制度完美无缺、公正无私——它们对我来说，不是理想，而是活生生的工作状态。先生们，法庭不会比坐在我面前的任何一位陪审团成员更公正。法庭只能和它的陪审团一样完善，而陪审团只能和它的每一位成员一样完善。我对诸位先生充满信心，相信你们会用理性的眼光重新审查你们听到的证词，做出一个裁决，让被告和家人团聚。以上帝的名义，尽你们的职责吧。</p><p>在我们生活的这个世界上，总有什么东西让人丧失理智——即使他们努力想做到公平，结果还是事与愿违。在我们的法庭上，当对立双方是一个白人和一个黑人的时候，白人总是胜诉。这些事情很丑恶，可现实生活就是如此。”</p>]]></content>
    
    
    <summary type="html">一个人很少能赢，但有时也会。</summary>
    
    
    
    <category term="读书分享" scheme="http://lishuaiyun.cn/categories/%E8%AF%BB%E4%B9%A6%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="小说" scheme="http://lishuaiyun.cn/tags/%E5%B0%8F%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>君主论</title>
    <link href="http://lishuaiyun.cn/2021/04/21/%E5%90%9B%E4%B8%BB%E8%AE%BA/"/>
    <id>http://lishuaiyun.cn/2021/04/21/%E5%90%9B%E4%B8%BB%E8%AE%BA/</id>
    <published>2021-04-21T11:40:21.000Z</published>
    <updated>2021-04-30T10:18:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;《君主论》统共26章，每章短则2页，长则5~6页，全书不过是个120多页的小册子，但却始终在输出硬核内容，但《君主论》也有它的局限性，一是作者马基雅维里自己并不是君主，只是从一个臣子的角度出发来描述他对成为一个合格的君主的理解。二是该书写于16世纪，受时代局限性的影响，书中的很多道理放到现代已经不再适用，但瑕不掩瑜，《君主论》仍不失为一本很好的思想读物，它是一本超现实主义的书，并且阐明作为君主并不应该排除使用一些污龊邪恶的手段，因为这些手段可能是不光彩的，但可能反而是种善良。</p><p>&emsp;&emsp;结合《君主论》的内容来看，现代很多事情都得到了合理的解释。比如书中提到了征服国家的方式，文化征服如日本侵略中国让中国学习日语，英国将英语设为印度官方语言。再比如派遣殖民到殖民地，历史上霍去病击败匈奴进行了移民完成了吞并。三是一个强大的国家必须设法成为周围地区的首领，不让同样强大的国家插手自己周围地区的事务，中国的抗美援朝显然是个典型的例子。最后马基雅维里还总结了国家的强大不是绝对量，而是相对量，对于威胁到统治安全的势力，绝对不能心慈手软，一定要心狠手辣，斩草除根（这可能也是美国要遏制中国强大的原因）。</p><p>&emsp;&emsp;在谈论如何征服国家之后，作者接着又探讨了获取君主国的方式，如果一个人靠自己的能力创建了国家，那么创建的过程是艰辛的，而保持是容易的。与之相反，如果是依靠别人的武力或者仅仅是靠幸运登上王位的，我们没有任何理由相信有人生而知之，懂得怎样治理国家，除非他们真的具有卓越的才能。如果一个人以邪恶手段获得君权，那么应该慎重的决定采取邪恶的手段是否是有必要的，如果是有必要的，那么应该毕其功于一役，一次将坏事做尽，而后恩惠应该一点点的赐予。（这可能就是长痛不如短痛，但一点点不断的恩惠却能让人记住你的好）。</p><p>&emsp;&emsp;关于军事方面，君主不在逼不得已的情况下绝不应该借助援军或者雇佣军，这其实是显而易见的道理，因为仅仅是同盟或者金钱利益维系的关系的脆弱的，贤明的君主必须要拥有自己的军队，作者甚至认为君主不应该关心其他，而应该仅仅关注战争，军事，居安思危，即使在和平时期也应该永远不让自己的思想离开军事。将治理国家交给合适的人去做。如果是作为独裁的君主，我认为这种说法并无不妥。</p><p>&emsp;&emsp;关于君主的品格，君主应该接受吝啬的标签，一味的慷慨会使自己的财富丢失，或者由慷慨转为吝啬会使人新胜怨恨，但君主可以慷他人之慨，因为这既不是自己的财富也收买了人心（比如纵兵劫掠）。君主应该被人畏惧也被人爱戴，但一定要作出取舍，那么被人畏惧胜过被人爱戴，因为人性是恶劣的，人们冒犯一个自己爱戴的人比冒犯一个自己畏惧的人有更少的顾忌。（被人畏惧但不能招致仇恨）</p><p>&emsp;&emsp;一位君主必须依靠自己的行动去赢得伟大人物与才智非凡的声誉。如果他公开表示自己毫无保留地赞助某方而反对另一方的话，这位君主也会受到尊重。这种方法总是比保持中立更有用处。因为如果你的两个强大的邻国相打起来的话，情况必定是这样：它们当中一国战胜的时候，你必须害怕这个战胜国，或者你不用害怕它。在这两种情况之中，无论将来出现哪一种情况，你公开表态并且勇猛地参战总是有好处的。因为，如果在前一种情况之下，你不公开表态，你将来总要成为胜利者的战利品，而使那个战败者因而感到高兴和满意，而且你还提不出任何理由和任何事情为你辩护，或者使人庇护你，因为胜利者不需要在处于逆境时不援助自己的可疑的朋友；那个失败者也不会庇护你，因为你过去不愿拿起武器同他共命运。（但不能为了进攻别的国家而和比自己强大的国家结盟）。</p><p>&emsp;&emsp;君主论的作者马基雅维里是真小人，他毫不掩饰君主应该杀伐果断，并且为了利益可以适当的做一些不光明的手段，这其实是很合理的事情，并且读完也让我明晰各国发生的事情都有背后的原因，获益良多。</p><p>&emsp;&emsp;话说君主论之前上学期我还读了非暴力沟通，怎样阅读一本书，小王子，黑客与画家，看看有无时间也整理一下笔记吧。下一本书准备读《乌合之众》。</p>]]></content>
    
    
    <summary type="html">一本现实主义的政治学读物</summary>
    
    
    
    <category term="读书分享" scheme="http://lishuaiyun.cn/categories/%E8%AF%BB%E4%B9%A6%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="君主论" scheme="http://lishuaiyun.cn/tags/%E5%90%9B%E4%B8%BB%E8%AE%BA/"/>
    
    <category term="政治学" scheme="http://lishuaiyun.cn/tags/%E6%94%BF%E6%B2%BB%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>内部类引用局部变量的若干问题</title>
    <link href="http://lishuaiyun.cn/2021/04/11/%E5%86%85%E9%83%A8%E7%B1%BB%E5%BC%95%E7%94%A8%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/"/>
    <id>http://lishuaiyun.cn/2021/04/11/%E5%86%85%E9%83%A8%E7%B1%BB%E5%BC%95%E7%94%A8%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/</id>
    <published>2021-04-11T10:23:43.000Z</published>
    <updated>2022-03-26T13:15:25.561Z</updated>
    
    <content type="html"><![CDATA[<p>最近在学习NIO的时候看到一个demo如下(删减了部分无用代码)：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">//遍历目录文件</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">       <span class="comment">//方式1不可用,没有初始化</span></span><br><span class="line">       <span class="keyword">int</span> count1;</span><br><span class="line">       <span class="comment">//方式2不可用，不满足需要修改的诉求</span></span><br><span class="line">       <span class="keyword">int</span> count2 = <span class="number">0</span>;</span><br><span class="line">       <span class="comment">//方式3不可用，不满足需要修改诉求</span></span><br><span class="line">       Integer count3 = <span class="number">0</span>;</span><br><span class="line">       <span class="comment">//方式4可用</span></span><br><span class="line">       AtomicInteger count3 = <span class="keyword">new</span> AtomicInteger();</span><br><span class="line">       </span><br><span class="line">       Files.walkFileTree(Paths.get(<span class="string">&quot;E:\\Java\\jdk1.8&quot;</span>), <span class="keyword">new</span> SimpleFileVisitor&lt;Path&gt;()&#123;</span><br><span class="line"></span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="function"><span class="keyword">public</span> FileVisitResult <span class="title">preVisitDirectory</span><span class="params">(Path dir, BasicFileAttributes attrs)</span> <span class="keyword">throws</span> IOException </span>&#123;<span class="comment">//进入文件之前访问文件夹</span></span><br><span class="line">               System.out.println(<span class="string">&quot;====&gt;&quot;</span>+dir);</span><br><span class="line">               count3.incrementAndGet();</span><br><span class="line">               <span class="keyword">return</span> <span class="keyword">super</span>.preVisitDirectory(dir, attrs);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>发现了如下问题：</p><ul><li>需要修改局部变量则不能使用int和Integer修饰变量</li><li>局部变量必须使用final修饰</li><li>局部变量必须初始化</li></ul><h1 id="1-必须对局部变量进行初始化"><a href="#1-必须对局部变量进行初始化" class="headerlink" title="1. 必须对局部变量进行初始化"></a>1. 必须对局部变量进行初始化</h1><p>JVM会对全局变量初始化，基本类型数据为0，对象引用为null。</p><p>但Java规定局部变量必须进行初始化，因为开发者认为未初始化的局部变量更有可能是程序员疏忽，采用默认值反而会掩盖这种错误。（Thinking in Java）<br>所以方式1不可行。</p><h1 id="2-为什么不能直接使用int修饰变量"><a href="#2-为什么不能直接使用int修饰变量" class="headerlink" title="2. 为什么不能直接使用int修饰变量"></a>2. 为什么不能直接使用int修饰变量</h1><p>即使对局部变量初始化，使用int也是不可行的。</p><p>局部内部类，如果希望访问所在方法得局部变量，那么这个局部变量必须是final的。</p><p>原因：</p><ul><li>new出来的对象在堆内存中。</li><li>局部变量跟随方法，在栈内存中。</li><li>方法运行结束之后，立刻出栈，局部变量就会立刻消失。</li><li>但是new出来的对象在堆中持续存在，直到垃圾回收消失。此时所访问的局部变量是复制得来的，这就要求所复制的局部变量必须是不变常量。</li></ul><p>所以方式2使用count的方式是不可行的。如果使用final修饰则在内部类中是可以访问的。（JDK1.8不必再使用final修饰，后面会说明）</p><h1 id="3-JDK1-8之后不必再显式使用final修饰"><a href="#3-JDK1-8之后不必再显式使用final修饰" class="headerlink" title="3. JDK1.8之后不必再显式使用final修饰"></a>3. JDK1.8之后不必再显式使用final修饰</h1><p>JDK1.8之后内部类访问局部变量<strong>编译时</strong>会隐式的为使用到的局部变量添加final修饰。在JDK1.8中使用方式2是可以在匿名内部类中访问局部变量的，但<strong>无法修改</strong>。</p><h1 id="4-为什么使用AtomicInteger"><a href="#4-为什么使用AtomicInteger" class="headerlink" title="4. 为什么使用AtomicInteger"></a>4. 为什么使用AtomicInteger</h1><p>被final修饰的变量：</p><ul><li>对于基本类型，final 使数值不变；</li><li>对于引用类型，final 使引用不变，也就不能引用其它对象，但是被引用的对象本身是可以修改的。</li></ul><p>因为在内部类中有访问并<strong>修改</strong>局部变量的请求，在隐式为局部变量添加final后：</p><ul><li>如果局部变量是基本数据类型，则保存的数值无法再改变。不满足修改诉求。</li><li>如果使用Integer也是不行的，虽然Integer使用引用传递，但Integer的value是使用final修饰的:</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> value;</span><br></pre></td></tr></table></figure><p>而AtomicInteger 是引用传递，并且value：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">int</span> value;</span><br></pre></td></tr></table></figure><p>所以使用AtomicInteger是合理的。</p><p>因为lambda表达式类似于匿名内部类的语法糖，所以上述情况也适用于lambda表达式。（事实上lambda并不等于匿名内部类的语法糖）。</p>]]></content>
    
    
    <summary type="html">学习NIO时遇到的问题。</summary>
    
    
    
    <category term="Java" scheme="http://lishuaiyun.cn/categories/Java/"/>
    
    
    <category term="JVM" scheme="http://lishuaiyun.cn/tags/JVM/"/>
    
    <category term="Java" scheme="http://lishuaiyun.cn/tags/Java/"/>
    
    <category term="NIO" scheme="http://lishuaiyun.cn/tags/NIO/"/>
    
  </entry>
  
</feed>
